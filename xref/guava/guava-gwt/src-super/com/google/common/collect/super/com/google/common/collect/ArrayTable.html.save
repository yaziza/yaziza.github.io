<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>ArrayTable xref</title>
<link type="text/css" rel="stylesheet" href="../../../../stylesheet.css" />
</head>
<body>
<div id="overview"><a href="../../../../../../../../../../../../../apidocs/com/google/common/collect/ArrayTable.html">View Javadoc</a></div><pre>
<a class="jxr_linenumber" name="L1" href="#L1">1</a>   <em class="jxr_comment">/*</em>
<a class="jxr_linenumber" name="L2" href="#L2">2</a>   <em class="jxr_comment"> * Copyright (C) 2009 The Guava Authors</em>
<a class="jxr_linenumber" name="L3" href="#L3">3</a>   <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L4" href="#L4">4</a>   <em class="jxr_comment"> * Licensed under the Apache License, Version 2.0 (the "License");</em>
<a class="jxr_linenumber" name="L5" href="#L5">5</a>   <em class="jxr_comment"> * you may not use this file except in compliance with the License.</em>
<a class="jxr_linenumber" name="L6" href="#L6">6</a>   <em class="jxr_comment"> * You may obtain a copy of the License at</em>
<a class="jxr_linenumber" name="L7" href="#L7">7</a>   <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L8" href="#L8">8</a>   <em class="jxr_comment"> * <a href="http://www.apache.org/licenses/LICENSE-2." target="alexandria_uri">http://www.apache.org/licenses/LICENSE-2.</a>0</em>
<a class="jxr_linenumber" name="L9" href="#L9">9</a>   <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L10" href="#L10">10</a>  <em class="jxr_comment"> * Unless required by applicable law or agreed to in writing, software</em>
<a class="jxr_linenumber" name="L11" href="#L11">11</a>  <em class="jxr_comment"> * distributed under the License is distributed on an "AS IS" BASIS,</em>
<a class="jxr_linenumber" name="L12" href="#L12">12</a>  <em class="jxr_comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</em>
<a class="jxr_linenumber" name="L13" href="#L13">13</a>  <em class="jxr_comment"> * See the License for the specific language governing permissions and</em>
<a class="jxr_linenumber" name="L14" href="#L14">14</a>  <em class="jxr_comment"> * limitations under the License.</em>
<a class="jxr_linenumber" name="L15" href="#L15">15</a>  <em class="jxr_comment"> */</em>
<a class="jxr_linenumber" name="L16" href="#L16">16</a>  
<a class="jxr_linenumber" name="L17" href="#L17">17</a>  <strong class="jxr_keyword">package</strong> com.google.common.collect;
<a class="jxr_linenumber" name="L18" href="#L18">18</a>  
<a class="jxr_linenumber" name="L19" href="#L19">19</a>  <strong class="jxr_keyword">import</strong> <strong class="jxr_keyword">static</strong> com.google.common.base.Preconditions.checkArgument;
<a class="jxr_linenumber" name="L20" href="#L20">20</a>  <strong class="jxr_keyword">import</strong> <strong class="jxr_keyword">static</strong> com.google.common.base.Preconditions.checkElementIndex;
<a class="jxr_linenumber" name="L21" href="#L21">21</a>  <strong class="jxr_keyword">import</strong> <strong class="jxr_keyword">static</strong> com.google.common.base.Preconditions.checkNotNull;
<a class="jxr_linenumber" name="L22" href="#L22">22</a>  
<a class="jxr_linenumber" name="L23" href="#L23">23</a>  <strong class="jxr_keyword">import</strong> com.google.common.annotations.Beta;
<a class="jxr_linenumber" name="L24" href="#L24">24</a>  <strong class="jxr_keyword">import</strong> com.google.common.annotations.GwtCompatible;
<a class="jxr_linenumber" name="L25" href="#L25">25</a>  <strong class="jxr_keyword">import</strong> com.google.common.base.Objects;
<a class="jxr_linenumber" name="L26" href="#L26">26</a>  
<a class="jxr_linenumber" name="L27" href="#L27">27</a>  <strong class="jxr_keyword">import</strong> java.io.Serializable;
<a class="jxr_linenumber" name="L28" href="#L28">28</a>  <strong class="jxr_keyword">import</strong> java.util.Arrays;
<a class="jxr_linenumber" name="L29" href="#L29">29</a>  <strong class="jxr_keyword">import</strong> java.util.Collection;
<a class="jxr_linenumber" name="L30" href="#L30">30</a>  <strong class="jxr_keyword">import</strong> java.util.Iterator;
<a class="jxr_linenumber" name="L31" href="#L31">31</a>  <strong class="jxr_keyword">import</strong> java.util.List;
<a class="jxr_linenumber" name="L32" href="#L32">32</a>  <strong class="jxr_keyword">import</strong> java.util.Map;
<a class="jxr_linenumber" name="L33" href="#L33">33</a>  <strong class="jxr_keyword">import</strong> java.util.Set;
<a class="jxr_linenumber" name="L34" href="#L34">34</a>  
<a class="jxr_linenumber" name="L35" href="#L35">35</a>  <strong class="jxr_keyword">import</strong> javax.annotation.Nullable;
<a class="jxr_linenumber" name="L36" href="#L36">36</a>  
<a class="jxr_linenumber" name="L37" href="#L37">37</a>  <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L38" href="#L38">38</a>  <em class="jxr_javadoccomment"> * Fixed-size {@link Table} implementation backed by a two-dimensional array.</em>
<a class="jxr_linenumber" name="L39" href="#L39">39</a>  <em class="jxr_javadoccomment"> *</em>
<a class="jxr_linenumber" name="L40" href="#L40">40</a>  <em class="jxr_javadoccomment"> * &lt;p&gt;The allowed row and column keys must be supplied when the table is</em>
<a class="jxr_linenumber" name="L41" href="#L41">41</a>  <em class="jxr_javadoccomment"> * created. The table always contains a mapping for every row key / column pair.</em>
<a class="jxr_linenumber" name="L42" href="#L42">42</a>  <em class="jxr_javadoccomment"> * The value corresponding to a given row and column is null unless another</em>
<a class="jxr_linenumber" name="L43" href="#L43">43</a>  <em class="jxr_javadoccomment"> * value is provided.</em>
<a class="jxr_linenumber" name="L44" href="#L44">44</a>  <em class="jxr_javadoccomment"> *</em>
<a class="jxr_linenumber" name="L45" href="#L45">45</a>  <em class="jxr_javadoccomment"> * &lt;p&gt;The table's size is constant: the product of the number of supplied row</em>
<a class="jxr_linenumber" name="L46" href="#L46">46</a>  <em class="jxr_javadoccomment"> * keys and the number of supplied column keys. The {@code remove} and {@code</em>
<a class="jxr_linenumber" name="L47" href="#L47">47</a>  <em class="jxr_javadoccomment"> * clear} methods are not supported by the table or its views. The {@link</em>
<a class="jxr_linenumber" name="L48" href="#L48">48</a>  <em class="jxr_javadoccomment"> * #erase} and {@link #eraseAll} methods may be used instead.</em>
<a class="jxr_linenumber" name="L49" href="#L49">49</a>  <em class="jxr_javadoccomment"> *</em>
<a class="jxr_linenumber" name="L50" href="#L50">50</a>  <em class="jxr_javadoccomment"> * &lt;p&gt;The ordering of the row and column keys provided when the table is</em>
<a class="jxr_linenumber" name="L51" href="#L51">51</a>  <em class="jxr_javadoccomment"> * constructed determines the iteration ordering across rows and columns in the</em>
<a class="jxr_linenumber" name="L52" href="#L52">52</a>  <em class="jxr_javadoccomment"> * table's views. None of the view iterators support {@link Iterator#remove}.</em>
<a class="jxr_linenumber" name="L53" href="#L53">53</a>  <em class="jxr_javadoccomment"> * If the table is modified after an iterator is created, the iterator remains</em>
<a class="jxr_linenumber" name="L54" href="#L54">54</a>  <em class="jxr_javadoccomment"> * valid.</em>
<a class="jxr_linenumber" name="L55" href="#L55">55</a>  <em class="jxr_javadoccomment"> *</em>
<a class="jxr_linenumber" name="L56" href="#L56">56</a>  <em class="jxr_javadoccomment"> * &lt;p&gt;This class requires less memory than the {@link HashBasedTable} and {@link</em>
<a class="jxr_linenumber" name="L57" href="#L57">57</a>  <em class="jxr_javadoccomment"> * TreeBasedTable} implementations, except when the table is sparse.</em>
<a class="jxr_linenumber" name="L58" href="#L58">58</a>  <em class="jxr_javadoccomment"> *</em>
<a class="jxr_linenumber" name="L59" href="#L59">59</a>  <em class="jxr_javadoccomment"> * &lt;p&gt;Null row keys or column keys are not permitted.</em>
<a class="jxr_linenumber" name="L60" href="#L60">60</a>  <em class="jxr_javadoccomment"> *</em>
<a class="jxr_linenumber" name="L61" href="#L61">61</a>  <em class="jxr_javadoccomment"> * &lt;p&gt;This class provides methods involving the underlying array structure,</em>
<a class="jxr_linenumber" name="L62" href="#L62">62</a>  <em class="jxr_javadoccomment"> * where the array indices correspond to the position of a row or column in the</em>
<a class="jxr_linenumber" name="L63" href="#L63">63</a>  <em class="jxr_javadoccomment"> * lists of allowed keys and values. See the {@link #at}, {@link #set}, {@link</em>
<a class="jxr_linenumber" name="L64" href="#L64">64</a>  <em class="jxr_javadoccomment"> * #toArray}, {@link #rowKeyList}, and {@link #columnKeyList} methods for more</em>
<a class="jxr_linenumber" name="L65" href="#L65">65</a>  <em class="jxr_javadoccomment"> * details.</em>
<a class="jxr_linenumber" name="L66" href="#L66">66</a>  <em class="jxr_javadoccomment"> *</em>
<a class="jxr_linenumber" name="L67" href="#L67">67</a>  <em class="jxr_javadoccomment"> * &lt;p&gt;Note that this implementation is not synchronized. If multiple threads</em>
<a class="jxr_linenumber" name="L68" href="#L68">68</a>  <em class="jxr_javadoccomment"> * access the same cell of an {@code ArrayTable} concurrently and one of the</em>
<a class="jxr_linenumber" name="L69" href="#L69">69</a>  <em class="jxr_javadoccomment"> * threads modifies its value, there is no guarantee that the new value will be</em>
<a class="jxr_linenumber" name="L70" href="#L70">70</a>  <em class="jxr_javadoccomment"> * fully visible to the other threads. To guarantee that modifications are</em>
<a class="jxr_linenumber" name="L71" href="#L71">71</a>  <em class="jxr_javadoccomment"> * visible, synchronize access to the table. Unlike other {@code Table}</em>
<a class="jxr_linenumber" name="L72" href="#L72">72</a>  <em class="jxr_javadoccomment"> * implementations, synchronization is unnecessary between a thread that writes</em>
<a class="jxr_linenumber" name="L73" href="#L73">73</a>  <em class="jxr_javadoccomment"> * to one cell and a thread that reads from another.</em>
<a class="jxr_linenumber" name="L74" href="#L74">74</a>  <em class="jxr_javadoccomment"> *</em>
<a class="jxr_linenumber" name="L75" href="#L75">75</a>  <em class="jxr_javadoccomment"> * &lt;p&gt;See the Guava User Guide article on &lt;a href=</em>
<a class="jxr_linenumber" name="L76" href="#L76">76</a>  <em class="jxr_javadoccomment"> * "<a href="http://code.google.com/p/guava-libraries/wiki/NewCollectionTypesExplained" target="alexandria_uri">http://code.google.com/p/guava-libraries/wiki/NewCollectionTypesExplained</a>#Table"&gt;</em>
<a class="jxr_linenumber" name="L77" href="#L77">77</a>  <em class="jxr_javadoccomment"> * {@code Table}&lt;/a&gt;.</em>
<a class="jxr_linenumber" name="L78" href="#L78">78</a>  <em class="jxr_javadoccomment"> *</em>
<a class="jxr_linenumber" name="L79" href="#L79">79</a>  <em class="jxr_javadoccomment"> * @author Jared Levy</em>
<a class="jxr_linenumber" name="L80" href="#L80">80</a>  <em class="jxr_javadoccomment"> * @since 10.0</em>
<a class="jxr_linenumber" name="L81" href="#L81">81</a>  <em class="jxr_javadoccomment"> */</em>
<a class="jxr_linenumber" name="L82" href="#L82">82</a>  @Beta
<a class="jxr_linenumber" name="L83" href="#L83">83</a>  @GwtCompatible(emulated = <strong class="jxr_keyword">true</strong>)
<a class="jxr_linenumber" name="L84" href="#L84">84</a>  <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">class</strong> ArrayTable&lt;R, C, V&gt; <strong class="jxr_keyword">extends</strong> AbstractTable&lt;R, C, V&gt; <strong class="jxr_keyword">implements</strong> Serializable {
<a class="jxr_linenumber" name="L85" href="#L85">85</a>  
<a class="jxr_linenumber" name="L86" href="#L86">86</a>    <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L87" href="#L87">87</a>  <em class="jxr_javadoccomment">   * Creates an empty {@code ArrayTable}.</em>
<a class="jxr_linenumber" name="L88" href="#L88">88</a>  <em class="jxr_javadoccomment">   *</em>
<a class="jxr_linenumber" name="L89" href="#L89">89</a>  <em class="jxr_javadoccomment">   * @param rowKeys row keys that may be stored in the generated table</em>
<a class="jxr_linenumber" name="L90" href="#L90">90</a>  <em class="jxr_javadoccomment">   * @param columnKeys column keys that may be stored in the generated table</em>
<a class="jxr_linenumber" name="L91" href="#L91">91</a>  <em class="jxr_javadoccomment">   * @throws NullPointerException if any of the provided keys is null</em>
<a class="jxr_linenumber" name="L92" href="#L92">92</a>  <em class="jxr_javadoccomment">   * @throws IllegalArgumentException if {@code rowKeys} or {@code columnKeys}</em>
<a class="jxr_linenumber" name="L93" href="#L93">93</a>  <em class="jxr_javadoccomment">   *     contains duplicates or is empty</em>
<a class="jxr_linenumber" name="L94" href="#L94">94</a>  <em class="jxr_javadoccomment">   */</em>
<a class="jxr_linenumber" name="L95" href="#L95">95</a>    <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">static</strong> &lt;R, C, V&gt; ArrayTable&lt;R, C, V&gt; create(
<a class="jxr_linenumber" name="L96" href="#L96">96</a>        Iterable&lt;? <strong class="jxr_keyword">extends</strong> R&gt; rowKeys, Iterable&lt;? <strong class="jxr_keyword">extends</strong> C&gt; columnKeys) {
<a class="jxr_linenumber" name="L97" href="#L97">97</a>      <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">new</strong> ArrayTable&lt;R, C, V&gt;(rowKeys, columnKeys);
<a class="jxr_linenumber" name="L98" href="#L98">98</a>    }
<a class="jxr_linenumber" name="L99" href="#L99">99</a>  
<a class="jxr_linenumber" name="L100" href="#L100">100</a>   <em class="jxr_comment">/*</em>
<a class="jxr_linenumber" name="L101" href="#L101">101</a> <em class="jxr_comment">   * TODO(jlevy): Add factory methods taking an Enum class, instead of an</em>
<a class="jxr_linenumber" name="L102" href="#L102">102</a> <em class="jxr_comment">   * iterable, to specify the allowed row keys and/or column keys. Note that</em>
<a class="jxr_linenumber" name="L103" href="#L103">103</a> <em class="jxr_comment">   * custom serialization logic is needed to support different enum sizes during</em>
<a class="jxr_linenumber" name="L104" href="#L104">104</a> <em class="jxr_comment">   * serialization and deserialization.</em>
<a class="jxr_linenumber" name="L105" href="#L105">105</a> <em class="jxr_comment">   */</em>
<a class="jxr_linenumber" name="L106" href="#L106">106</a> 
<a class="jxr_linenumber" name="L107" href="#L107">107</a>   <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L108" href="#L108">108</a> <em class="jxr_javadoccomment">   * Creates an {@code ArrayTable} with the mappings in the provided table.</em>
<a class="jxr_linenumber" name="L109" href="#L109">109</a> <em class="jxr_javadoccomment">   *</em>
<a class="jxr_linenumber" name="L110" href="#L110">110</a> <em class="jxr_javadoccomment">   * &lt;p&gt;If {@code table} includes a mapping with row key {@code r} and a</em>
<a class="jxr_linenumber" name="L111" href="#L111">111</a> <em class="jxr_javadoccomment">   * separate mapping with column key {@code c}, the returned table contains a</em>
<a class="jxr_linenumber" name="L112" href="#L112">112</a> <em class="jxr_javadoccomment">   * mapping with row key {@code r} and column key {@code c}. If that row key /</em>
<a class="jxr_linenumber" name="L113" href="#L113">113</a> <em class="jxr_javadoccomment">   * column key pair in not in {@code table}, the pair maps to {@code null} in</em>
<a class="jxr_linenumber" name="L114" href="#L114">114</a> <em class="jxr_javadoccomment">   * the generated table.</em>
<a class="jxr_linenumber" name="L115" href="#L115">115</a> <em class="jxr_javadoccomment">   *</em>
<a class="jxr_linenumber" name="L116" href="#L116">116</a> <em class="jxr_javadoccomment">   * &lt;p&gt;The returned table allows subsequent {@code put} calls with the row keys</em>
<a class="jxr_linenumber" name="L117" href="#L117">117</a> <em class="jxr_javadoccomment">   * in {@code table.rowKeySet()} and the column keys in {@code</em>
<a class="jxr_linenumber" name="L118" href="#L118">118</a> <em class="jxr_javadoccomment">   * table.columnKeySet()}. Calling {@link #put} with other keys leads to an</em>
<a class="jxr_linenumber" name="L119" href="#L119">119</a> <em class="jxr_javadoccomment">   * {@code IllegalArgumentException}.</em>
<a class="jxr_linenumber" name="L120" href="#L120">120</a> <em class="jxr_javadoccomment">   *</em>
<a class="jxr_linenumber" name="L121" href="#L121">121</a> <em class="jxr_javadoccomment">   * &lt;p&gt;The ordering of {@code table.rowKeySet()} and {@code</em>
<a class="jxr_linenumber" name="L122" href="#L122">122</a> <em class="jxr_javadoccomment">   * table.columnKeySet()} determines the row and column iteration ordering of</em>
<a class="jxr_linenumber" name="L123" href="#L123">123</a> <em class="jxr_javadoccomment">   * the returned table.</em>
<a class="jxr_linenumber" name="L124" href="#L124">124</a> <em class="jxr_javadoccomment">   *</em>
<a class="jxr_linenumber" name="L125" href="#L125">125</a> <em class="jxr_javadoccomment">   * @throws NullPointerException if {@code table} has a null key</em>
<a class="jxr_linenumber" name="L126" href="#L126">126</a> <em class="jxr_javadoccomment">   * @throws IllegalArgumentException if the provided table is empty</em>
<a class="jxr_linenumber" name="L127" href="#L127">127</a> <em class="jxr_javadoccomment">   */</em>
<a class="jxr_linenumber" name="L128" href="#L128">128</a>   <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">static</strong> &lt;R, C, V&gt; ArrayTable&lt;R, C, V&gt; create(Table&lt;R, C, V&gt; table) {
<a class="jxr_linenumber" name="L129" href="#L129">129</a>     <strong class="jxr_keyword">return</strong> (table instanceof ArrayTable&lt;?, ?, ?&gt;)
<a class="jxr_linenumber" name="L130" href="#L130">130</a>       ? <strong class="jxr_keyword">new</strong> ArrayTable&lt;R, C, V&gt;((ArrayTable&lt;R, C, V&gt;) table)
<a class="jxr_linenumber" name="L131" href="#L131">131</a>       : <strong class="jxr_keyword">new</strong> ArrayTable&lt;R, C, V&gt;(table);
<a class="jxr_linenumber" name="L132" href="#L132">132</a>   }
<a class="jxr_linenumber" name="L133" href="#L133">133</a> 
<a class="jxr_linenumber" name="L134" href="#L134">134</a>   <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">final</strong> ImmutableList&lt;R&gt; rowList;
<a class="jxr_linenumber" name="L135" href="#L135">135</a>   <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">final</strong> ImmutableList&lt;C&gt; columnList;
<a class="jxr_linenumber" name="L136" href="#L136">136</a> 
<a class="jxr_linenumber" name="L137" href="#L137">137</a>   <em class="jxr_comment">// TODO(jlevy): Add getters returning rowKeyToIndex and columnKeyToIndex?</em>
<a class="jxr_linenumber" name="L138" href="#L138">138</a>   <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">final</strong> ImmutableMap&lt;R, Integer&gt; rowKeyToIndex;
<a class="jxr_linenumber" name="L139" href="#L139">139</a>   <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">final</strong> ImmutableMap&lt;C, Integer&gt; columnKeyToIndex;
<a class="jxr_linenumber" name="L140" href="#L140">140</a>   <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">final</strong> V[][] array;
<a class="jxr_linenumber" name="L141" href="#L141">141</a> 
<a class="jxr_linenumber" name="L142" href="#L142">142</a>   <strong class="jxr_keyword">private</strong> <a href="../../../../com/google/common/collect/ArrayTable.html">ArrayTable</a>(Iterable&lt;? <strong class="jxr_keyword">extends</strong> R&gt; rowKeys,
<a class="jxr_linenumber" name="L143" href="#L143">143</a>       Iterable&lt;? <strong class="jxr_keyword">extends</strong> C&gt; columnKeys) {
<a class="jxr_linenumber" name="L144" href="#L144">144</a>     <strong class="jxr_keyword">this</strong>.rowList = ImmutableList.copyOf(rowKeys);
<a class="jxr_linenumber" name="L145" href="#L145">145</a>     <strong class="jxr_keyword">this</strong>.columnList = ImmutableList.copyOf(columnKeys);
<a class="jxr_linenumber" name="L146" href="#L146">146</a>     checkArgument(!rowList.isEmpty());
<a class="jxr_linenumber" name="L147" href="#L147">147</a>     checkArgument(!columnList.isEmpty());
<a class="jxr_linenumber" name="L148" href="#L148">148</a> 
<a class="jxr_linenumber" name="L149" href="#L149">149</a>     <em class="jxr_comment">/*</em>
<a class="jxr_linenumber" name="L150" href="#L150">150</a> <em class="jxr_comment">     * TODO(jlevy): Support empty rowKeys or columnKeys? If we do, when</em>
<a class="jxr_linenumber" name="L151" href="#L151">151</a> <em class="jxr_comment">     * columnKeys is empty but rowKeys isn't, the table is empty but</em>
<a class="jxr_linenumber" name="L152" href="#L152">152</a> <em class="jxr_comment">     * containsRow() can return true and rowKeySet() isn't empty.</em>
<a class="jxr_linenumber" name="L153" href="#L153">153</a> <em class="jxr_comment">     */</em>
<a class="jxr_linenumber" name="L154" href="#L154">154</a>     rowKeyToIndex = index(rowList);
<a class="jxr_linenumber" name="L155" href="#L155">155</a>     columnKeyToIndex = index(columnList);
<a class="jxr_linenumber" name="L156" href="#L156">156</a> 
<a class="jxr_linenumber" name="L157" href="#L157">157</a>     @SuppressWarnings(<span class="jxr_string">"unchecked"</span>)
<a class="jxr_linenumber" name="L158" href="#L158">158</a>     V[][] tmpArray
<a class="jxr_linenumber" name="L159" href="#L159">159</a>         = (V[][]) <strong class="jxr_keyword">new</strong> Object[rowList.size()][columnList.size()];
<a class="jxr_linenumber" name="L160" href="#L160">160</a>     array = tmpArray;
<a class="jxr_linenumber" name="L161" href="#L161">161</a>     <em class="jxr_comment">// Necessary because in GWT the arrays are initialized with "undefined" instead of null.</em>
<a class="jxr_linenumber" name="L162" href="#L162">162</a>     eraseAll();
<a class="jxr_linenumber" name="L163" href="#L163">163</a>   }
<a class="jxr_linenumber" name="L164" href="#L164">164</a> 
<a class="jxr_linenumber" name="L165" href="#L165">165</a>   <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">static</strong> &lt;E&gt; ImmutableMap&lt;E, Integer&gt; index(List&lt;E&gt; list) {
<a class="jxr_linenumber" name="L166" href="#L166">166</a>     ImmutableMap.Builder&lt;E, Integer&gt; columnBuilder = ImmutableMap.builder();
<a class="jxr_linenumber" name="L167" href="#L167">167</a>     <strong class="jxr_keyword">for</strong> (<strong class="jxr_keyword">int</strong> i = 0; i &lt; list.size(); i++) {
<a class="jxr_linenumber" name="L168" href="#L168">168</a>       columnBuilder.put(list.get(i), i);
<a class="jxr_linenumber" name="L169" href="#L169">169</a>     }
<a class="jxr_linenumber" name="L170" href="#L170">170</a>     <strong class="jxr_keyword">return</strong> columnBuilder.build();
<a class="jxr_linenumber" name="L171" href="#L171">171</a>   }
<a class="jxr_linenumber" name="L172" href="#L172">172</a> 
<a class="jxr_linenumber" name="L173" href="#L173">173</a>   <strong class="jxr_keyword">private</strong> <a href="../../../../com/google/common/collect/ArrayTable.html">ArrayTable</a>(Table&lt;R, C, V&gt; table) {
<a class="jxr_linenumber" name="L174" href="#L174">174</a>     <strong class="jxr_keyword">this</strong>(table.rowKeySet(), table.columnKeySet());
<a class="jxr_linenumber" name="L175" href="#L175">175</a>     putAll(table);
<a class="jxr_linenumber" name="L176" href="#L176">176</a>   }
<a class="jxr_linenumber" name="L177" href="#L177">177</a> 
<a class="jxr_linenumber" name="L178" href="#L178">178</a>   <strong class="jxr_keyword">private</strong> <a href="../../../../com/google/common/collect/ArrayTable.html">ArrayTable</a>(ArrayTable&lt;R, C, V&gt; table) {
<a class="jxr_linenumber" name="L179" href="#L179">179</a>     rowList = table.rowList;
<a class="jxr_linenumber" name="L180" href="#L180">180</a>     columnList = table.columnList;
<a class="jxr_linenumber" name="L181" href="#L181">181</a>     rowKeyToIndex = table.rowKeyToIndex;
<a class="jxr_linenumber" name="L182" href="#L182">182</a>     columnKeyToIndex = table.columnKeyToIndex;
<a class="jxr_linenumber" name="L183" href="#L183">183</a>     @SuppressWarnings(<span class="jxr_string">"unchecked"</span>)
<a class="jxr_linenumber" name="L184" href="#L184">184</a>     V[][] copy = (V[][]) <strong class="jxr_keyword">new</strong> Object[rowList.size()][columnList.size()];
<a class="jxr_linenumber" name="L185" href="#L185">185</a>     array = copy;
<a class="jxr_linenumber" name="L186" href="#L186">186</a>     <em class="jxr_comment">// Necessary because in GWT the arrays are initialized with "undefined" instead of null.</em>
<a class="jxr_linenumber" name="L187" href="#L187">187</a>     eraseAll();
<a class="jxr_linenumber" name="L188" href="#L188">188</a>     <strong class="jxr_keyword">for</strong> (<strong class="jxr_keyword">int</strong> i = 0; i &lt; rowList.size(); i++) {
<a class="jxr_linenumber" name="L189" href="#L189">189</a>       System.arraycopy(table.array[i], 0, copy[i], 0, table.array[i].length);
<a class="jxr_linenumber" name="L190" href="#L190">190</a>     }
<a class="jxr_linenumber" name="L191" href="#L191">191</a>   }
<a class="jxr_linenumber" name="L192" href="#L192">192</a> 
<a class="jxr_linenumber" name="L193" href="#L193">193</a>   <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">abstract</strong> <strong class="jxr_keyword">static</strong> <strong class="jxr_keyword">class</strong> ArrayMap&lt;K, V&gt; <strong class="jxr_keyword">extends</strong> Maps.ImprovedAbstractMap&lt;K, V&gt; {
<a class="jxr_linenumber" name="L194" href="#L194">194</a>     <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">final</strong> ImmutableMap&lt;K, Integer&gt; keyIndex;
<a class="jxr_linenumber" name="L195" href="#L195">195</a> 
<a class="jxr_linenumber" name="L196" href="#L196">196</a>     <strong class="jxr_keyword">private</strong> <a href="../../../../com/google/common/collect/ArrayTable.html">ArrayMap</a>(ImmutableMap&lt;K, Integer&gt; keyIndex) {
<a class="jxr_linenumber" name="L197" href="#L197">197</a>       <strong class="jxr_keyword">this</strong>.keyIndex = keyIndex;
<a class="jxr_linenumber" name="L198" href="#L198">198</a>     }
<a class="jxr_linenumber" name="L199" href="#L199">199</a> 
<a class="jxr_linenumber" name="L200" href="#L200">200</a>     @Override
<a class="jxr_linenumber" name="L201" href="#L201">201</a>     <strong class="jxr_keyword">public</strong> Set&lt;K&gt; keySet() {
<a class="jxr_linenumber" name="L202" href="#L202">202</a>       <strong class="jxr_keyword">return</strong> keyIndex.keySet();
<a class="jxr_linenumber" name="L203" href="#L203">203</a>     }
<a class="jxr_linenumber" name="L204" href="#L204">204</a> 
<a class="jxr_linenumber" name="L205" href="#L205">205</a>     K getKey(<strong class="jxr_keyword">int</strong> index) {
<a class="jxr_linenumber" name="L206" href="#L206">206</a>       <strong class="jxr_keyword">return</strong> keyIndex.keySet().asList().get(index);
<a class="jxr_linenumber" name="L207" href="#L207">207</a>     }
<a class="jxr_linenumber" name="L208" href="#L208">208</a> 
<a class="jxr_linenumber" name="L209" href="#L209">209</a>     <strong class="jxr_keyword">abstract</strong> String getKeyRole();
<a class="jxr_linenumber" name="L210" href="#L210">210</a> 
<a class="jxr_linenumber" name="L211" href="#L211">211</a>     @Nullable <strong class="jxr_keyword">abstract</strong> V getValue(<strong class="jxr_keyword">int</strong> index);
<a class="jxr_linenumber" name="L212" href="#L212">212</a> 
<a class="jxr_linenumber" name="L213" href="#L213">213</a>     @Nullable <strong class="jxr_keyword">abstract</strong> V setValue(<strong class="jxr_keyword">int</strong> index, V newValue);
<a class="jxr_linenumber" name="L214" href="#L214">214</a> 
<a class="jxr_linenumber" name="L215" href="#L215">215</a>     @Override
<a class="jxr_linenumber" name="L216" href="#L216">216</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">int</strong> size() {
<a class="jxr_linenumber" name="L217" href="#L217">217</a>       <strong class="jxr_keyword">return</strong> keyIndex.size();
<a class="jxr_linenumber" name="L218" href="#L218">218</a>     }
<a class="jxr_linenumber" name="L219" href="#L219">219</a> 
<a class="jxr_linenumber" name="L220" href="#L220">220</a>     @Override
<a class="jxr_linenumber" name="L221" href="#L221">221</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">boolean</strong> isEmpty() {
<a class="jxr_linenumber" name="L222" href="#L222">222</a>       <strong class="jxr_keyword">return</strong> keyIndex.isEmpty();
<a class="jxr_linenumber" name="L223" href="#L223">223</a>     }
<a class="jxr_linenumber" name="L224" href="#L224">224</a> 
<a class="jxr_linenumber" name="L225" href="#L225">225</a>     @Override
<a class="jxr_linenumber" name="L226" href="#L226">226</a>     <strong class="jxr_keyword">protected</strong> Set&lt;Entry&lt;K, V&gt;&gt; createEntrySet() {
<a class="jxr_linenumber" name="L227" href="#L227">227</a>       <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">new</strong> Maps.EntrySet&lt;K, V&gt;() {
<a class="jxr_linenumber" name="L228" href="#L228">228</a>         @Override
<a class="jxr_linenumber" name="L229" href="#L229">229</a>         Map&lt;K, V&gt; map() {
<a class="jxr_linenumber" name="L230" href="#L230">230</a>           <strong class="jxr_keyword">return</strong> ArrayMap.<strong class="jxr_keyword">this</strong>;
<a class="jxr_linenumber" name="L231" href="#L231">231</a>         }
<a class="jxr_linenumber" name="L232" href="#L232">232</a> 
<a class="jxr_linenumber" name="L233" href="#L233">233</a>         @Override
<a class="jxr_linenumber" name="L234" href="#L234">234</a>         <strong class="jxr_keyword">public</strong> Iterator&lt;Entry&lt;K, V&gt;&gt; iterator() {
<a class="jxr_linenumber" name="L235" href="#L235">235</a>           <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">new</strong> AbstractIndexedListIterator&lt;Entry&lt;K, V&gt;&gt;(size()) {
<a class="jxr_linenumber" name="L236" href="#L236">236</a>             @Override
<a class="jxr_linenumber" name="L237" href="#L237">237</a>             <strong class="jxr_keyword">protected</strong> Entry&lt;K, V&gt; get(<strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">int</strong> index) {
<a class="jxr_linenumber" name="L238" href="#L238">238</a>               <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">new</strong> AbstractMapEntry&lt;K, V&gt;() {
<a class="jxr_linenumber" name="L239" href="#L239">239</a>                 @Override
<a class="jxr_linenumber" name="L240" href="#L240">240</a>                 <strong class="jxr_keyword">public</strong> K getKey() {
<a class="jxr_linenumber" name="L241" href="#L241">241</a>                   <strong class="jxr_keyword">return</strong> ArrayMap.<strong class="jxr_keyword">this</strong>.getKey(index);
<a class="jxr_linenumber" name="L242" href="#L242">242</a>                 }
<a class="jxr_linenumber" name="L243" href="#L243">243</a> 
<a class="jxr_linenumber" name="L244" href="#L244">244</a>                 @Override
<a class="jxr_linenumber" name="L245" href="#L245">245</a>                 <strong class="jxr_keyword">public</strong> V getValue() {
<a class="jxr_linenumber" name="L246" href="#L246">246</a>                   <strong class="jxr_keyword">return</strong> ArrayMap.<strong class="jxr_keyword">this</strong>.getValue(index);
<a class="jxr_linenumber" name="L247" href="#L247">247</a>                 }
<a class="jxr_linenumber" name="L248" href="#L248">248</a> 
<a class="jxr_linenumber" name="L249" href="#L249">249</a>                 @Override
<a class="jxr_linenumber" name="L250" href="#L250">250</a>                 <strong class="jxr_keyword">public</strong> V setValue(V value) {
<a class="jxr_linenumber" name="L251" href="#L251">251</a>                   <strong class="jxr_keyword">return</strong> ArrayMap.<strong class="jxr_keyword">this</strong>.setValue(index, value);
<a class="jxr_linenumber" name="L252" href="#L252">252</a>                 }
<a class="jxr_linenumber" name="L253" href="#L253">253</a>               };
<a class="jxr_linenumber" name="L254" href="#L254">254</a>             }
<a class="jxr_linenumber" name="L255" href="#L255">255</a>           };
<a class="jxr_linenumber" name="L256" href="#L256">256</a>         }
<a class="jxr_linenumber" name="L257" href="#L257">257</a>       };
<a class="jxr_linenumber" name="L258" href="#L258">258</a>     }
<a class="jxr_linenumber" name="L259" href="#L259">259</a> 
<a class="jxr_linenumber" name="L260" href="#L260">260</a>     <em class="jxr_comment">// TODO(user): consider an optimized values() implementation</em>
<a class="jxr_linenumber" name="L261" href="#L261">261</a> 
<a class="jxr_linenumber" name="L262" href="#L262">262</a>     @Override
<a class="jxr_linenumber" name="L263" href="#L263">263</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">boolean</strong> containsKey(@Nullable Object key) {
<a class="jxr_linenumber" name="L264" href="#L264">264</a>       <strong class="jxr_keyword">return</strong> keyIndex.containsKey(key);
<a class="jxr_linenumber" name="L265" href="#L265">265</a>     }
<a class="jxr_linenumber" name="L266" href="#L266">266</a> 
<a class="jxr_linenumber" name="L267" href="#L267">267</a>     @Override
<a class="jxr_linenumber" name="L268" href="#L268">268</a>     <strong class="jxr_keyword">public</strong> V get(@Nullable Object key) {
<a class="jxr_linenumber" name="L269" href="#L269">269</a>       Integer index = keyIndex.get(key);
<a class="jxr_linenumber" name="L270" href="#L270">270</a>       <strong class="jxr_keyword">if</strong> (index == <strong class="jxr_keyword">null</strong>) {
<a class="jxr_linenumber" name="L271" href="#L271">271</a>         <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">null</strong>;
<a class="jxr_linenumber" name="L272" href="#L272">272</a>       } <strong class="jxr_keyword">else</strong> {
<a class="jxr_linenumber" name="L273" href="#L273">273</a>         <strong class="jxr_keyword">return</strong> getValue(index);
<a class="jxr_linenumber" name="L274" href="#L274">274</a>       }
<a class="jxr_linenumber" name="L275" href="#L275">275</a>     }
<a class="jxr_linenumber" name="L276" href="#L276">276</a> 
<a class="jxr_linenumber" name="L277" href="#L277">277</a>     @Override
<a class="jxr_linenumber" name="L278" href="#L278">278</a>     <strong class="jxr_keyword">public</strong> V put(K key, V value) {
<a class="jxr_linenumber" name="L279" href="#L279">279</a>       Integer index = keyIndex.get(key);
<a class="jxr_linenumber" name="L280" href="#L280">280</a>       <strong class="jxr_keyword">if</strong> (index == <strong class="jxr_keyword">null</strong>) {
<a class="jxr_linenumber" name="L281" href="#L281">281</a>         <strong class="jxr_keyword">throw</strong> <strong class="jxr_keyword">new</strong> IllegalArgumentException(
<a class="jxr_linenumber" name="L282" href="#L282">282</a>             getKeyRole() + <span class="jxr_string">" "</span> + key + <span class="jxr_string">" not in "</span> + keyIndex.keySet());
<a class="jxr_linenumber" name="L283" href="#L283">283</a>       }
<a class="jxr_linenumber" name="L284" href="#L284">284</a>       <strong class="jxr_keyword">return</strong> setValue(index, value);
<a class="jxr_linenumber" name="L285" href="#L285">285</a>     }
<a class="jxr_linenumber" name="L286" href="#L286">286</a> 
<a class="jxr_linenumber" name="L287" href="#L287">287</a>     @Override
<a class="jxr_linenumber" name="L288" href="#L288">288</a>     <strong class="jxr_keyword">public</strong> V remove(Object key) {
<a class="jxr_linenumber" name="L289" href="#L289">289</a>       <strong class="jxr_keyword">throw</strong> <strong class="jxr_keyword">new</strong> UnsupportedOperationException();
<a class="jxr_linenumber" name="L290" href="#L290">290</a>     }
<a class="jxr_linenumber" name="L291" href="#L291">291</a> 
<a class="jxr_linenumber" name="L292" href="#L292">292</a>     @Override
<a class="jxr_linenumber" name="L293" href="#L293">293</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> clear() {
<a class="jxr_linenumber" name="L294" href="#L294">294</a>       <strong class="jxr_keyword">throw</strong> <strong class="jxr_keyword">new</strong> UnsupportedOperationException();
<a class="jxr_linenumber" name="L295" href="#L295">295</a>     }
<a class="jxr_linenumber" name="L296" href="#L296">296</a>   }
<a class="jxr_linenumber" name="L297" href="#L297">297</a> 
<a class="jxr_linenumber" name="L298" href="#L298">298</a>   <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L299" href="#L299">299</a> <em class="jxr_javadoccomment">   * Returns, as an immutable list, the row keys provided when the table was</em>
<a class="jxr_linenumber" name="L300" href="#L300">300</a> <em class="jxr_javadoccomment">   * constructed, including those that are mapped to null values only.</em>
<a class="jxr_linenumber" name="L301" href="#L301">301</a> <em class="jxr_javadoccomment">   */</em>
<a class="jxr_linenumber" name="L302" href="#L302">302</a>   <strong class="jxr_keyword">public</strong> ImmutableList&lt;R&gt; rowKeyList() {
<a class="jxr_linenumber" name="L303" href="#L303">303</a>     <strong class="jxr_keyword">return</strong> rowList;
<a class="jxr_linenumber" name="L304" href="#L304">304</a>   }
<a class="jxr_linenumber" name="L305" href="#L305">305</a> 
<a class="jxr_linenumber" name="L306" href="#L306">306</a>   <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L307" href="#L307">307</a> <em class="jxr_javadoccomment">   * Returns, as an immutable list, the column keys provided when the table was</em>
<a class="jxr_linenumber" name="L308" href="#L308">308</a> <em class="jxr_javadoccomment">   * constructed, including those that are mapped to null values only.</em>
<a class="jxr_linenumber" name="L309" href="#L309">309</a> <em class="jxr_javadoccomment">   */</em>
<a class="jxr_linenumber" name="L310" href="#L310">310</a>   <strong class="jxr_keyword">public</strong> ImmutableList&lt;C&gt; columnKeyList() {
<a class="jxr_linenumber" name="L311" href="#L311">311</a>     <strong class="jxr_keyword">return</strong> columnList;
<a class="jxr_linenumber" name="L312" href="#L312">312</a>   }
<a class="jxr_linenumber" name="L313" href="#L313">313</a> 
<a class="jxr_linenumber" name="L314" href="#L314">314</a>   <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L315" href="#L315">315</a> <em class="jxr_javadoccomment">   * Returns the value corresponding to the specified row and column indices.</em>
<a class="jxr_linenumber" name="L316" href="#L316">316</a> <em class="jxr_javadoccomment">   * The same value is returned by {@code</em>
<a class="jxr_linenumber" name="L317" href="#L317">317</a> <em class="jxr_javadoccomment">   * get(rowKeyList().get(rowIndex), columnKeyList().get(columnIndex))}, but</em>
<a class="jxr_linenumber" name="L318" href="#L318">318</a> <em class="jxr_javadoccomment">   * this method runs more quickly.</em>
<a class="jxr_linenumber" name="L319" href="#L319">319</a> <em class="jxr_javadoccomment">   *</em>
<a class="jxr_linenumber" name="L320" href="#L320">320</a> <em class="jxr_javadoccomment">   * @param rowIndex position of the row key in {@link #rowKeyList()}</em>
<a class="jxr_linenumber" name="L321" href="#L321">321</a> <em class="jxr_javadoccomment">   * @param columnIndex position of the row key in {@link #columnKeyList()}</em>
<a class="jxr_linenumber" name="L322" href="#L322">322</a> <em class="jxr_javadoccomment">   * @return the value with the specified row and column</em>
<a class="jxr_linenumber" name="L323" href="#L323">323</a> <em class="jxr_javadoccomment">   * @throws IndexOutOfBoundsException if either index is negative, {@code</em>
<a class="jxr_linenumber" name="L324" href="#L324">324</a> <em class="jxr_javadoccomment">   *     rowIndex} is greater then or equal to the number of allowed row keys,</em>
<a class="jxr_linenumber" name="L325" href="#L325">325</a> <em class="jxr_javadoccomment">   *     or {@code columnIndex} is greater then or equal to the number of</em>
<a class="jxr_linenumber" name="L326" href="#L326">326</a> <em class="jxr_javadoccomment">   *     allowed column keys</em>
<a class="jxr_linenumber" name="L327" href="#L327">327</a> <em class="jxr_javadoccomment">   */</em>
<a class="jxr_linenumber" name="L328" href="#L328">328</a>   <strong class="jxr_keyword">public</strong> V at(<strong class="jxr_keyword">int</strong> rowIndex, <strong class="jxr_keyword">int</strong> columnIndex) {
<a class="jxr_linenumber" name="L329" href="#L329">329</a>     <em class="jxr_comment">// In GWT array access never throws IndexOutOfBoundsException.</em>
<a class="jxr_linenumber" name="L330" href="#L330">330</a>     checkElementIndex(rowIndex, rowList.size());
<a class="jxr_linenumber" name="L331" href="#L331">331</a>     checkElementIndex(columnIndex, columnList.size());
<a class="jxr_linenumber" name="L332" href="#L332">332</a>     <strong class="jxr_keyword">return</strong> array[rowIndex][columnIndex];
<a class="jxr_linenumber" name="L333" href="#L333">333</a>   }
<a class="jxr_linenumber" name="L334" href="#L334">334</a> 
<a class="jxr_linenumber" name="L335" href="#L335">335</a>   <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L336" href="#L336">336</a> <em class="jxr_javadoccomment">   * Associates {@code value} with the specified row and column indices. The</em>
<a class="jxr_linenumber" name="L337" href="#L337">337</a> <em class="jxr_javadoccomment">   * logic {@code</em>
<a class="jxr_linenumber" name="L338" href="#L338">338</a> <em class="jxr_javadoccomment">   * put(rowKeyList().get(rowIndex), columnKeyList().get(columnIndex), value)}</em>
<a class="jxr_linenumber" name="L339" href="#L339">339</a> <em class="jxr_javadoccomment">   * has the same behavior, but this method runs more quickly.</em>
<a class="jxr_linenumber" name="L340" href="#L340">340</a> <em class="jxr_javadoccomment">   *</em>
<a class="jxr_linenumber" name="L341" href="#L341">341</a> <em class="jxr_javadoccomment">   * @param rowIndex position of the row key in {@link #rowKeyList()}</em>
<a class="jxr_linenumber" name="L342" href="#L342">342</a> <em class="jxr_javadoccomment">   * @param columnIndex position of the row key in {@link #columnKeyList()}</em>
<a class="jxr_linenumber" name="L343" href="#L343">343</a> <em class="jxr_javadoccomment">   * @param value value to store in the table</em>
<a class="jxr_linenumber" name="L344" href="#L344">344</a> <em class="jxr_javadoccomment">   * @return the previous value with the specified row and column</em>
<a class="jxr_linenumber" name="L345" href="#L345">345</a> <em class="jxr_javadoccomment">   * @throws IndexOutOfBoundsException if either index is negative, {@code</em>
<a class="jxr_linenumber" name="L346" href="#L346">346</a> <em class="jxr_javadoccomment">   *     rowIndex} is greater then or equal to the number of allowed row keys,</em>
<a class="jxr_linenumber" name="L347" href="#L347">347</a> <em class="jxr_javadoccomment">   *     or {@code columnIndex} is greater then or equal to the number of</em>
<a class="jxr_linenumber" name="L348" href="#L348">348</a> <em class="jxr_javadoccomment">   *     allowed column keys</em>
<a class="jxr_linenumber" name="L349" href="#L349">349</a> <em class="jxr_javadoccomment">   */</em>
<a class="jxr_linenumber" name="L350" href="#L350">350</a>   <strong class="jxr_keyword">public</strong> V set(<strong class="jxr_keyword">int</strong> rowIndex, <strong class="jxr_keyword">int</strong> columnIndex, @Nullable V value) {
<a class="jxr_linenumber" name="L351" href="#L351">351</a>     <em class="jxr_comment">// In GWT array access never throws IndexOutOfBoundsException.</em>
<a class="jxr_linenumber" name="L352" href="#L352">352</a>     checkElementIndex(rowIndex, rowList.size());
<a class="jxr_linenumber" name="L353" href="#L353">353</a>     checkElementIndex(columnIndex, columnList.size());
<a class="jxr_linenumber" name="L354" href="#L354">354</a>     V oldValue = array[rowIndex][columnIndex];
<a class="jxr_linenumber" name="L355" href="#L355">355</a>     array[rowIndex][columnIndex] = value;
<a class="jxr_linenumber" name="L356" href="#L356">356</a>     <strong class="jxr_keyword">return</strong> oldValue;
<a class="jxr_linenumber" name="L357" href="#L357">357</a>   }
<a class="jxr_linenumber" name="L358" href="#L358">358</a> 
<a class="jxr_linenumber" name="L359" href="#L359">359</a>   <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L360" href="#L360">360</a> <em class="jxr_javadoccomment">   * Not supported. Use {@link #eraseAll} instead.</em>
<a class="jxr_linenumber" name="L361" href="#L361">361</a> <em class="jxr_javadoccomment">   *</em>
<a class="jxr_linenumber" name="L362" href="#L362">362</a> <em class="jxr_javadoccomment">   * @throws UnsupportedOperationException always</em>
<a class="jxr_linenumber" name="L363" href="#L363">363</a> <em class="jxr_javadoccomment">   * @deprecated Use {@link #eraseAll}</em>
<a class="jxr_linenumber" name="L364" href="#L364">364</a> <em class="jxr_javadoccomment">   */</em>
<a class="jxr_linenumber" name="L365" href="#L365">365</a>   @Override
<a class="jxr_linenumber" name="L366" href="#L366">366</a>   @Deprecated <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> clear() {
<a class="jxr_linenumber" name="L367" href="#L367">367</a>     <strong class="jxr_keyword">throw</strong> <strong class="jxr_keyword">new</strong> UnsupportedOperationException();
<a class="jxr_linenumber" name="L368" href="#L368">368</a>   }
<a class="jxr_linenumber" name="L369" href="#L369">369</a> 
<a class="jxr_linenumber" name="L370" href="#L370">370</a>   <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L371" href="#L371">371</a> <em class="jxr_javadoccomment">   * Associates the value {@code null} with every pair of allowed row and column</em>
<a class="jxr_linenumber" name="L372" href="#L372">372</a> <em class="jxr_javadoccomment">   * keys.</em>
<a class="jxr_linenumber" name="L373" href="#L373">373</a> <em class="jxr_javadoccomment">   */</em>
<a class="jxr_linenumber" name="L374" href="#L374">374</a>   <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> eraseAll() {
<a class="jxr_linenumber" name="L375" href="#L375">375</a>     <strong class="jxr_keyword">for</strong> (V[] row : array) {
<a class="jxr_linenumber" name="L376" href="#L376">376</a>       Arrays.fill(row, <strong class="jxr_keyword">null</strong>);
<a class="jxr_linenumber" name="L377" href="#L377">377</a>     }
<a class="jxr_linenumber" name="L378" href="#L378">378</a>   }
<a class="jxr_linenumber" name="L379" href="#L379">379</a> 
<a class="jxr_linenumber" name="L380" href="#L380">380</a>   <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L381" href="#L381">381</a> <em class="jxr_javadoccomment">   * Returns {@code true} if the provided keys are among the keys provided when</em>
<a class="jxr_linenumber" name="L382" href="#L382">382</a> <em class="jxr_javadoccomment">   * the table was constructed.</em>
<a class="jxr_linenumber" name="L383" href="#L383">383</a> <em class="jxr_javadoccomment">   */</em>
<a class="jxr_linenumber" name="L384" href="#L384">384</a>   @Override
<a class="jxr_linenumber" name="L385" href="#L385">385</a>   <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">boolean</strong> contains(@Nullable Object rowKey, @Nullable Object columnKey) {
<a class="jxr_linenumber" name="L386" href="#L386">386</a>     <strong class="jxr_keyword">return</strong> containsRow(rowKey) &amp;&amp; containsColumn(columnKey);
<a class="jxr_linenumber" name="L387" href="#L387">387</a>   }
<a class="jxr_linenumber" name="L388" href="#L388">388</a> 
<a class="jxr_linenumber" name="L389" href="#L389">389</a>   <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L390" href="#L390">390</a> <em class="jxr_javadoccomment">   * Returns {@code true} if the provided column key is among the column keys</em>
<a class="jxr_linenumber" name="L391" href="#L391">391</a> <em class="jxr_javadoccomment">   * provided when the table was constructed.</em>
<a class="jxr_linenumber" name="L392" href="#L392">392</a> <em class="jxr_javadoccomment">   */</em>
<a class="jxr_linenumber" name="L393" href="#L393">393</a>   @Override
<a class="jxr_linenumber" name="L394" href="#L394">394</a>   <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">boolean</strong> containsColumn(@Nullable Object columnKey) {
<a class="jxr_linenumber" name="L395" href="#L395">395</a>     <strong class="jxr_keyword">return</strong> columnKeyToIndex.containsKey(columnKey);
<a class="jxr_linenumber" name="L396" href="#L396">396</a>   }
<a class="jxr_linenumber" name="L397" href="#L397">397</a> 
<a class="jxr_linenumber" name="L398" href="#L398">398</a>   <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L399" href="#L399">399</a> <em class="jxr_javadoccomment">   * Returns {@code true} if the provided row key is among the row keys</em>
<a class="jxr_linenumber" name="L400" href="#L400">400</a> <em class="jxr_javadoccomment">   * provided when the table was constructed.</em>
<a class="jxr_linenumber" name="L401" href="#L401">401</a> <em class="jxr_javadoccomment">   */</em>
<a class="jxr_linenumber" name="L402" href="#L402">402</a>   @Override
<a class="jxr_linenumber" name="L403" href="#L403">403</a>   <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">boolean</strong> containsRow(@Nullable Object rowKey) {
<a class="jxr_linenumber" name="L404" href="#L404">404</a>     <strong class="jxr_keyword">return</strong> rowKeyToIndex.containsKey(rowKey);
<a class="jxr_linenumber" name="L405" href="#L405">405</a>   }
<a class="jxr_linenumber" name="L406" href="#L406">406</a> 
<a class="jxr_linenumber" name="L407" href="#L407">407</a>   @Override
<a class="jxr_linenumber" name="L408" href="#L408">408</a>   <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">boolean</strong> containsValue(@Nullable Object value) {
<a class="jxr_linenumber" name="L409" href="#L409">409</a>     <strong class="jxr_keyword">for</strong> (V[] row : array) {
<a class="jxr_linenumber" name="L410" href="#L410">410</a>       <strong class="jxr_keyword">for</strong> (V element : row) {
<a class="jxr_linenumber" name="L411" href="#L411">411</a>         <strong class="jxr_keyword">if</strong> (Objects.equal(value, element)) {
<a class="jxr_linenumber" name="L412" href="#L412">412</a>           <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">true</strong>;
<a class="jxr_linenumber" name="L413" href="#L413">413</a>         }
<a class="jxr_linenumber" name="L414" href="#L414">414</a>       }
<a class="jxr_linenumber" name="L415" href="#L415">415</a>     }
<a class="jxr_linenumber" name="L416" href="#L416">416</a>     <strong class="jxr_keyword">return</strong> false;
<a class="jxr_linenumber" name="L417" href="#L417">417</a>   }
<a class="jxr_linenumber" name="L418" href="#L418">418</a> 
<a class="jxr_linenumber" name="L419" href="#L419">419</a>   @Override
<a class="jxr_linenumber" name="L420" href="#L420">420</a>   <strong class="jxr_keyword">public</strong> V get(@Nullable Object rowKey, @Nullable Object columnKey) {
<a class="jxr_linenumber" name="L421" href="#L421">421</a>     Integer rowIndex = rowKeyToIndex.get(rowKey);
<a class="jxr_linenumber" name="L422" href="#L422">422</a>     Integer columnIndex = columnKeyToIndex.get(columnKey);
<a class="jxr_linenumber" name="L423" href="#L423">423</a>     <strong class="jxr_keyword">return</strong> (rowIndex == <strong class="jxr_keyword">null</strong> || columnIndex == <strong class="jxr_keyword">null</strong>)
<a class="jxr_linenumber" name="L424" href="#L424">424</a>         ? <strong class="jxr_keyword">null</strong> : at(rowIndex, columnIndex);
<a class="jxr_linenumber" name="L425" href="#L425">425</a>   }
<a class="jxr_linenumber" name="L426" href="#L426">426</a> 
<a class="jxr_linenumber" name="L427" href="#L427">427</a>   <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L428" href="#L428">428</a> <em class="jxr_javadoccomment">   * Always returns {@code false}.</em>
<a class="jxr_linenumber" name="L429" href="#L429">429</a> <em class="jxr_javadoccomment">   */</em>
<a class="jxr_linenumber" name="L430" href="#L430">430</a>   @Override
<a class="jxr_linenumber" name="L431" href="#L431">431</a>   <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">boolean</strong> isEmpty() {
<a class="jxr_linenumber" name="L432" href="#L432">432</a>     <strong class="jxr_keyword">return</strong> false;
<a class="jxr_linenumber" name="L433" href="#L433">433</a>   }
<a class="jxr_linenumber" name="L434" href="#L434">434</a> 
<a class="jxr_linenumber" name="L435" href="#L435">435</a>   <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L436" href="#L436">436</a> <em class="jxr_javadoccomment">   * {@inheritDoc}</em>
<a class="jxr_linenumber" name="L437" href="#L437">437</a> <em class="jxr_javadoccomment">   *</em>
<a class="jxr_linenumber" name="L438" href="#L438">438</a> <em class="jxr_javadoccomment">   * @throws IllegalArgumentException if {@code rowKey} is not in {@link</em>
<a class="jxr_linenumber" name="L439" href="#L439">439</a> <em class="jxr_javadoccomment">   *     #rowKeySet()} or {@code columnKey} is not in {@link #columnKeySet()}.</em>
<a class="jxr_linenumber" name="L440" href="#L440">440</a> <em class="jxr_javadoccomment">   */</em>
<a class="jxr_linenumber" name="L441" href="#L441">441</a>   @Override
<a class="jxr_linenumber" name="L442" href="#L442">442</a>   <strong class="jxr_keyword">public</strong> V put(R rowKey, C columnKey, @Nullable V value) {
<a class="jxr_linenumber" name="L443" href="#L443">443</a>     checkNotNull(rowKey);
<a class="jxr_linenumber" name="L444" href="#L444">444</a>     checkNotNull(columnKey);
<a class="jxr_linenumber" name="L445" href="#L445">445</a>     Integer rowIndex = rowKeyToIndex.get(rowKey);
<a class="jxr_linenumber" name="L446" href="#L446">446</a>     checkArgument(rowIndex != <strong class="jxr_keyword">null</strong>, <span class="jxr_string">"Row %s not in %s"</span>, rowKey, rowList);
<a class="jxr_linenumber" name="L447" href="#L447">447</a>     Integer columnIndex = columnKeyToIndex.get(columnKey);
<a class="jxr_linenumber" name="L448" href="#L448">448</a>     checkArgument(columnIndex != <strong class="jxr_keyword">null</strong>,
<a class="jxr_linenumber" name="L449" href="#L449">449</a>         <span class="jxr_string">"Column %s not in %s"</span>, columnKey, columnList);
<a class="jxr_linenumber" name="L450" href="#L450">450</a>     <strong class="jxr_keyword">return</strong> set(rowIndex, columnIndex, value);
<a class="jxr_linenumber" name="L451" href="#L451">451</a>   }
<a class="jxr_linenumber" name="L452" href="#L452">452</a> 
<a class="jxr_linenumber" name="L453" href="#L453">453</a>   <em class="jxr_comment">/*</em>
<a class="jxr_linenumber" name="L454" href="#L454">454</a> <em class="jxr_comment">   * TODO(jlevy): Consider creating a merge() method, similar to putAll() but</em>
<a class="jxr_linenumber" name="L455" href="#L455">455</a> <em class="jxr_comment">   * copying non-null values only.</em>
<a class="jxr_linenumber" name="L456" href="#L456">456</a> <em class="jxr_comment">   */</em>
<a class="jxr_linenumber" name="L457" href="#L457">457</a> 
<a class="jxr_linenumber" name="L458" href="#L458">458</a>   <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L459" href="#L459">459</a> <em class="jxr_javadoccomment">   * {@inheritDoc}</em>
<a class="jxr_linenumber" name="L460" href="#L460">460</a> <em class="jxr_javadoccomment">   *</em>
<a class="jxr_linenumber" name="L461" href="#L461">461</a> <em class="jxr_javadoccomment">   * &lt;p&gt;If {@code table} is an {@code ArrayTable}, its null values will be</em>
<a class="jxr_linenumber" name="L462" href="#L462">462</a> <em class="jxr_javadoccomment">   * stored in this table, possibly replacing values that were previously</em>
<a class="jxr_linenumber" name="L463" href="#L463">463</a> <em class="jxr_javadoccomment">   * non-null.</em>
<a class="jxr_linenumber" name="L464" href="#L464">464</a> <em class="jxr_javadoccomment">   *</em>
<a class="jxr_linenumber" name="L465" href="#L465">465</a> <em class="jxr_javadoccomment">   * @throws NullPointerException if {@code table} has a null key</em>
<a class="jxr_linenumber" name="L466" href="#L466">466</a> <em class="jxr_javadoccomment">   * @throws IllegalArgumentException if any of the provided table's row keys or</em>
<a class="jxr_linenumber" name="L467" href="#L467">467</a> <em class="jxr_javadoccomment">   *     column keys is not in {@link #rowKeySet()} or {@link #columnKeySet()}</em>
<a class="jxr_linenumber" name="L468" href="#L468">468</a> <em class="jxr_javadoccomment">   */</em>
<a class="jxr_linenumber" name="L469" href="#L469">469</a>   @Override
<a class="jxr_linenumber" name="L470" href="#L470">470</a>   <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> putAll(Table&lt;? <strong class="jxr_keyword">extends</strong> R, ? <strong class="jxr_keyword">extends</strong> C, ? <strong class="jxr_keyword">extends</strong> V&gt; table) {
<a class="jxr_linenumber" name="L471" href="#L471">471</a>     <strong class="jxr_keyword">super</strong>.putAll(table);
<a class="jxr_linenumber" name="L472" href="#L472">472</a>   }
<a class="jxr_linenumber" name="L473" href="#L473">473</a> 
<a class="jxr_linenumber" name="L474" href="#L474">474</a>   <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L475" href="#L475">475</a> <em class="jxr_javadoccomment">   * Not supported. Use {@link #erase} instead.</em>
<a class="jxr_linenumber" name="L476" href="#L476">476</a> <em class="jxr_javadoccomment">   *</em>
<a class="jxr_linenumber" name="L477" href="#L477">477</a> <em class="jxr_javadoccomment">   * @throws UnsupportedOperationException always</em>
<a class="jxr_linenumber" name="L478" href="#L478">478</a> <em class="jxr_javadoccomment">   * @deprecated Use {@link #erase}</em>
<a class="jxr_linenumber" name="L479" href="#L479">479</a> <em class="jxr_javadoccomment">   */</em>
<a class="jxr_linenumber" name="L480" href="#L480">480</a>   @Override
<a class="jxr_linenumber" name="L481" href="#L481">481</a>   @Deprecated <strong class="jxr_keyword">public</strong> V remove(Object rowKey, Object columnKey) {
<a class="jxr_linenumber" name="L482" href="#L482">482</a>     <strong class="jxr_keyword">throw</strong> <strong class="jxr_keyword">new</strong> UnsupportedOperationException();
<a class="jxr_linenumber" name="L483" href="#L483">483</a>   }
<a class="jxr_linenumber" name="L484" href="#L484">484</a> 
<a class="jxr_linenumber" name="L485" href="#L485">485</a>   <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L486" href="#L486">486</a> <em class="jxr_javadoccomment">   * Associates the value {@code null} with the specified keys, assuming both</em>
<a class="jxr_linenumber" name="L487" href="#L487">487</a> <em class="jxr_javadoccomment">   * keys are valid. If either key is null or isn't among the keys provided</em>
<a class="jxr_linenumber" name="L488" href="#L488">488</a> <em class="jxr_javadoccomment">   * during construction, this method has no effect.</em>
<a class="jxr_linenumber" name="L489" href="#L489">489</a> <em class="jxr_javadoccomment">   *</em>
<a class="jxr_linenumber" name="L490" href="#L490">490</a> <em class="jxr_javadoccomment">   * &lt;p&gt;This method is equivalent to {@code put(rowKey, columnKey, null)} when</em>
<a class="jxr_linenumber" name="L491" href="#L491">491</a> <em class="jxr_javadoccomment">   * both provided keys are valid.</em>
<a class="jxr_linenumber" name="L492" href="#L492">492</a> <em class="jxr_javadoccomment">   *</em>
<a class="jxr_linenumber" name="L493" href="#L493">493</a> <em class="jxr_javadoccomment">   * @param rowKey row key of mapping to be erased</em>
<a class="jxr_linenumber" name="L494" href="#L494">494</a> <em class="jxr_javadoccomment">   * @param columnKey column key of mapping to be erased</em>
<a class="jxr_linenumber" name="L495" href="#L495">495</a> <em class="jxr_javadoccomment">   * @return the value previously associated with the keys, or {@code null} if</em>
<a class="jxr_linenumber" name="L496" href="#L496">496</a> <em class="jxr_javadoccomment">   *     no mapping existed for the keys</em>
<a class="jxr_linenumber" name="L497" href="#L497">497</a> <em class="jxr_javadoccomment">   */</em>
<a class="jxr_linenumber" name="L498" href="#L498">498</a>   <strong class="jxr_keyword">public</strong> V erase(@Nullable Object rowKey, @Nullable Object columnKey) {
<a class="jxr_linenumber" name="L499" href="#L499">499</a>     Integer rowIndex = rowKeyToIndex.get(rowKey);
<a class="jxr_linenumber" name="L500" href="#L500">500</a>     Integer columnIndex = columnKeyToIndex.get(columnKey);
<a class="jxr_linenumber" name="L501" href="#L501">501</a>     <strong class="jxr_keyword">if</strong> (rowIndex == <strong class="jxr_keyword">null</strong> || columnIndex == <strong class="jxr_keyword">null</strong>) {
<a class="jxr_linenumber" name="L502" href="#L502">502</a>       <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">null</strong>;
<a class="jxr_linenumber" name="L503" href="#L503">503</a>     }
<a class="jxr_linenumber" name="L504" href="#L504">504</a>     <strong class="jxr_keyword">return</strong> set(rowIndex, columnIndex, <strong class="jxr_keyword">null</strong>);
<a class="jxr_linenumber" name="L505" href="#L505">505</a>   }
<a class="jxr_linenumber" name="L506" href="#L506">506</a> 
<a class="jxr_linenumber" name="L507" href="#L507">507</a>   <em class="jxr_comment">// TODO(jlevy): Add eraseRow and eraseColumn methods?</em>
<a class="jxr_linenumber" name="L508" href="#L508">508</a> 
<a class="jxr_linenumber" name="L509" href="#L509">509</a>   @Override
<a class="jxr_linenumber" name="L510" href="#L510">510</a>   <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">int</strong> size() {
<a class="jxr_linenumber" name="L511" href="#L511">511</a>     <strong class="jxr_keyword">return</strong> rowList.size() * columnList.size();
<a class="jxr_linenumber" name="L512" href="#L512">512</a>   }
<a class="jxr_linenumber" name="L513" href="#L513">513</a> 
<a class="jxr_linenumber" name="L514" href="#L514">514</a>   <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L515" href="#L515">515</a> <em class="jxr_javadoccomment">   * Returns an unmodifiable set of all row key / column key / value</em>
<a class="jxr_linenumber" name="L516" href="#L516">516</a> <em class="jxr_javadoccomment">   * triplets. Changes to the table will update the returned set.</em>
<a class="jxr_linenumber" name="L517" href="#L517">517</a> <em class="jxr_javadoccomment">   *</em>
<a class="jxr_linenumber" name="L518" href="#L518">518</a> <em class="jxr_javadoccomment">   * &lt;p&gt;The returned set's iterator traverses the mappings with the first row</em>
<a class="jxr_linenumber" name="L519" href="#L519">519</a> <em class="jxr_javadoccomment">   * key, the mappings with the second row key, and so on.</em>
<a class="jxr_linenumber" name="L520" href="#L520">520</a> <em class="jxr_javadoccomment">   *</em>
<a class="jxr_linenumber" name="L521" href="#L521">521</a> <em class="jxr_javadoccomment">   * &lt;p&gt;The value in the returned cells may change if the table subsequently</em>
<a class="jxr_linenumber" name="L522" href="#L522">522</a> <em class="jxr_javadoccomment">   * changes.</em>
<a class="jxr_linenumber" name="L523" href="#L523">523</a> <em class="jxr_javadoccomment">   *</em>
<a class="jxr_linenumber" name="L524" href="#L524">524</a> <em class="jxr_javadoccomment">   * @return set of table cells consisting of row key / column key / value</em>
<a class="jxr_linenumber" name="L525" href="#L525">525</a> <em class="jxr_javadoccomment">   *     triplets</em>
<a class="jxr_linenumber" name="L526" href="#L526">526</a> <em class="jxr_javadoccomment">   */</em>
<a class="jxr_linenumber" name="L527" href="#L527">527</a>   @Override
<a class="jxr_linenumber" name="L528" href="#L528">528</a>   <strong class="jxr_keyword">public</strong> Set&lt;Cell&lt;R, C, V&gt;&gt; cellSet() {
<a class="jxr_linenumber" name="L529" href="#L529">529</a>     <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">super</strong>.cellSet();
<a class="jxr_linenumber" name="L530" href="#L530">530</a>   }
<a class="jxr_linenumber" name="L531" href="#L531">531</a> 
<a class="jxr_linenumber" name="L532" href="#L532">532</a>   @Override
<a class="jxr_linenumber" name="L533" href="#L533">533</a>   Iterator&lt;Cell&lt;R, C, V&gt;&gt; cellIterator() {
<a class="jxr_linenumber" name="L534" href="#L534">534</a>     <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">new</strong> AbstractIndexedListIterator&lt;Cell&lt;R, C, V&gt;&gt;(size()) {
<a class="jxr_linenumber" name="L535" href="#L535">535</a>       @Override <strong class="jxr_keyword">protected</strong> Cell&lt;R, C, V&gt; get(<strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">int</strong> index) {
<a class="jxr_linenumber" name="L536" href="#L536">536</a>         <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">new</strong> Tables.AbstractCell&lt;R, C, V&gt;() {
<a class="jxr_linenumber" name="L537" href="#L537">537</a>           <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">int</strong> rowIndex = index / columnList.size();
<a class="jxr_linenumber" name="L538" href="#L538">538</a>           <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">int</strong> columnIndex = index % columnList.size();
<a class="jxr_linenumber" name="L539" href="#L539">539</a>           @Override
<a class="jxr_linenumber" name="L540" href="#L540">540</a>           <strong class="jxr_keyword">public</strong> R getRowKey() {
<a class="jxr_linenumber" name="L541" href="#L541">541</a>             <strong class="jxr_keyword">return</strong> rowList.get(rowIndex);
<a class="jxr_linenumber" name="L542" href="#L542">542</a>           }
<a class="jxr_linenumber" name="L543" href="#L543">543</a>           @Override
<a class="jxr_linenumber" name="L544" href="#L544">544</a>           <strong class="jxr_keyword">public</strong> C getColumnKey() {
<a class="jxr_linenumber" name="L545" href="#L545">545</a>             <strong class="jxr_keyword">return</strong> columnList.get(columnIndex);
<a class="jxr_linenumber" name="L546" href="#L546">546</a>           }
<a class="jxr_linenumber" name="L547" href="#L547">547</a>           @Override
<a class="jxr_linenumber" name="L548" href="#L548">548</a>           <strong class="jxr_keyword">public</strong> V getValue() {
<a class="jxr_linenumber" name="L549" href="#L549">549</a>             <strong class="jxr_keyword">return</strong> at(rowIndex, columnIndex);
<a class="jxr_linenumber" name="L550" href="#L550">550</a>           }
<a class="jxr_linenumber" name="L551" href="#L551">551</a>         };
<a class="jxr_linenumber" name="L552" href="#L552">552</a>       }
<a class="jxr_linenumber" name="L553" href="#L553">553</a>     };
<a class="jxr_linenumber" name="L554" href="#L554">554</a>   }
<a class="jxr_linenumber" name="L555" href="#L555">555</a> 
<a class="jxr_linenumber" name="L556" href="#L556">556</a>   <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L557" href="#L557">557</a> <em class="jxr_javadoccomment">   * Returns a view of all mappings that have the given column key. If the</em>
<a class="jxr_linenumber" name="L558" href="#L558">558</a> <em class="jxr_javadoccomment">   * column key isn't in {@link #columnKeySet()}, an empty immutable map is</em>
<a class="jxr_linenumber" name="L559" href="#L559">559</a> <em class="jxr_javadoccomment">   * returned.</em>
<a class="jxr_linenumber" name="L560" href="#L560">560</a> <em class="jxr_javadoccomment">   *</em>
<a class="jxr_linenumber" name="L561" href="#L561">561</a> <em class="jxr_javadoccomment">   * &lt;p&gt;Otherwise, for each row key in {@link #rowKeySet()}, the returned map</em>
<a class="jxr_linenumber" name="L562" href="#L562">562</a> <em class="jxr_javadoccomment">   * associates the row key with the corresponding value in the table. Changes</em>
<a class="jxr_linenumber" name="L563" href="#L563">563</a> <em class="jxr_javadoccomment">   * to the returned map will update the underlying table, and vice versa.</em>
<a class="jxr_linenumber" name="L564" href="#L564">564</a> <em class="jxr_javadoccomment">   *</em>
<a class="jxr_linenumber" name="L565" href="#L565">565</a> <em class="jxr_javadoccomment">   * @param columnKey key of column to search for in the table</em>
<a class="jxr_linenumber" name="L566" href="#L566">566</a> <em class="jxr_javadoccomment">   * @return the corresponding map from row keys to values</em>
<a class="jxr_linenumber" name="L567" href="#L567">567</a> <em class="jxr_javadoccomment">   */</em>
<a class="jxr_linenumber" name="L568" href="#L568">568</a>   @Override
<a class="jxr_linenumber" name="L569" href="#L569">569</a>   <strong class="jxr_keyword">public</strong> Map&lt;R, V&gt; column(C columnKey) {
<a class="jxr_linenumber" name="L570" href="#L570">570</a>     checkNotNull(columnKey);
<a class="jxr_linenumber" name="L571" href="#L571">571</a>     Integer columnIndex = columnKeyToIndex.get(columnKey);
<a class="jxr_linenumber" name="L572" href="#L572">572</a>     <strong class="jxr_keyword">return</strong> (columnIndex == <strong class="jxr_keyword">null</strong>)
<a class="jxr_linenumber" name="L573" href="#L573">573</a>         ? ImmutableMap.&lt;R, V&gt;of() : <strong class="jxr_keyword">new</strong> Column(columnIndex);
<a class="jxr_linenumber" name="L574" href="#L574">574</a>   }
<a class="jxr_linenumber" name="L575" href="#L575">575</a> 
<a class="jxr_linenumber" name="L576" href="#L576">576</a>   <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">class</strong> <a href="../../../../com/google/common/collect/ArrayTable.html">Column</a> <strong class="jxr_keyword">extends</strong> ArrayMap&lt;R, V&gt; {
<a class="jxr_linenumber" name="L577" href="#L577">577</a>     <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">int</strong> columnIndex;
<a class="jxr_linenumber" name="L578" href="#L578">578</a> 
<a class="jxr_linenumber" name="L579" href="#L579">579</a>     <a href="../../../../com/google/common/collect/ArrayTable.html">Column</a>(<strong class="jxr_keyword">int</strong> columnIndex) {
<a class="jxr_linenumber" name="L580" href="#L580">580</a>       <strong class="jxr_keyword">super</strong>(rowKeyToIndex);
<a class="jxr_linenumber" name="L581" href="#L581">581</a>       <strong class="jxr_keyword">this</strong>.columnIndex = columnIndex;
<a class="jxr_linenumber" name="L582" href="#L582">582</a>     }
<a class="jxr_linenumber" name="L583" href="#L583">583</a> 
<a class="jxr_linenumber" name="L584" href="#L584">584</a>     @Override
<a class="jxr_linenumber" name="L585" href="#L585">585</a>     String getKeyRole() {
<a class="jxr_linenumber" name="L586" href="#L586">586</a>       <strong class="jxr_keyword">return</strong> <span class="jxr_string">"Row"</span>;
<a class="jxr_linenumber" name="L587" href="#L587">587</a>     }
<a class="jxr_linenumber" name="L588" href="#L588">588</a> 
<a class="jxr_linenumber" name="L589" href="#L589">589</a>     @Override
<a class="jxr_linenumber" name="L590" href="#L590">590</a>     V getValue(<strong class="jxr_keyword">int</strong> index) {
<a class="jxr_linenumber" name="L591" href="#L591">591</a>       <strong class="jxr_keyword">return</strong> at(index, columnIndex);
<a class="jxr_linenumber" name="L592" href="#L592">592</a>     }
<a class="jxr_linenumber" name="L593" href="#L593">593</a> 
<a class="jxr_linenumber" name="L594" href="#L594">594</a>     @Override
<a class="jxr_linenumber" name="L595" href="#L595">595</a>     V setValue(<strong class="jxr_keyword">int</strong> index, V newValue) {
<a class="jxr_linenumber" name="L596" href="#L596">596</a>       <strong class="jxr_keyword">return</strong> set(index, columnIndex, newValue);
<a class="jxr_linenumber" name="L597" href="#L597">597</a>     }
<a class="jxr_linenumber" name="L598" href="#L598">598</a>   }
<a class="jxr_linenumber" name="L599" href="#L599">599</a> 
<a class="jxr_linenumber" name="L600" href="#L600">600</a>   <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L601" href="#L601">601</a> <em class="jxr_javadoccomment">   * Returns an immutable set of the valid column keys, including those that</em>
<a class="jxr_linenumber" name="L602" href="#L602">602</a> <em class="jxr_javadoccomment">   * are associated with null values only.</em>
<a class="jxr_linenumber" name="L603" href="#L603">603</a> <em class="jxr_javadoccomment">   *</em>
<a class="jxr_linenumber" name="L604" href="#L604">604</a> <em class="jxr_javadoccomment">   * @return immutable set of column keys</em>
<a class="jxr_linenumber" name="L605" href="#L605">605</a> <em class="jxr_javadoccomment">   */</em>
<a class="jxr_linenumber" name="L606" href="#L606">606</a>   @Override
<a class="jxr_linenumber" name="L607" href="#L607">607</a>   <strong class="jxr_keyword">public</strong> ImmutableSet&lt;C&gt; columnKeySet() {
<a class="jxr_linenumber" name="L608" href="#L608">608</a>     <strong class="jxr_keyword">return</strong> columnKeyToIndex.keySet();
<a class="jxr_linenumber" name="L609" href="#L609">609</a>   }
<a class="jxr_linenumber" name="L610" href="#L610">610</a> 
<a class="jxr_linenumber" name="L611" href="#L611">611</a>   <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">transient</strong> <a href="../../../../com/google/common/collect/ArrayTable.html">ColumnMap</a> columnMap;
<a class="jxr_linenumber" name="L612" href="#L612">612</a> 
<a class="jxr_linenumber" name="L613" href="#L613">613</a>   @Override
<a class="jxr_linenumber" name="L614" href="#L614">614</a>   <strong class="jxr_keyword">public</strong> Map&lt;C, Map&lt;R, V&gt;&gt; columnMap() {
<a class="jxr_linenumber" name="L615" href="#L615">615</a>     <a href="../../../../com/google/common/collect/ArrayTable.html">ColumnMap</a> map = columnMap;
<a class="jxr_linenumber" name="L616" href="#L616">616</a>     <strong class="jxr_keyword">return</strong> (map == <strong class="jxr_keyword">null</strong>) ? columnMap = <strong class="jxr_keyword">new</strong> ColumnMap() : map;
<a class="jxr_linenumber" name="L617" href="#L617">617</a>   }
<a class="jxr_linenumber" name="L618" href="#L618">618</a> 
<a class="jxr_linenumber" name="L619" href="#L619">619</a>   <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">class</strong> <a href="../../../../com/google/common/collect/ArrayTable.html">ColumnMap</a> <strong class="jxr_keyword">extends</strong> ArrayMap&lt;C, Map&lt;R, V&gt;&gt; {
<a class="jxr_linenumber" name="L620" href="#L620">620</a>     <strong class="jxr_keyword">private</strong> <a href="../../../../com/google/common/collect/ArrayTable.html">ColumnMap</a>() {
<a class="jxr_linenumber" name="L621" href="#L621">621</a>       <strong class="jxr_keyword">super</strong>(columnKeyToIndex);
<a class="jxr_linenumber" name="L622" href="#L622">622</a>     }
<a class="jxr_linenumber" name="L623" href="#L623">623</a> 
<a class="jxr_linenumber" name="L624" href="#L624">624</a>     @Override
<a class="jxr_linenumber" name="L625" href="#L625">625</a>     String getKeyRole() {
<a class="jxr_linenumber" name="L626" href="#L626">626</a>       <strong class="jxr_keyword">return</strong> <span class="jxr_string">"Column"</span>;
<a class="jxr_linenumber" name="L627" href="#L627">627</a>     }
<a class="jxr_linenumber" name="L628" href="#L628">628</a> 
<a class="jxr_linenumber" name="L629" href="#L629">629</a>     @Override
<a class="jxr_linenumber" name="L630" href="#L630">630</a>     Map&lt;R, V&gt; getValue(<strong class="jxr_keyword">int</strong> index) {
<a class="jxr_linenumber" name="L631" href="#L631">631</a>       <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">new</strong> <a href="../../../../com/google/common/collect/ArrayTable.html">Column</a>(index);
<a class="jxr_linenumber" name="L632" href="#L632">632</a>     }
<a class="jxr_linenumber" name="L633" href="#L633">633</a> 
<a class="jxr_linenumber" name="L634" href="#L634">634</a>     @Override
<a class="jxr_linenumber" name="L635" href="#L635">635</a>     Map&lt;R, V&gt; setValue(<strong class="jxr_keyword">int</strong> index, Map&lt;R, V&gt; newValue) {
<a class="jxr_linenumber" name="L636" href="#L636">636</a>       <strong class="jxr_keyword">throw</strong> <strong class="jxr_keyword">new</strong> UnsupportedOperationException();
<a class="jxr_linenumber" name="L637" href="#L637">637</a>     }
<a class="jxr_linenumber" name="L638" href="#L638">638</a> 
<a class="jxr_linenumber" name="L639" href="#L639">639</a>     @Override
<a class="jxr_linenumber" name="L640" href="#L640">640</a>     <strong class="jxr_keyword">public</strong> Map&lt;R, V&gt; put(C key, Map&lt;R, V&gt; value) {
<a class="jxr_linenumber" name="L641" href="#L641">641</a>       <strong class="jxr_keyword">throw</strong> <strong class="jxr_keyword">new</strong> UnsupportedOperationException();
<a class="jxr_linenumber" name="L642" href="#L642">642</a>     }
<a class="jxr_linenumber" name="L643" href="#L643">643</a>   }
<a class="jxr_linenumber" name="L644" href="#L644">644</a> 
<a class="jxr_linenumber" name="L645" href="#L645">645</a>   <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L646" href="#L646">646</a> <em class="jxr_javadoccomment">   * Returns a view of all mappings that have the given row key. If the</em>
<a class="jxr_linenumber" name="L647" href="#L647">647</a> <em class="jxr_javadoccomment">   * row key isn't in {@link #rowKeySet()}, an empty immutable map is</em>
<a class="jxr_linenumber" name="L648" href="#L648">648</a> <em class="jxr_javadoccomment">   * returned.</em>
<a class="jxr_linenumber" name="L649" href="#L649">649</a> <em class="jxr_javadoccomment">   *</em>
<a class="jxr_linenumber" name="L650" href="#L650">650</a> <em class="jxr_javadoccomment">   * &lt;p&gt;Otherwise, for each column key in {@link #columnKeySet()}, the returned</em>
<a class="jxr_linenumber" name="L651" href="#L651">651</a> <em class="jxr_javadoccomment">   * map associates the column key with the corresponding value in the</em>
<a class="jxr_linenumber" name="L652" href="#L652">652</a> <em class="jxr_javadoccomment">   * table. Changes to the returned map will update the underlying table, and</em>
<a class="jxr_linenumber" name="L653" href="#L653">653</a> <em class="jxr_javadoccomment">   * vice versa.</em>
<a class="jxr_linenumber" name="L654" href="#L654">654</a> <em class="jxr_javadoccomment">   *</em>
<a class="jxr_linenumber" name="L655" href="#L655">655</a> <em class="jxr_javadoccomment">   * @param rowKey key of row to search for in the table</em>
<a class="jxr_linenumber" name="L656" href="#L656">656</a> <em class="jxr_javadoccomment">   * @return the corresponding map from column keys to values</em>
<a class="jxr_linenumber" name="L657" href="#L657">657</a> <em class="jxr_javadoccomment">   */</em>
<a class="jxr_linenumber" name="L658" href="#L658">658</a>   @Override
<a class="jxr_linenumber" name="L659" href="#L659">659</a>   <strong class="jxr_keyword">public</strong> Map&lt;C, V&gt; row(R rowKey) {
<a class="jxr_linenumber" name="L660" href="#L660">660</a>     checkNotNull(rowKey);
<a class="jxr_linenumber" name="L661" href="#L661">661</a>     Integer rowIndex = rowKeyToIndex.get(rowKey);
<a class="jxr_linenumber" name="L662" href="#L662">662</a>     <strong class="jxr_keyword">return</strong> (rowIndex == <strong class="jxr_keyword">null</strong>) ? ImmutableMap.&lt;C, V&gt;of() : <strong class="jxr_keyword">new</strong> Row(rowIndex);
<a class="jxr_linenumber" name="L663" href="#L663">663</a>   }
<a class="jxr_linenumber" name="L664" href="#L664">664</a> 
<a class="jxr_linenumber" name="L665" href="#L665">665</a>   <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">class</strong> <a href="../../../../com/google/common/collect/ArrayTable.html">Row</a> <strong class="jxr_keyword">extends</strong> ArrayMap&lt;C, V&gt; {
<a class="jxr_linenumber" name="L666" href="#L666">666</a>     <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">int</strong> rowIndex;
<a class="jxr_linenumber" name="L667" href="#L667">667</a> 
<a class="jxr_linenumber" name="L668" href="#L668">668</a>     <a href="../../../../com/google/common/collect/ArrayTable.html">Row</a>(<strong class="jxr_keyword">int</strong> rowIndex) {
<a class="jxr_linenumber" name="L669" href="#L669">669</a>       <strong class="jxr_keyword">super</strong>(columnKeyToIndex);
<a class="jxr_linenumber" name="L670" href="#L670">670</a>       <strong class="jxr_keyword">this</strong>.rowIndex = rowIndex;
<a class="jxr_linenumber" name="L671" href="#L671">671</a>     }
<a class="jxr_linenumber" name="L672" href="#L672">672</a> 
<a class="jxr_linenumber" name="L673" href="#L673">673</a>     @Override
<a class="jxr_linenumber" name="L674" href="#L674">674</a>     String getKeyRole() {
<a class="jxr_linenumber" name="L675" href="#L675">675</a>       <strong class="jxr_keyword">return</strong> <span class="jxr_string">"Column"</span>;
<a class="jxr_linenumber" name="L676" href="#L676">676</a>     }
<a class="jxr_linenumber" name="L677" href="#L677">677</a> 
<a class="jxr_linenumber" name="L678" href="#L678">678</a>     @Override
<a class="jxr_linenumber" name="L679" href="#L679">679</a>     V getValue(<strong class="jxr_keyword">int</strong> index) {
<a class="jxr_linenumber" name="L680" href="#L680">680</a>       <strong class="jxr_keyword">return</strong> at(rowIndex, index);
<a class="jxr_linenumber" name="L681" href="#L681">681</a>     }
<a class="jxr_linenumber" name="L682" href="#L682">682</a> 
<a class="jxr_linenumber" name="L683" href="#L683">683</a>     @Override
<a class="jxr_linenumber" name="L684" href="#L684">684</a>     V setValue(<strong class="jxr_keyword">int</strong> index, V newValue) {
<a class="jxr_linenumber" name="L685" href="#L685">685</a>       <strong class="jxr_keyword">return</strong> set(rowIndex, index, newValue);
<a class="jxr_linenumber" name="L686" href="#L686">686</a>     }
<a class="jxr_linenumber" name="L687" href="#L687">687</a>   }
<a class="jxr_linenumber" name="L688" href="#L688">688</a> 
<a class="jxr_linenumber" name="L689" href="#L689">689</a>   <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L690" href="#L690">690</a> <em class="jxr_javadoccomment">   * Returns an immutable set of the valid row keys, including those that are</em>
<a class="jxr_linenumber" name="L691" href="#L691">691</a> <em class="jxr_javadoccomment">   * associated with null values only.</em>
<a class="jxr_linenumber" name="L692" href="#L692">692</a> <em class="jxr_javadoccomment">   *</em>
<a class="jxr_linenumber" name="L693" href="#L693">693</a> <em class="jxr_javadoccomment">   * @return immutable set of row keys</em>
<a class="jxr_linenumber" name="L694" href="#L694">694</a> <em class="jxr_javadoccomment">   */</em>
<a class="jxr_linenumber" name="L695" href="#L695">695</a>   @Override
<a class="jxr_linenumber" name="L696" href="#L696">696</a>   <strong class="jxr_keyword">public</strong> ImmutableSet&lt;R&gt; rowKeySet() {
<a class="jxr_linenumber" name="L697" href="#L697">697</a>     <strong class="jxr_keyword">return</strong> rowKeyToIndex.keySet();
<a class="jxr_linenumber" name="L698" href="#L698">698</a>   }
<a class="jxr_linenumber" name="L699" href="#L699">699</a> 
<a class="jxr_linenumber" name="L700" href="#L700">700</a>   <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">transient</strong> <a href="../../../../com/google/common/collect/ArrayTable.html">RowMap</a> rowMap;
<a class="jxr_linenumber" name="L701" href="#L701">701</a> 
<a class="jxr_linenumber" name="L702" href="#L702">702</a>   @Override
<a class="jxr_linenumber" name="L703" href="#L703">703</a>   <strong class="jxr_keyword">public</strong> Map&lt;R, Map&lt;C, V&gt;&gt; rowMap() {
<a class="jxr_linenumber" name="L704" href="#L704">704</a>     <a href="../../../../com/google/common/collect/ArrayTable.html">RowMap</a> map = rowMap;
<a class="jxr_linenumber" name="L705" href="#L705">705</a>     <strong class="jxr_keyword">return</strong> (map == <strong class="jxr_keyword">null</strong>) ? rowMap = <strong class="jxr_keyword">new</strong> RowMap() : map;
<a class="jxr_linenumber" name="L706" href="#L706">706</a>   }
<a class="jxr_linenumber" name="L707" href="#L707">707</a> 
<a class="jxr_linenumber" name="L708" href="#L708">708</a>   <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">class</strong> <a href="../../../../com/google/common/collect/ArrayTable.html">RowMap</a> <strong class="jxr_keyword">extends</strong> ArrayMap&lt;R, Map&lt;C, V&gt;&gt; {
<a class="jxr_linenumber" name="L709" href="#L709">709</a>     <strong class="jxr_keyword">private</strong> <a href="../../../../com/google/common/collect/ArrayTable.html">RowMap</a>() {
<a class="jxr_linenumber" name="L710" href="#L710">710</a>       <strong class="jxr_keyword">super</strong>(rowKeyToIndex);
<a class="jxr_linenumber" name="L711" href="#L711">711</a>     }
<a class="jxr_linenumber" name="L712" href="#L712">712</a> 
<a class="jxr_linenumber" name="L713" href="#L713">713</a>     @Override
<a class="jxr_linenumber" name="L714" href="#L714">714</a>     String getKeyRole() {
<a class="jxr_linenumber" name="L715" href="#L715">715</a>       <strong class="jxr_keyword">return</strong> <span class="jxr_string">"Row"</span>;
<a class="jxr_linenumber" name="L716" href="#L716">716</a>     }
<a class="jxr_linenumber" name="L717" href="#L717">717</a> 
<a class="jxr_linenumber" name="L718" href="#L718">718</a>     @Override
<a class="jxr_linenumber" name="L719" href="#L719">719</a>     Map&lt;C, V&gt; getValue(<strong class="jxr_keyword">int</strong> index) {
<a class="jxr_linenumber" name="L720" href="#L720">720</a>       <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">new</strong> <a href="../../../../com/google/common/collect/ArrayTable.html">Row</a>(index);
<a class="jxr_linenumber" name="L721" href="#L721">721</a>     }
<a class="jxr_linenumber" name="L722" href="#L722">722</a> 
<a class="jxr_linenumber" name="L723" href="#L723">723</a>     @Override
<a class="jxr_linenumber" name="L724" href="#L724">724</a>     Map&lt;C, V&gt; setValue(<strong class="jxr_keyword">int</strong> index, Map&lt;C, V&gt; newValue) {
<a class="jxr_linenumber" name="L725" href="#L725">725</a>       <strong class="jxr_keyword">throw</strong> <strong class="jxr_keyword">new</strong> UnsupportedOperationException();
<a class="jxr_linenumber" name="L726" href="#L726">726</a>     }
<a class="jxr_linenumber" name="L727" href="#L727">727</a> 
<a class="jxr_linenumber" name="L728" href="#L728">728</a>     @Override
<a class="jxr_linenumber" name="L729" href="#L729">729</a>     <strong class="jxr_keyword">public</strong> Map&lt;C, V&gt; put(R key, Map&lt;C, V&gt; value) {
<a class="jxr_linenumber" name="L730" href="#L730">730</a>       <strong class="jxr_keyword">throw</strong> <strong class="jxr_keyword">new</strong> UnsupportedOperationException();
<a class="jxr_linenumber" name="L731" href="#L731">731</a>     }
<a class="jxr_linenumber" name="L732" href="#L732">732</a>   }
<a class="jxr_linenumber" name="L733" href="#L733">733</a> 
<a class="jxr_linenumber" name="L734" href="#L734">734</a>   <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L735" href="#L735">735</a> <em class="jxr_javadoccomment">   * Returns an unmodifiable collection of all values, which may contain</em>
<a class="jxr_linenumber" name="L736" href="#L736">736</a> <em class="jxr_javadoccomment">   * duplicates. Changes to the table will update the returned collection.</em>
<a class="jxr_linenumber" name="L737" href="#L737">737</a> <em class="jxr_javadoccomment">   *</em>
<a class="jxr_linenumber" name="L738" href="#L738">738</a> <em class="jxr_javadoccomment">   * &lt;p&gt;The returned collection's iterator traverses the values of the first row</em>
<a class="jxr_linenumber" name="L739" href="#L739">739</a> <em class="jxr_javadoccomment">   * key, the values of the second row key, and so on.</em>
<a class="jxr_linenumber" name="L740" href="#L740">740</a> <em class="jxr_javadoccomment">   *</em>
<a class="jxr_linenumber" name="L741" href="#L741">741</a> <em class="jxr_javadoccomment">   * @return collection of values</em>
<a class="jxr_linenumber" name="L742" href="#L742">742</a> <em class="jxr_javadoccomment">   */</em>
<a class="jxr_linenumber" name="L743" href="#L743">743</a>   @Override
<a class="jxr_linenumber" name="L744" href="#L744">744</a>   <strong class="jxr_keyword">public</strong> Collection&lt;V&gt; values() {
<a class="jxr_linenumber" name="L745" href="#L745">745</a>     <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">super</strong>.values();
<a class="jxr_linenumber" name="L746" href="#L746">746</a>   }
<a class="jxr_linenumber" name="L747" href="#L747">747</a> 
<a class="jxr_linenumber" name="L748" href="#L748">748</a>   <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">static</strong> <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">long</strong> serialVersionUID = 0;
<a class="jxr_linenumber" name="L749" href="#L749">749</a> }
</pre>
<hr/>
<div id="footer">Copyright &#169; 2015. All rights reserved.</div>
</body>
</html>
