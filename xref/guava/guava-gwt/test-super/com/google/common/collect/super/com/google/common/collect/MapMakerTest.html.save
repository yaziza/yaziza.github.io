<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>MapMakerTest xref</title>
<link type="text/css" rel="stylesheet" href="../../../../stylesheet.css" />
</head>
<body>
<div id="overview"><a href="../../../../../../../../../../../../../apidocs/com/google/common/collect/MapMakerTest.html">View Javadoc</a></div><pre>
<a class="jxr_linenumber" name="L1" href="#L1">1</a>   <em class="jxr_comment">/*</em>
<a class="jxr_linenumber" name="L2" href="#L2">2</a>   <em class="jxr_comment"> * Copyright (C) 2011 The Guava Authors</em>
<a class="jxr_linenumber" name="L3" href="#L3">3</a>   <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L4" href="#L4">4</a>   <em class="jxr_comment"> * Licensed under the Apache License, Version 2.0 (the "License");</em>
<a class="jxr_linenumber" name="L5" href="#L5">5</a>   <em class="jxr_comment"> * you may not use this file except in compliance with the License.</em>
<a class="jxr_linenumber" name="L6" href="#L6">6</a>   <em class="jxr_comment"> * You may obtain a copy of the License at</em>
<a class="jxr_linenumber" name="L7" href="#L7">7</a>   <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L8" href="#L8">8</a>   <em class="jxr_comment"> * <a href="http://www.apache.org/licenses/LICENSE-2." target="alexandria_uri">http://www.apache.org/licenses/LICENSE-2.</a>0</em>
<a class="jxr_linenumber" name="L9" href="#L9">9</a>   <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L10" href="#L10">10</a>  <em class="jxr_comment"> * Unless required by applicable law or agreed to in writing, software</em>
<a class="jxr_linenumber" name="L11" href="#L11">11</a>  <em class="jxr_comment"> * distributed under the License is distributed on an "AS IS" BASIS,</em>
<a class="jxr_linenumber" name="L12" href="#L12">12</a>  <em class="jxr_comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</em>
<a class="jxr_linenumber" name="L13" href="#L13">13</a>  <em class="jxr_comment"> * See the License for the specific language governing permissions and</em>
<a class="jxr_linenumber" name="L14" href="#L14">14</a>  <em class="jxr_comment"> * limitations under the License.</em>
<a class="jxr_linenumber" name="L15" href="#L15">15</a>  <em class="jxr_comment"> */</em>
<a class="jxr_linenumber" name="L16" href="#L16">16</a>  
<a class="jxr_linenumber" name="L17" href="#L17">17</a>  <strong class="jxr_keyword">package</strong> com.google.common.collect;
<a class="jxr_linenumber" name="L18" href="#L18">18</a>  
<a class="jxr_linenumber" name="L19" href="#L19">19</a>  <strong class="jxr_keyword">import</strong> <strong class="jxr_keyword">static</strong> java.util.concurrent.TimeUnit.HOURS;
<a class="jxr_linenumber" name="L20" href="#L20">20</a>  
<a class="jxr_linenumber" name="L21" href="#L21">21</a>  <strong class="jxr_keyword">import</strong> com.google.common.annotations.GwtCompatible;
<a class="jxr_linenumber" name="L22" href="#L22">22</a>  <strong class="jxr_keyword">import</strong> com.google.common.base.Function;
<a class="jxr_linenumber" name="L23" href="#L23">23</a>  
<a class="jxr_linenumber" name="L24" href="#L24">24</a>  <strong class="jxr_keyword">import</strong> junit.framework.TestCase;
<a class="jxr_linenumber" name="L25" href="#L25">25</a>  
<a class="jxr_linenumber" name="L26" href="#L26">26</a>  <strong class="jxr_keyword">import</strong> java.util.Map;
<a class="jxr_linenumber" name="L27" href="#L27">27</a>  <strong class="jxr_keyword">import</strong> java.util.concurrent.ConcurrentHashMap;
<a class="jxr_linenumber" name="L28" href="#L28">28</a>  <strong class="jxr_keyword">import</strong> java.util.concurrent.ConcurrentMap;
<a class="jxr_linenumber" name="L29" href="#L29">29</a>  
<a class="jxr_linenumber" name="L30" href="#L30">30</a>  <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L31" href="#L31">31</a>  <em class="jxr_javadoccomment"> * @author Charles Fry</em>
<a class="jxr_linenumber" name="L32" href="#L32">32</a>  <em class="jxr_javadoccomment"> */</em>
<a class="jxr_linenumber" name="L33" href="#L33">33</a>  @GwtCompatible(emulated = <strong class="jxr_keyword">true</strong>)
<a class="jxr_linenumber" name="L34" href="#L34">34</a>  <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">class</strong> <a href="../../../../com/google/common/collect/MapMakerTest.html">MapMakerTest</a> <strong class="jxr_keyword">extends</strong> TestCase {
<a class="jxr_linenumber" name="L35" href="#L35">35</a>  
<a class="jxr_linenumber" name="L36" href="#L36">36</a>    <em class="jxr_comment">// "Basher tests", where we throw a bunch of stuff at a Cache and check basic invariants.</em>
<a class="jxr_linenumber" name="L37" href="#L37">37</a>  
<a class="jxr_linenumber" name="L38" href="#L38">38</a>    <em class="jxr_comment">/*</em>
<a class="jxr_linenumber" name="L39" href="#L39">39</a>  <em class="jxr_comment">   * TODO(cpovirk): eliminate duplication between these tests and those in LegacyMapMakerTests and</em>
<a class="jxr_linenumber" name="L40" href="#L40">40</a>  <em class="jxr_comment">   * anywhere else</em>
<a class="jxr_linenumber" name="L41" href="#L41">41</a>  <em class="jxr_comment">   */</em>
<a class="jxr_linenumber" name="L42" href="#L42">42</a>  
<a class="jxr_linenumber" name="L43" href="#L43">43</a>    <em class="jxr_javadoccomment">/** Tests for the builder. */</em>
<a class="jxr_linenumber" name="L44" href="#L44">44</a>    <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">static</strong> <strong class="jxr_keyword">class</strong> <a href="../../../../com/google/common/collect/MapMakerTest.html">MakerTest</a> <strong class="jxr_keyword">extends</strong> TestCase {
<a class="jxr_linenumber" name="L45" href="#L45">45</a>      <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testInitialCapacity_negative() {
<a class="jxr_linenumber" name="L46" href="#L46">46</a>        <a href="../../../../com/google/common/collect/MapMaker.html">MapMaker</a> maker = <strong class="jxr_keyword">new</strong> <a href="../../../../com/google/common/collect/MapMaker.html">MapMaker</a>();
<a class="jxr_linenumber" name="L47" href="#L47">47</a>        <strong class="jxr_keyword">try</strong> {
<a class="jxr_linenumber" name="L48" href="#L48">48</a>          maker.initialCapacity(-1);
<a class="jxr_linenumber" name="L49" href="#L49">49</a>          fail();
<a class="jxr_linenumber" name="L50" href="#L50">50</a>        } <strong class="jxr_keyword">catch</strong> (IllegalArgumentException expected) {
<a class="jxr_linenumber" name="L51" href="#L51">51</a>        }
<a class="jxr_linenumber" name="L52" href="#L52">52</a>      }
<a class="jxr_linenumber" name="L53" href="#L53">53</a>  
<a class="jxr_linenumber" name="L54" href="#L54">54</a>      <em class="jxr_comment">// TODO(cpovirk): enable when ready</em>
<a class="jxr_linenumber" name="L55" href="#L55">55</a>      <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> xtestInitialCapacity_setTwice() {
<a class="jxr_linenumber" name="L56" href="#L56">56</a>        <a href="../../../../com/google/common/collect/MapMaker.html">MapMaker</a> maker = <strong class="jxr_keyword">new</strong> <a href="../../../../com/google/common/collect/MapMaker.html">MapMaker</a>().initialCapacity(16);
<a class="jxr_linenumber" name="L57" href="#L57">57</a>        <strong class="jxr_keyword">try</strong> {
<a class="jxr_linenumber" name="L58" href="#L58">58</a>          <em class="jxr_comment">// even to the same value is not allowed</em>
<a class="jxr_linenumber" name="L59" href="#L59">59</a>          maker.initialCapacity(16);
<a class="jxr_linenumber" name="L60" href="#L60">60</a>          fail();
<a class="jxr_linenumber" name="L61" href="#L61">61</a>        } <strong class="jxr_keyword">catch</strong> (IllegalArgumentException expected) {
<a class="jxr_linenumber" name="L62" href="#L62">62</a>        }
<a class="jxr_linenumber" name="L63" href="#L63">63</a>      }
<a class="jxr_linenumber" name="L64" href="#L64">64</a>  
<a class="jxr_linenumber" name="L65" href="#L65">65</a>      @SuppressWarnings(<span class="jxr_string">"deprecation"</span>) <em class="jxr_comment">// test of deprecated method</em>
<a class="jxr_linenumber" name="L66" href="#L66">66</a>      <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testExpiration_setTwice() {
<a class="jxr_linenumber" name="L67" href="#L67">67</a>        <a href="../../../../com/google/common/collect/MapMaker.html">MapMaker</a> maker = <strong class="jxr_keyword">new</strong> <a href="../../../../com/google/common/collect/MapMaker.html">MapMaker</a>().expireAfterWrite(1, HOURS);
<a class="jxr_linenumber" name="L68" href="#L68">68</a>        <strong class="jxr_keyword">try</strong> {
<a class="jxr_linenumber" name="L69" href="#L69">69</a>          <em class="jxr_comment">// even to the same value is not allowed</em>
<a class="jxr_linenumber" name="L70" href="#L70">70</a>          maker.expireAfterWrite(1, HOURS);
<a class="jxr_linenumber" name="L71" href="#L71">71</a>          fail();
<a class="jxr_linenumber" name="L72" href="#L72">72</a>        } <strong class="jxr_keyword">catch</strong> (IllegalStateException expected) {
<a class="jxr_linenumber" name="L73" href="#L73">73</a>        }
<a class="jxr_linenumber" name="L74" href="#L74">74</a>      }
<a class="jxr_linenumber" name="L75" href="#L75">75</a>  
<a class="jxr_linenumber" name="L76" href="#L76">76</a>      <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testMaximumSize_setTwice() {
<a class="jxr_linenumber" name="L77" href="#L77">77</a>        <a href="../../../../com/google/common/collect/MapMaker.html">MapMaker</a> maker = <strong class="jxr_keyword">new</strong> <a href="../../../../com/google/common/collect/MapMaker.html">MapMaker</a>().maximumSize(16);
<a class="jxr_linenumber" name="L78" href="#L78">78</a>        <strong class="jxr_keyword">try</strong> {
<a class="jxr_linenumber" name="L79" href="#L79">79</a>          <em class="jxr_comment">// even to the same value is not allowed</em>
<a class="jxr_linenumber" name="L80" href="#L80">80</a>          maker.maximumSize(16);
<a class="jxr_linenumber" name="L81" href="#L81">81</a>          fail();
<a class="jxr_linenumber" name="L82" href="#L82">82</a>        } <strong class="jxr_keyword">catch</strong> (IllegalStateException expected) {
<a class="jxr_linenumber" name="L83" href="#L83">83</a>        }
<a class="jxr_linenumber" name="L84" href="#L84">84</a>      }
<a class="jxr_linenumber" name="L85" href="#L85">85</a>  
<a class="jxr_linenumber" name="L86" href="#L86">86</a>      <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testReturnsPlainConcurrentHashMapWhenPossible() {
<a class="jxr_linenumber" name="L87" href="#L87">87</a>        Map&lt;?, ?&gt; map = <strong class="jxr_keyword">new</strong> <a href="../../../../com/google/common/collect/MapMaker.html">MapMaker</a>()
<a class="jxr_linenumber" name="L88" href="#L88">88</a>            .initialCapacity(5)
<a class="jxr_linenumber" name="L89" href="#L89">89</a>            .makeMap();
<a class="jxr_linenumber" name="L90" href="#L90">90</a>        assertTrue(map instanceof <a href="../../../../java/util/concurrent/ConcurrentHashMap.html">ConcurrentHashMap</a>);
<a class="jxr_linenumber" name="L91" href="#L91">91</a>      }
<a class="jxr_linenumber" name="L92" href="#L92">92</a>    }
<a class="jxr_linenumber" name="L93" href="#L93">93</a>  
<a class="jxr_linenumber" name="L94" href="#L94">94</a>    <em class="jxr_javadoccomment">/** Tests of the built map with maximumSize. */</em>
<a class="jxr_linenumber" name="L95" href="#L95">95</a>    <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">static</strong> <strong class="jxr_keyword">class</strong> <a href="../../../../com/google/common/collect/MapMakerTest.html">MaximumSizeTest</a> <strong class="jxr_keyword">extends</strong> TestCase {
<a class="jxr_linenumber" name="L96" href="#L96">96</a>      <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testPut_sizeIsZero() {
<a class="jxr_linenumber" name="L97" href="#L97">97</a>        ConcurrentMap&lt;Object, Object&gt; map =
<a class="jxr_linenumber" name="L98" href="#L98">98</a>            <strong class="jxr_keyword">new</strong> <a href="../../../../com/google/common/collect/MapMaker.html">MapMaker</a>().maximumSize(0).makeMap();
<a class="jxr_linenumber" name="L99" href="#L99">99</a>        assertEquals(0, map.size());
<a class="jxr_linenumber" name="L100" href="#L100">100</a>       map.put(<strong class="jxr_keyword">new</strong> Object(), <strong class="jxr_keyword">new</strong> Object());
<a class="jxr_linenumber" name="L101" href="#L101">101</a>       assertEquals(0, map.size());
<a class="jxr_linenumber" name="L102" href="#L102">102</a>     }
<a class="jxr_linenumber" name="L103" href="#L103">103</a> 
<a class="jxr_linenumber" name="L104" href="#L104">104</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testSizeBasedEviction() {
<a class="jxr_linenumber" name="L105" href="#L105">105</a>       <strong class="jxr_keyword">int</strong> numKeys = 10;
<a class="jxr_linenumber" name="L106" href="#L106">106</a>       <strong class="jxr_keyword">int</strong> mapSize = 5;
<a class="jxr_linenumber" name="L107" href="#L107">107</a>       ConcurrentMap&lt;Object, Object&gt; map =
<a class="jxr_linenumber" name="L108" href="#L108">108</a>           <strong class="jxr_keyword">new</strong> <a href="../../../../com/google/common/collect/MapMaker.html">MapMaker</a>().maximumSize(mapSize).makeMap();
<a class="jxr_linenumber" name="L109" href="#L109">109</a>       <strong class="jxr_keyword">for</strong> (<strong class="jxr_keyword">int</strong> i = 0; i &lt; numKeys; i++) {
<a class="jxr_linenumber" name="L110" href="#L110">110</a>         map.put(i, i);
<a class="jxr_linenumber" name="L111" href="#L111">111</a>       }
<a class="jxr_linenumber" name="L112" href="#L112">112</a>       assertEquals(mapSize, map.size());
<a class="jxr_linenumber" name="L113" href="#L113">113</a>       <strong class="jxr_keyword">for</strong> (<strong class="jxr_keyword">int</strong> i = numKeys - mapSize; i &lt; mapSize; i++) {
<a class="jxr_linenumber" name="L114" href="#L114">114</a>         assertTrue(map.containsKey(i));
<a class="jxr_linenumber" name="L115" href="#L115">115</a>       }
<a class="jxr_linenumber" name="L116" href="#L116">116</a>     }
<a class="jxr_linenumber" name="L117" href="#L117">117</a>   }
<a class="jxr_linenumber" name="L118" href="#L118">118</a> 
<a class="jxr_linenumber" name="L119" href="#L119">119</a>   <em class="jxr_javadoccomment">/** Tests for recursive computation. */</em>
<a class="jxr_linenumber" name="L120" href="#L120">120</a>   <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">static</strong> <strong class="jxr_keyword">class</strong> <a href="../../../../com/google/common/collect/MapMakerTest.html">RecursiveComputationTest</a> <strong class="jxr_keyword">extends</strong> TestCase {
<a class="jxr_linenumber" name="L121" href="#L121">121</a>     Function&lt;Integer, String&gt; recursiveComputer
<a class="jxr_linenumber" name="L122" href="#L122">122</a>         = <strong class="jxr_keyword">new</strong> Function&lt;Integer, String&gt;() {
<a class="jxr_linenumber" name="L123" href="#L123">123</a>       @Override
<a class="jxr_linenumber" name="L124" href="#L124">124</a>       <strong class="jxr_keyword">public</strong> String apply(Integer key) {
<a class="jxr_linenumber" name="L125" href="#L125">125</a>         <strong class="jxr_keyword">if</strong> (key &gt; 0) {
<a class="jxr_linenumber" name="L126" href="#L126">126</a>           <strong class="jxr_keyword">return</strong> key + <span class="jxr_string">", "</span> + recursiveMap.get(key - 1);
<a class="jxr_linenumber" name="L127" href="#L127">127</a>         } <strong class="jxr_keyword">else</strong> {
<a class="jxr_linenumber" name="L128" href="#L128">128</a>           <strong class="jxr_keyword">return</strong> <span class="jxr_string">"0"</span>;
<a class="jxr_linenumber" name="L129" href="#L129">129</a>         }
<a class="jxr_linenumber" name="L130" href="#L130">130</a>       }
<a class="jxr_linenumber" name="L131" href="#L131">131</a>     };
<a class="jxr_linenumber" name="L132" href="#L132">132</a> 
<a class="jxr_linenumber" name="L133" href="#L133">133</a>     ConcurrentMap&lt;Integer, String&gt; recursiveMap = <strong class="jxr_keyword">new</strong> <a href="../../../../com/google/common/collect/MapMaker.html">MapMaker</a>()
<a class="jxr_linenumber" name="L134" href="#L134">134</a>         .makeComputingMap(recursiveComputer);
<a class="jxr_linenumber" name="L135" href="#L135">135</a> 
<a class="jxr_linenumber" name="L136" href="#L136">136</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testRecursiveComputation() {
<a class="jxr_linenumber" name="L137" href="#L137">137</a>       assertEquals(<span class="jxr_string">"3, 2, 1, 0"</span>, recursiveMap.get(3));
<a class="jxr_linenumber" name="L138" href="#L138">138</a>     }
<a class="jxr_linenumber" name="L139" href="#L139">139</a>   }
<a class="jxr_linenumber" name="L140" href="#L140">140</a> 
<a class="jxr_linenumber" name="L141" href="#L141">141</a>   <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L142" href="#L142">142</a> <em class="jxr_javadoccomment">   * Tests for computing functionality.</em>
<a class="jxr_linenumber" name="L143" href="#L143">143</a> <em class="jxr_javadoccomment">   */</em>
<a class="jxr_linenumber" name="L144" href="#L144">144</a>   <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">static</strong> <strong class="jxr_keyword">class</strong> <a href="../../../../com/google/common/collect/MapMakerTest.html">ComputingTest</a> <strong class="jxr_keyword">extends</strong> TestCase {
<a class="jxr_linenumber" name="L145" href="#L145">145</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testComputerThatReturnsNull() {
<a class="jxr_linenumber" name="L146" href="#L146">146</a>       ConcurrentMap&lt;Integer, String&gt; map = <strong class="jxr_keyword">new</strong> <a href="../../../../com/google/common/collect/MapMaker.html">MapMaker</a>()
<a class="jxr_linenumber" name="L147" href="#L147">147</a>           .makeComputingMap(<strong class="jxr_keyword">new</strong> Function&lt;Integer, String&gt;() {
<a class="jxr_linenumber" name="L148" href="#L148">148</a>             @Override
<a class="jxr_linenumber" name="L149" href="#L149">149</a>             <strong class="jxr_keyword">public</strong> String apply(Integer key) {
<a class="jxr_linenumber" name="L150" href="#L150">150</a>               <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">null</strong>;
<a class="jxr_linenumber" name="L151" href="#L151">151</a>             }
<a class="jxr_linenumber" name="L152" href="#L152">152</a>           });
<a class="jxr_linenumber" name="L153" href="#L153">153</a>       <strong class="jxr_keyword">try</strong> {
<a class="jxr_linenumber" name="L154" href="#L154">154</a>         map.get(1);
<a class="jxr_linenumber" name="L155" href="#L155">155</a>         fail();
<a class="jxr_linenumber" name="L156" href="#L156">156</a>       } <strong class="jxr_keyword">catch</strong> (NullPointerException e) { <em class="jxr_comment">/* expected */</em> }
<a class="jxr_linenumber" name="L157" href="#L157">157</a>     }
<a class="jxr_linenumber" name="L158" href="#L158">158</a> 
<a class="jxr_linenumber" name="L159" href="#L159">159</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testRuntimeException() {
<a class="jxr_linenumber" name="L160" href="#L160">160</a>       <strong class="jxr_keyword">final</strong> RuntimeException e = <strong class="jxr_keyword">new</strong> RuntimeException();
<a class="jxr_linenumber" name="L161" href="#L161">161</a> 
<a class="jxr_linenumber" name="L162" href="#L162">162</a>       ConcurrentMap&lt;Object, Object&gt; map = <strong class="jxr_keyword">new</strong> <a href="../../../../com/google/common/collect/MapMaker.html">MapMaker</a>().makeComputingMap(
<a class="jxr_linenumber" name="L163" href="#L163">163</a>           <strong class="jxr_keyword">new</strong> Function&lt;Object, Object&gt;() {
<a class="jxr_linenumber" name="L164" href="#L164">164</a>         @Override
<a class="jxr_linenumber" name="L165" href="#L165">165</a>         <strong class="jxr_keyword">public</strong> Object apply(Object from) {
<a class="jxr_linenumber" name="L166" href="#L166">166</a>           <strong class="jxr_keyword">throw</strong> e;
<a class="jxr_linenumber" name="L167" href="#L167">167</a>         }
<a class="jxr_linenumber" name="L168" href="#L168">168</a>       });
<a class="jxr_linenumber" name="L169" href="#L169">169</a> 
<a class="jxr_linenumber" name="L170" href="#L170">170</a>       <strong class="jxr_keyword">try</strong> {
<a class="jxr_linenumber" name="L171" href="#L171">171</a>         map.get(<strong class="jxr_keyword">new</strong> Object());
<a class="jxr_linenumber" name="L172" href="#L172">172</a>         fail();
<a class="jxr_linenumber" name="L173" href="#L173">173</a>       } <strong class="jxr_keyword">catch</strong> (ComputationException ce) {
<a class="jxr_linenumber" name="L174" href="#L174">174</a>         assertSame(e, ce.getCause());
<a class="jxr_linenumber" name="L175" href="#L175">175</a>       }
<a class="jxr_linenumber" name="L176" href="#L176">176</a>     }
<a class="jxr_linenumber" name="L177" href="#L177">177</a>   }
<a class="jxr_linenumber" name="L178" href="#L178">178</a> }
<a class="jxr_linenumber" name="L179" href="#L179">179</a> 
</pre>
<hr/>
<div id="footer">Copyright &#169; 2015. All rights reserved.</div>
</body>
</html>
