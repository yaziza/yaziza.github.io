<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>Finalizer xref</title>
<link type="text/css" rel="stylesheet" href="../../../../../stylesheet.css" />
</head>
<body>
<div id="overview"><a href="../../../../../../../../../apidocs/com/google/common/base/internal/Finalizer.html">View Javadoc</a></div><pre>
<a class="jxr_linenumber" name="L1" href="#L1">1</a>   <em class="jxr_comment">/*</em>
<a class="jxr_linenumber" name="L2" href="#L2">2</a>   <em class="jxr_comment"> * Copyright (C) 2008 The Guava Authors</em>
<a class="jxr_linenumber" name="L3" href="#L3">3</a>   <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L4" href="#L4">4</a>   <em class="jxr_comment"> * Licensed under the Apache License, Version 2.0 (the "License");</em>
<a class="jxr_linenumber" name="L5" href="#L5">5</a>   <em class="jxr_comment"> * you may not use this file except in compliance with the License.</em>
<a class="jxr_linenumber" name="L6" href="#L6">6</a>   <em class="jxr_comment"> * You may obtain a copy of the License at</em>
<a class="jxr_linenumber" name="L7" href="#L7">7</a>   <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L8" href="#L8">8</a>   <em class="jxr_comment"> *      <a href="http://www.apache.org/licenses/LICENSE-2." target="alexandria_uri">http://www.apache.org/licenses/LICENSE-2.</a>0</em>
<a class="jxr_linenumber" name="L9" href="#L9">9</a>   <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L10" href="#L10">10</a>  <em class="jxr_comment"> * Unless required by applicable law or agreed to in writing, software</em>
<a class="jxr_linenumber" name="L11" href="#L11">11</a>  <em class="jxr_comment"> * distributed under the License is distributed on an "AS IS" BASIS,</em>
<a class="jxr_linenumber" name="L12" href="#L12">12</a>  <em class="jxr_comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</em>
<a class="jxr_linenumber" name="L13" href="#L13">13</a>  <em class="jxr_comment"> * See the License for the specific language governing permissions and</em>
<a class="jxr_linenumber" name="L14" href="#L14">14</a>  <em class="jxr_comment"> * limitations under the License.</em>
<a class="jxr_linenumber" name="L15" href="#L15">15</a>  <em class="jxr_comment"> */</em>
<a class="jxr_linenumber" name="L16" href="#L16">16</a>  
<a class="jxr_linenumber" name="L17" href="#L17">17</a>  <strong class="jxr_keyword">package</strong> com.google.common.base.internal;
<a class="jxr_linenumber" name="L18" href="#L18">18</a>  
<a class="jxr_linenumber" name="L19" href="#L19">19</a>  <strong class="jxr_keyword">import</strong> java.lang.ref.PhantomReference;
<a class="jxr_linenumber" name="L20" href="#L20">20</a>  <strong class="jxr_keyword">import</strong> java.lang.ref.Reference;
<a class="jxr_linenumber" name="L21" href="#L21">21</a>  <strong class="jxr_keyword">import</strong> java.lang.ref.ReferenceQueue;
<a class="jxr_linenumber" name="L22" href="#L22">22</a>  <strong class="jxr_keyword">import</strong> java.lang.ref.WeakReference;
<a class="jxr_linenumber" name="L23" href="#L23">23</a>  <strong class="jxr_keyword">import</strong> java.lang.reflect.Field;
<a class="jxr_linenumber" name="L24" href="#L24">24</a>  <strong class="jxr_keyword">import</strong> java.lang.reflect.Method;
<a class="jxr_linenumber" name="L25" href="#L25">25</a>  <strong class="jxr_keyword">import</strong> java.util.logging.Level;
<a class="jxr_linenumber" name="L26" href="#L26">26</a>  <strong class="jxr_keyword">import</strong> java.util.logging.Logger;
<a class="jxr_linenumber" name="L27" href="#L27">27</a>  
<a class="jxr_linenumber" name="L28" href="#L28">28</a>  <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L29" href="#L29">29</a>  <em class="jxr_javadoccomment"> * Thread that finalizes referents. All references should implement</em>
<a class="jxr_linenumber" name="L30" href="#L30">30</a>  <em class="jxr_javadoccomment"> * {@code com.google.common.base.FinalizableReference}.</em>
<a class="jxr_linenumber" name="L31" href="#L31">31</a>  <em class="jxr_javadoccomment"> *</em>
<a class="jxr_linenumber" name="L32" href="#L32">32</a>  <em class="jxr_javadoccomment"> * &lt;p&gt;While this class is public, we consider it to be *internal* and not part</em>
<a class="jxr_linenumber" name="L33" href="#L33">33</a>  <em class="jxr_javadoccomment"> * of our published API. It is public so we can access it reflectively across</em>
<a class="jxr_linenumber" name="L34" href="#L34">34</a>  <em class="jxr_javadoccomment"> * class loaders in secure environments.</em>
<a class="jxr_linenumber" name="L35" href="#L35">35</a>  <em class="jxr_javadoccomment"> *</em>
<a class="jxr_linenumber" name="L36" href="#L36">36</a>  <em class="jxr_javadoccomment"> * &lt;p&gt;This class can't depend on other Google Collections code. If we were</em>
<a class="jxr_linenumber" name="L37" href="#L37">37</a>  <em class="jxr_javadoccomment"> * to load this class in the same class loader as the rest of</em>
<a class="jxr_linenumber" name="L38" href="#L38">38</a>  <em class="jxr_javadoccomment"> * Google Collections, this thread would keep an indirect strong reference</em>
<a class="jxr_linenumber" name="L39" href="#L39">39</a>  <em class="jxr_javadoccomment"> * to the class loader and prevent it from being garbage collected. This</em>
<a class="jxr_linenumber" name="L40" href="#L40">40</a>  <em class="jxr_javadoccomment"> * poses a problem for environments where you want to throw away the class</em>
<a class="jxr_linenumber" name="L41" href="#L41">41</a>  <em class="jxr_javadoccomment"> * loader. For example, dynamically reloading a web application or unloading</em>
<a class="jxr_linenumber" name="L42" href="#L42">42</a>  <em class="jxr_javadoccomment"> * an OSGi bundle.</em>
<a class="jxr_linenumber" name="L43" href="#L43">43</a>  <em class="jxr_javadoccomment"> *</em>
<a class="jxr_linenumber" name="L44" href="#L44">44</a>  <em class="jxr_javadoccomment"> * &lt;p&gt;{@code com.google.common.base.FinalizableReferenceQueue} loads this class</em>
<a class="jxr_linenumber" name="L45" href="#L45">45</a>  <em class="jxr_javadoccomment"> * in its own class loader. That way, this class doesn't prevent the main</em>
<a class="jxr_linenumber" name="L46" href="#L46">46</a>  <em class="jxr_javadoccomment"> * class loader from getting garbage collected, and this class can detect when</em>
<a class="jxr_linenumber" name="L47" href="#L47">47</a>  <em class="jxr_javadoccomment"> * the main class loader has been garbage collected and stop itself.</em>
<a class="jxr_linenumber" name="L48" href="#L48">48</a>  <em class="jxr_javadoccomment"> */</em>
<a class="jxr_linenumber" name="L49" href="#L49">49</a>  <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">class</strong> <a href="../../../../../com/google/common/base/internal/Finalizer.html">Finalizer</a> <strong class="jxr_keyword">implements</strong> Runnable {
<a class="jxr_linenumber" name="L50" href="#L50">50</a>  
<a class="jxr_linenumber" name="L51" href="#L51">51</a>    <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">static</strong> <strong class="jxr_keyword">final</strong> Logger logger
<a class="jxr_linenumber" name="L52" href="#L52">52</a>        = Logger.getLogger(Finalizer.<strong class="jxr_keyword">class</strong>.getName());
<a class="jxr_linenumber" name="L53" href="#L53">53</a>  
<a class="jxr_linenumber" name="L54" href="#L54">54</a>    <em class="jxr_javadoccomment">/** Name of FinalizableReference.class. */</em>
<a class="jxr_linenumber" name="L55" href="#L55">55</a>    <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">static</strong> <strong class="jxr_keyword">final</strong> String FINALIZABLE_REFERENCE
<a class="jxr_linenumber" name="L56" href="#L56">56</a>        = <span class="jxr_string">"com.google.common.base.FinalizableReference"</span>;
<a class="jxr_linenumber" name="L57" href="#L57">57</a>  
<a class="jxr_linenumber" name="L58" href="#L58">58</a>    <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L59" href="#L59">59</a>  <em class="jxr_javadoccomment">   * Starts the Finalizer thread. FinalizableReferenceQueue calls this method</em>
<a class="jxr_linenumber" name="L60" href="#L60">60</a>  <em class="jxr_javadoccomment">   * reflectively.</em>
<a class="jxr_linenumber" name="L61" href="#L61">61</a>  <em class="jxr_javadoccomment">   *</em>
<a class="jxr_linenumber" name="L62" href="#L62">62</a>  <em class="jxr_javadoccomment">   * @param finalizableReferenceClass FinalizableReference.class.</em>
<a class="jxr_linenumber" name="L63" href="#L63">63</a>  <em class="jxr_javadoccomment">   * @param queue a reference queue that the thread will poll.</em>
<a class="jxr_linenumber" name="L64" href="#L64">64</a>  <em class="jxr_javadoccomment">   * @param frqReference a phantom reference to the FinalizableReferenceQueue, which will be</em>
<a class="jxr_linenumber" name="L65" href="#L65">65</a>  <em class="jxr_javadoccomment">   * queued either when the FinalizableReferenceQueue is no longer referenced anywhere, or when</em>
<a class="jxr_linenumber" name="L66" href="#L66">66</a>  <em class="jxr_javadoccomment">   * its close() method is called.</em>
<a class="jxr_linenumber" name="L67" href="#L67">67</a>  <em class="jxr_javadoccomment">   */</em>
<a class="jxr_linenumber" name="L68" href="#L68">68</a>    <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">static</strong> <strong class="jxr_keyword">void</strong> startFinalizer(
<a class="jxr_linenumber" name="L69" href="#L69">69</a>        Class&lt;?&gt; finalizableReferenceClass,
<a class="jxr_linenumber" name="L70" href="#L70">70</a>        ReferenceQueue&lt;Object&gt; queue,
<a class="jxr_linenumber" name="L71" href="#L71">71</a>        PhantomReference&lt;Object&gt; frqReference) {
<a class="jxr_linenumber" name="L72" href="#L72">72</a>      <em class="jxr_comment">/*</em>
<a class="jxr_linenumber" name="L73" href="#L73">73</a>  <em class="jxr_comment">     * We use FinalizableReference.class for two things:</em>
<a class="jxr_linenumber" name="L74" href="#L74">74</a>  <em class="jxr_comment">     *</em>
<a class="jxr_linenumber" name="L75" href="#L75">75</a>  <em class="jxr_comment">     * 1) To invoke FinalizableReference.finalizeReferent()</em>
<a class="jxr_linenumber" name="L76" href="#L76">76</a>  <em class="jxr_comment">     *</em>
<a class="jxr_linenumber" name="L77" href="#L77">77</a>  <em class="jxr_comment">     * 2) To detect when FinalizableReference's class loader has to be garbage</em>
<a class="jxr_linenumber" name="L78" href="#L78">78</a>  <em class="jxr_comment">     * collected, at which point, Finalizer can stop running</em>
<a class="jxr_linenumber" name="L79" href="#L79">79</a>  <em class="jxr_comment">     */</em>
<a class="jxr_linenumber" name="L80" href="#L80">80</a>      <strong class="jxr_keyword">if</strong> (!finalizableReferenceClass.getName().equals(FINALIZABLE_REFERENCE)) {
<a class="jxr_linenumber" name="L81" href="#L81">81</a>        <strong class="jxr_keyword">throw</strong> <strong class="jxr_keyword">new</strong> IllegalArgumentException(
<a class="jxr_linenumber" name="L82" href="#L82">82</a>            <span class="jxr_string">"Expected "</span> + FINALIZABLE_REFERENCE + <span class="jxr_string">"."</span>);
<a class="jxr_linenumber" name="L83" href="#L83">83</a>      }
<a class="jxr_linenumber" name="L84" href="#L84">84</a>  
<a class="jxr_linenumber" name="L85" href="#L85">85</a>      <a href="../../../../../com/google/common/base/internal/Finalizer.html">Finalizer</a> finalizer = <strong class="jxr_keyword">new</strong> <a href="../../../../../com/google/common/base/internal/Finalizer.html">Finalizer</a>(finalizableReferenceClass, queue, frqReference);
<a class="jxr_linenumber" name="L86" href="#L86">86</a>      Thread thread = <strong class="jxr_keyword">new</strong> Thread(finalizer);
<a class="jxr_linenumber" name="L87" href="#L87">87</a>      thread.setName(Finalizer.<strong class="jxr_keyword">class</strong>.getName());
<a class="jxr_linenumber" name="L88" href="#L88">88</a>      thread.setDaemon(<strong class="jxr_keyword">true</strong>);
<a class="jxr_linenumber" name="L89" href="#L89">89</a>  
<a class="jxr_linenumber" name="L90" href="#L90">90</a>      <strong class="jxr_keyword">try</strong> {
<a class="jxr_linenumber" name="L91" href="#L91">91</a>        <strong class="jxr_keyword">if</strong> (inheritableThreadLocals != <strong class="jxr_keyword">null</strong>) {
<a class="jxr_linenumber" name="L92" href="#L92">92</a>          inheritableThreadLocals.set(thread, <strong class="jxr_keyword">null</strong>);
<a class="jxr_linenumber" name="L93" href="#L93">93</a>        }
<a class="jxr_linenumber" name="L94" href="#L94">94</a>      } <strong class="jxr_keyword">catch</strong> (Throwable t) {
<a class="jxr_linenumber" name="L95" href="#L95">95</a>        logger.log(Level.INFO, <span class="jxr_string">"Failed to clear thread local values inherited"</span>
<a class="jxr_linenumber" name="L96" href="#L96">96</a>            + <span class="jxr_string">" by reference finalizer thread."</span>, t);
<a class="jxr_linenumber" name="L97" href="#L97">97</a>      }
<a class="jxr_linenumber" name="L98" href="#L98">98</a>  
<a class="jxr_linenumber" name="L99" href="#L99">99</a>      thread.start();
<a class="jxr_linenumber" name="L100" href="#L100">100</a>   }
<a class="jxr_linenumber" name="L101" href="#L101">101</a> 
<a class="jxr_linenumber" name="L102" href="#L102">102</a>   <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">final</strong> WeakReference&lt;Class&lt;?&gt;&gt; finalizableReferenceClassReference;
<a class="jxr_linenumber" name="L103" href="#L103">103</a>   <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">final</strong> PhantomReference&lt;Object&gt; frqReference;
<a class="jxr_linenumber" name="L104" href="#L104">104</a>   <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">final</strong> ReferenceQueue&lt;Object&gt; queue;
<a class="jxr_linenumber" name="L105" href="#L105">105</a> 
<a class="jxr_linenumber" name="L106" href="#L106">106</a>   <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">static</strong> <strong class="jxr_keyword">final</strong> Field inheritableThreadLocals
<a class="jxr_linenumber" name="L107" href="#L107">107</a>       = getInheritableThreadLocalsField();
<a class="jxr_linenumber" name="L108" href="#L108">108</a> 
<a class="jxr_linenumber" name="L109" href="#L109">109</a>   <em class="jxr_javadoccomment">/** Constructs a new finalizer thread. */</em>
<a class="jxr_linenumber" name="L110" href="#L110">110</a>   <strong class="jxr_keyword">private</strong> <a href="../../../../../com/google/common/base/internal/Finalizer.html">Finalizer</a>(
<a class="jxr_linenumber" name="L111" href="#L111">111</a>       Class&lt;?&gt; finalizableReferenceClass,
<a class="jxr_linenumber" name="L112" href="#L112">112</a>       ReferenceQueue&lt;Object&gt; queue,
<a class="jxr_linenumber" name="L113" href="#L113">113</a>       PhantomReference&lt;Object&gt; frqReference) {
<a class="jxr_linenumber" name="L114" href="#L114">114</a>     <strong class="jxr_keyword">this</strong>.queue = queue;
<a class="jxr_linenumber" name="L115" href="#L115">115</a> 
<a class="jxr_linenumber" name="L116" href="#L116">116</a>     <strong class="jxr_keyword">this</strong>.finalizableReferenceClassReference
<a class="jxr_linenumber" name="L117" href="#L117">117</a>         = <strong class="jxr_keyword">new</strong> WeakReference&lt;Class&lt;?&gt;&gt;(finalizableReferenceClass);
<a class="jxr_linenumber" name="L118" href="#L118">118</a> 
<a class="jxr_linenumber" name="L119" href="#L119">119</a>     <em class="jxr_comment">// Keep track of the FRQ that started us so we know when to stop.</em>
<a class="jxr_linenumber" name="L120" href="#L120">120</a>     <strong class="jxr_keyword">this</strong>.frqReference = frqReference;
<a class="jxr_linenumber" name="L121" href="#L121">121</a>   }
<a class="jxr_linenumber" name="L122" href="#L122">122</a> 
<a class="jxr_linenumber" name="L123" href="#L123">123</a>   <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L124" href="#L124">124</a> <em class="jxr_javadoccomment">   * Loops continuously, pulling references off the queue and cleaning them up.</em>
<a class="jxr_linenumber" name="L125" href="#L125">125</a> <em class="jxr_javadoccomment">   */</em>
<a class="jxr_linenumber" name="L126" href="#L126">126</a>   @SuppressWarnings(<span class="jxr_string">"InfiniteLoopStatement"</span>)
<a class="jxr_linenumber" name="L127" href="#L127">127</a>   @Override
<a class="jxr_linenumber" name="L128" href="#L128">128</a>   <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> run() {
<a class="jxr_linenumber" name="L129" href="#L129">129</a>     <strong class="jxr_keyword">while</strong> (<strong class="jxr_keyword">true</strong>) {
<a class="jxr_linenumber" name="L130" href="#L130">130</a>       <strong class="jxr_keyword">try</strong> {
<a class="jxr_linenumber" name="L131" href="#L131">131</a>         <strong class="jxr_keyword">if</strong> (!cleanUp(queue.remove())) {
<a class="jxr_linenumber" name="L132" href="#L132">132</a>           <strong class="jxr_keyword">break</strong>;
<a class="jxr_linenumber" name="L133" href="#L133">133</a>         }
<a class="jxr_linenumber" name="L134" href="#L134">134</a>       } <strong class="jxr_keyword">catch</strong> (InterruptedException e) { <em class="jxr_comment">/* ignore */</em> }
<a class="jxr_linenumber" name="L135" href="#L135">135</a>     }
<a class="jxr_linenumber" name="L136" href="#L136">136</a>   }
<a class="jxr_linenumber" name="L137" href="#L137">137</a> 
<a class="jxr_linenumber" name="L138" href="#L138">138</a>   <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L139" href="#L139">139</a> <em class="jxr_javadoccomment">   * Cleans up a single reference. Catches and logs all throwables.</em>
<a class="jxr_linenumber" name="L140" href="#L140">140</a> <em class="jxr_javadoccomment">   * @return true if the caller should continue, false if the associated FinalizableReferenceQueue</em>
<a class="jxr_linenumber" name="L141" href="#L141">141</a> <em class="jxr_javadoccomment">   * is no longer referenced.</em>
<a class="jxr_linenumber" name="L142" href="#L142">142</a> <em class="jxr_javadoccomment">   */</em>
<a class="jxr_linenumber" name="L143" href="#L143">143</a>   <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">boolean</strong> cleanUp(Reference&lt;?&gt; reference) {
<a class="jxr_linenumber" name="L144" href="#L144">144</a>     Method finalizeReferentMethod = getFinalizeReferentMethod();
<a class="jxr_linenumber" name="L145" href="#L145">145</a>     <strong class="jxr_keyword">if</strong> (finalizeReferentMethod == <strong class="jxr_keyword">null</strong>) {
<a class="jxr_linenumber" name="L146" href="#L146">146</a>       <strong class="jxr_keyword">return</strong> false;
<a class="jxr_linenumber" name="L147" href="#L147">147</a>     }
<a class="jxr_linenumber" name="L148" href="#L148">148</a>     <strong class="jxr_keyword">do</strong> {
<a class="jxr_linenumber" name="L149" href="#L149">149</a>       <em class="jxr_comment">/*</em>
<a class="jxr_linenumber" name="L150" href="#L150">150</a> <em class="jxr_comment">       * This is for the benefit of phantom references. Weak and soft</em>
<a class="jxr_linenumber" name="L151" href="#L151">151</a> <em class="jxr_comment">       * references will have already been cleared by this point.</em>
<a class="jxr_linenumber" name="L152" href="#L152">152</a> <em class="jxr_comment">       */</em>
<a class="jxr_linenumber" name="L153" href="#L153">153</a>       reference.clear();
<a class="jxr_linenumber" name="L154" href="#L154">154</a> 
<a class="jxr_linenumber" name="L155" href="#L155">155</a>       <strong class="jxr_keyword">if</strong> (reference == frqReference) {
<a class="jxr_linenumber" name="L156" href="#L156">156</a>         <em class="jxr_comment">/*</em>
<a class="jxr_linenumber" name="L157" href="#L157">157</a> <em class="jxr_comment">         * The client no longer has a reference to the</em>
<a class="jxr_linenumber" name="L158" href="#L158">158</a> <em class="jxr_comment">         * FinalizableReferenceQueue. We can stop.</em>
<a class="jxr_linenumber" name="L159" href="#L159">159</a> <em class="jxr_comment">         */</em>
<a class="jxr_linenumber" name="L160" href="#L160">160</a>         <strong class="jxr_keyword">return</strong> false;
<a class="jxr_linenumber" name="L161" href="#L161">161</a>       }
<a class="jxr_linenumber" name="L162" href="#L162">162</a> 
<a class="jxr_linenumber" name="L163" href="#L163">163</a>       <strong class="jxr_keyword">try</strong> {
<a class="jxr_linenumber" name="L164" href="#L164">164</a>         finalizeReferentMethod.invoke(reference);
<a class="jxr_linenumber" name="L165" href="#L165">165</a>       } <strong class="jxr_keyword">catch</strong> (Throwable t) {
<a class="jxr_linenumber" name="L166" href="#L166">166</a>         logger.log(Level.SEVERE, <span class="jxr_string">"Error cleaning up after reference."</span>, t);
<a class="jxr_linenumber" name="L167" href="#L167">167</a>       }
<a class="jxr_linenumber" name="L168" href="#L168">168</a> 
<a class="jxr_linenumber" name="L169" href="#L169">169</a>       <em class="jxr_comment">/*</em>
<a class="jxr_linenumber" name="L170" href="#L170">170</a> <em class="jxr_comment">       * Loop as long as we have references available so as not to waste</em>
<a class="jxr_linenumber" name="L171" href="#L171">171</a> <em class="jxr_comment">       * CPU looking up the Method over and over again.</em>
<a class="jxr_linenumber" name="L172" href="#L172">172</a> <em class="jxr_comment">       */</em>
<a class="jxr_linenumber" name="L173" href="#L173">173</a>     } <strong class="jxr_keyword">while</strong> ((reference = queue.poll()) != <strong class="jxr_keyword">null</strong>);
<a class="jxr_linenumber" name="L174" href="#L174">174</a>     <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">true</strong>;
<a class="jxr_linenumber" name="L175" href="#L175">175</a>   }
<a class="jxr_linenumber" name="L176" href="#L176">176</a> 
<a class="jxr_linenumber" name="L177" href="#L177">177</a>   <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L178" href="#L178">178</a> <em class="jxr_javadoccomment">   * Looks up FinalizableReference.finalizeReferent() method.</em>
<a class="jxr_linenumber" name="L179" href="#L179">179</a> <em class="jxr_javadoccomment">   */</em>
<a class="jxr_linenumber" name="L180" href="#L180">180</a>   <strong class="jxr_keyword">private</strong> Method getFinalizeReferentMethod() {
<a class="jxr_linenumber" name="L181" href="#L181">181</a>     Class&lt;?&gt; finalizableReferenceClass
<a class="jxr_linenumber" name="L182" href="#L182">182</a>         = finalizableReferenceClassReference.get();
<a class="jxr_linenumber" name="L183" href="#L183">183</a>     <strong class="jxr_keyword">if</strong> (finalizableReferenceClass == <strong class="jxr_keyword">null</strong>) {
<a class="jxr_linenumber" name="L184" href="#L184">184</a>       <em class="jxr_comment">/*</em>
<a class="jxr_linenumber" name="L185" href="#L185">185</a> <em class="jxr_comment">       * FinalizableReference's class loader was reclaimed. While there's a</em>
<a class="jxr_linenumber" name="L186" href="#L186">186</a> <em class="jxr_comment">       * chance that other finalizable references could be enqueued</em>
<a class="jxr_linenumber" name="L187" href="#L187">187</a> <em class="jxr_comment">       * subsequently (at which point the class loader would be resurrected</em>
<a class="jxr_linenumber" name="L188" href="#L188">188</a> <em class="jxr_comment">       * by virtue of us having a strong reference to it), we should pretty</em>
<a class="jxr_linenumber" name="L189" href="#L189">189</a> <em class="jxr_comment">       * much just shut down and make sure we don't keep it alive any longer</em>
<a class="jxr_linenumber" name="L190" href="#L190">190</a> <em class="jxr_comment">       * than necessary.</em>
<a class="jxr_linenumber" name="L191" href="#L191">191</a> <em class="jxr_comment">       */</em>
<a class="jxr_linenumber" name="L192" href="#L192">192</a>       <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">null</strong>;
<a class="jxr_linenumber" name="L193" href="#L193">193</a>     }
<a class="jxr_linenumber" name="L194" href="#L194">194</a>     <strong class="jxr_keyword">try</strong> {
<a class="jxr_linenumber" name="L195" href="#L195">195</a>       <strong class="jxr_keyword">return</strong> finalizableReferenceClass.getMethod(<span class="jxr_string">"finalizeReferent"</span>);
<a class="jxr_linenumber" name="L196" href="#L196">196</a>     } <strong class="jxr_keyword">catch</strong> (NoSuchMethodException e) {
<a class="jxr_linenumber" name="L197" href="#L197">197</a>       <strong class="jxr_keyword">throw</strong> <strong class="jxr_keyword">new</strong> AssertionError(e);
<a class="jxr_linenumber" name="L198" href="#L198">198</a>     }
<a class="jxr_linenumber" name="L199" href="#L199">199</a>   }
<a class="jxr_linenumber" name="L200" href="#L200">200</a> 
<a class="jxr_linenumber" name="L201" href="#L201">201</a>   <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">static</strong> Field getInheritableThreadLocalsField() {
<a class="jxr_linenumber" name="L202" href="#L202">202</a>     <strong class="jxr_keyword">try</strong> {
<a class="jxr_linenumber" name="L203" href="#L203">203</a>       Field inheritableThreadLocals
<a class="jxr_linenumber" name="L204" href="#L204">204</a>           = Thread.<strong class="jxr_keyword">class</strong>.getDeclaredField(<span class="jxr_string">"inheritableThreadLocals"</span>);
<a class="jxr_linenumber" name="L205" href="#L205">205</a>       inheritableThreadLocals.setAccessible(<strong class="jxr_keyword">true</strong>);
<a class="jxr_linenumber" name="L206" href="#L206">206</a>       <strong class="jxr_keyword">return</strong> inheritableThreadLocals;
<a class="jxr_linenumber" name="L207" href="#L207">207</a>     } <strong class="jxr_keyword">catch</strong> (Throwable t) {
<a class="jxr_linenumber" name="L208" href="#L208">208</a>       logger.log(Level.INFO, <span class="jxr_string">"Couldn't access Thread.inheritableThreadLocals."</span>
<a class="jxr_linenumber" name="L209" href="#L209">209</a>           + <span class="jxr_string">" Reference finalizer threads will inherit thread local"</span>
<a class="jxr_linenumber" name="L210" href="#L210">210</a>           + <span class="jxr_string">" values."</span>);
<a class="jxr_linenumber" name="L211" href="#L211">211</a>       <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">null</strong>;
<a class="jxr_linenumber" name="L212" href="#L212">212</a>     }
<a class="jxr_linenumber" name="L213" href="#L213">213</a>   }
<a class="jxr_linenumber" name="L214" href="#L214">214</a> }
</pre>
<hr/>
<div id="footer">Copyright &#169; 2015. All rights reserved.</div>
</body>
</html>
