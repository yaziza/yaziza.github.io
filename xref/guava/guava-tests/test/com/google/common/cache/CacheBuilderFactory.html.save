<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>CacheBuilderFactory xref</title>
<link type="text/css" rel="stylesheet" href="../../../../stylesheet.css" />
</head>
<body>
<div id="overview"><a href="../../../../../../../../apidocs/com/google/common/cache/CacheBuilderFactory.html">View Javadoc</a></div><pre>
<a class="jxr_linenumber" name="L1" href="#L1">1</a>   <em class="jxr_comment">/*</em>
<a class="jxr_linenumber" name="L2" href="#L2">2</a>   <em class="jxr_comment"> * Copyright (C) 2011 The Guava Authors</em>
<a class="jxr_linenumber" name="L3" href="#L3">3</a>   <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L4" href="#L4">4</a>   <em class="jxr_comment"> * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except</em>
<a class="jxr_linenumber" name="L5" href="#L5">5</a>   <em class="jxr_comment"> * in compliance with the License. You may obtain a copy of the License at</em>
<a class="jxr_linenumber" name="L6" href="#L6">6</a>   <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L7" href="#L7">7</a>   <em class="jxr_comment"> * <a href="http://www.apache.org/licenses/LICENSE-2." target="alexandria_uri">http://www.apache.org/licenses/LICENSE-2.</a>0</em>
<a class="jxr_linenumber" name="L8" href="#L8">8</a>   <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L9" href="#L9">9</a>   <em class="jxr_comment"> * Unless required by applicable law or agreed to in writing, software distributed under the License</em>
<a class="jxr_linenumber" name="L10" href="#L10">10</a>  <em class="jxr_comment"> * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express</em>
<a class="jxr_linenumber" name="L11" href="#L11">11</a>  <em class="jxr_comment"> * or implied. See the License for the specific language governing permissions and limitations under</em>
<a class="jxr_linenumber" name="L12" href="#L12">12</a>  <em class="jxr_comment"> * the License.</em>
<a class="jxr_linenumber" name="L13" href="#L13">13</a>  <em class="jxr_comment"> */</em>
<a class="jxr_linenumber" name="L14" href="#L14">14</a>  
<a class="jxr_linenumber" name="L15" href="#L15">15</a>  <strong class="jxr_keyword">package</strong> com.google.common.cache;
<a class="jxr_linenumber" name="L16" href="#L16">16</a>  
<a class="jxr_linenumber" name="L17" href="#L17">17</a>  <strong class="jxr_keyword">import</strong> com.google.common.base.Function;
<a class="jxr_linenumber" name="L18" href="#L18">18</a>  <strong class="jxr_keyword">import</strong> com.google.common.base.MoreObjects;
<a class="jxr_linenumber" name="L19" href="#L19">19</a>  <strong class="jxr_keyword">import</strong> com.google.common.base.Objects;
<a class="jxr_linenumber" name="L20" href="#L20">20</a>  <strong class="jxr_keyword">import</strong> com.google.common.base.Optional;
<a class="jxr_linenumber" name="L21" href="#L21">21</a>  <strong class="jxr_keyword">import</strong> com.google.common.base.Preconditions;
<a class="jxr_linenumber" name="L22" href="#L22">22</a>  <strong class="jxr_keyword">import</strong> com.google.common.cache.LocalCache.Strength;
<a class="jxr_linenumber" name="L23" href="#L23">23</a>  <strong class="jxr_keyword">import</strong> com.google.common.collect.Iterables;
<a class="jxr_linenumber" name="L24" href="#L24">24</a>  <strong class="jxr_keyword">import</strong> com.google.common.collect.Lists;
<a class="jxr_linenumber" name="L25" href="#L25">25</a>  <strong class="jxr_keyword">import</strong> com.google.common.collect.Sets;
<a class="jxr_linenumber" name="L26" href="#L26">26</a>  
<a class="jxr_linenumber" name="L27" href="#L27">27</a>  <strong class="jxr_keyword">import</strong> java.util.List;
<a class="jxr_linenumber" name="L28" href="#L28">28</a>  <strong class="jxr_keyword">import</strong> java.util.Set;
<a class="jxr_linenumber" name="L29" href="#L29">29</a>  <strong class="jxr_keyword">import</strong> java.util.concurrent.TimeUnit;
<a class="jxr_linenumber" name="L30" href="#L30">30</a>  
<a class="jxr_linenumber" name="L31" href="#L31">31</a>  <strong class="jxr_keyword">import</strong> javax.annotation.Nullable;
<a class="jxr_linenumber" name="L32" href="#L32">32</a>  
<a class="jxr_linenumber" name="L33" href="#L33">33</a>  <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L34" href="#L34">34</a>  <em class="jxr_javadoccomment"> * Helper class for creating {@link CacheBuilder} instances with all combinations of several sets of</em>
<a class="jxr_linenumber" name="L35" href="#L35">35</a>  <em class="jxr_javadoccomment"> * parameters.</em>
<a class="jxr_linenumber" name="L36" href="#L36">36</a>  <em class="jxr_javadoccomment"> *</em>
<a class="jxr_linenumber" name="L37" href="#L37">37</a>  <em class="jxr_javadoccomment"> * @author mike nonemacher</em>
<a class="jxr_linenumber" name="L38" href="#L38">38</a>  <em class="jxr_javadoccomment"> */</em>
<a class="jxr_linenumber" name="L39" href="#L39">39</a>  <strong class="jxr_keyword">class</strong> <a href="../../../../com/google/common/cache/CacheBuilderFactory.html">CacheBuilderFactory</a> {
<a class="jxr_linenumber" name="L40" href="#L40">40</a>    <em class="jxr_comment">// Default values contain only 'null', which means don't call the CacheBuilder method (just give</em>
<a class="jxr_linenumber" name="L41" href="#L41">41</a>    <em class="jxr_comment">// the CacheBuilder default).</em>
<a class="jxr_linenumber" name="L42" href="#L42">42</a>    <strong class="jxr_keyword">private</strong> Set&lt;Integer&gt; concurrencyLevels = Sets.newHashSet((Integer) <strong class="jxr_keyword">null</strong>);
<a class="jxr_linenumber" name="L43" href="#L43">43</a>    <strong class="jxr_keyword">private</strong> Set&lt;Integer&gt; initialCapacities = Sets.newHashSet((Integer) <strong class="jxr_keyword">null</strong>);
<a class="jxr_linenumber" name="L44" href="#L44">44</a>    <strong class="jxr_keyword">private</strong> Set&lt;Integer&gt; maximumSizes = Sets.newHashSet((Integer) <strong class="jxr_keyword">null</strong>);
<a class="jxr_linenumber" name="L45" href="#L45">45</a>    <strong class="jxr_keyword">private</strong> Set&lt;DurationSpec&gt; expireAfterWrites = Sets.newHashSet((DurationSpec) <strong class="jxr_keyword">null</strong>);
<a class="jxr_linenumber" name="L46" href="#L46">46</a>    <strong class="jxr_keyword">private</strong> Set&lt;DurationSpec&gt; expireAfterAccesses = Sets.newHashSet((DurationSpec) <strong class="jxr_keyword">null</strong>);
<a class="jxr_linenumber" name="L47" href="#L47">47</a>    <strong class="jxr_keyword">private</strong> Set&lt;DurationSpec&gt; refreshes = Sets.newHashSet((DurationSpec) <strong class="jxr_keyword">null</strong>);
<a class="jxr_linenumber" name="L48" href="#L48">48</a>    <strong class="jxr_keyword">private</strong> Set&lt;Strength&gt; keyStrengths = Sets.newHashSet((Strength) <strong class="jxr_keyword">null</strong>);
<a class="jxr_linenumber" name="L49" href="#L49">49</a>    <strong class="jxr_keyword">private</strong> Set&lt;Strength&gt; valueStrengths = Sets.newHashSet((Strength) <strong class="jxr_keyword">null</strong>);
<a class="jxr_linenumber" name="L50" href="#L50">50</a>  
<a class="jxr_linenumber" name="L51" href="#L51">51</a>    <a href="../../../../com/google/common/cache/CacheBuilderFactory.html">CacheBuilderFactory</a> withConcurrencyLevels(Set&lt;Integer&gt; concurrencyLevels) {
<a class="jxr_linenumber" name="L52" href="#L52">52</a>      <strong class="jxr_keyword">this</strong>.concurrencyLevels = Sets.newLinkedHashSet(concurrencyLevels);
<a class="jxr_linenumber" name="L53" href="#L53">53</a>      <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">this</strong>;
<a class="jxr_linenumber" name="L54" href="#L54">54</a>    }
<a class="jxr_linenumber" name="L55" href="#L55">55</a>  
<a class="jxr_linenumber" name="L56" href="#L56">56</a>    <a href="../../../../com/google/common/cache/CacheBuilderFactory.html">CacheBuilderFactory</a> withInitialCapacities(Set&lt;Integer&gt; initialCapacities) {
<a class="jxr_linenumber" name="L57" href="#L57">57</a>      <strong class="jxr_keyword">this</strong>.initialCapacities = Sets.newLinkedHashSet(initialCapacities);
<a class="jxr_linenumber" name="L58" href="#L58">58</a>      <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">this</strong>;
<a class="jxr_linenumber" name="L59" href="#L59">59</a>    }
<a class="jxr_linenumber" name="L60" href="#L60">60</a>  
<a class="jxr_linenumber" name="L61" href="#L61">61</a>    <a href="../../../../com/google/common/cache/CacheBuilderFactory.html">CacheBuilderFactory</a> withMaximumSizes(Set&lt;Integer&gt; maximumSizes) {
<a class="jxr_linenumber" name="L62" href="#L62">62</a>      <strong class="jxr_keyword">this</strong>.maximumSizes = Sets.newLinkedHashSet(maximumSizes);
<a class="jxr_linenumber" name="L63" href="#L63">63</a>      <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">this</strong>;
<a class="jxr_linenumber" name="L64" href="#L64">64</a>    }
<a class="jxr_linenumber" name="L65" href="#L65">65</a>  
<a class="jxr_linenumber" name="L66" href="#L66">66</a>    <a href="../../../../com/google/common/cache/CacheBuilderFactory.html">CacheBuilderFactory</a> withExpireAfterWrites(Set&lt;DurationSpec&gt; durations) {
<a class="jxr_linenumber" name="L67" href="#L67">67</a>      <strong class="jxr_keyword">this</strong>.expireAfterWrites = Sets.newLinkedHashSet(durations);
<a class="jxr_linenumber" name="L68" href="#L68">68</a>      <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">this</strong>;
<a class="jxr_linenumber" name="L69" href="#L69">69</a>    }
<a class="jxr_linenumber" name="L70" href="#L70">70</a>  
<a class="jxr_linenumber" name="L71" href="#L71">71</a>    <a href="../../../../com/google/common/cache/CacheBuilderFactory.html">CacheBuilderFactory</a> withExpireAfterAccesses(Set&lt;DurationSpec&gt; durations) {
<a class="jxr_linenumber" name="L72" href="#L72">72</a>      <strong class="jxr_keyword">this</strong>.expireAfterAccesses = Sets.newLinkedHashSet(durations);
<a class="jxr_linenumber" name="L73" href="#L73">73</a>      <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">this</strong>;
<a class="jxr_linenumber" name="L74" href="#L74">74</a>    }
<a class="jxr_linenumber" name="L75" href="#L75">75</a>  
<a class="jxr_linenumber" name="L76" href="#L76">76</a>    <a href="../../../../com/google/common/cache/CacheBuilderFactory.html">CacheBuilderFactory</a> withRefreshes(Set&lt;DurationSpec&gt; durations) {
<a class="jxr_linenumber" name="L77" href="#L77">77</a>      <strong class="jxr_keyword">this</strong>.refreshes = Sets.newLinkedHashSet(durations);
<a class="jxr_linenumber" name="L78" href="#L78">78</a>      <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">this</strong>;
<a class="jxr_linenumber" name="L79" href="#L79">79</a>    }
<a class="jxr_linenumber" name="L80" href="#L80">80</a>  
<a class="jxr_linenumber" name="L81" href="#L81">81</a>    <a href="../../../../com/google/common/cache/CacheBuilderFactory.html">CacheBuilderFactory</a> withKeyStrengths(Set&lt;Strength&gt; keyStrengths) {
<a class="jxr_linenumber" name="L82" href="#L82">82</a>      <strong class="jxr_keyword">this</strong>.keyStrengths = Sets.newLinkedHashSet(keyStrengths);
<a class="jxr_linenumber" name="L83" href="#L83">83</a>      Preconditions.checkArgument(!<strong class="jxr_keyword">this</strong>.keyStrengths.contains(Strength.SOFT));
<a class="jxr_linenumber" name="L84" href="#L84">84</a>      <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">this</strong>;
<a class="jxr_linenumber" name="L85" href="#L85">85</a>    }
<a class="jxr_linenumber" name="L86" href="#L86">86</a>  
<a class="jxr_linenumber" name="L87" href="#L87">87</a>    <a href="../../../../com/google/common/cache/CacheBuilderFactory.html">CacheBuilderFactory</a> withValueStrengths(Set&lt;Strength&gt; valueStrengths) {
<a class="jxr_linenumber" name="L88" href="#L88">88</a>      <strong class="jxr_keyword">this</strong>.valueStrengths = Sets.newLinkedHashSet(valueStrengths);
<a class="jxr_linenumber" name="L89" href="#L89">89</a>      <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">this</strong>;
<a class="jxr_linenumber" name="L90" href="#L90">90</a>    }
<a class="jxr_linenumber" name="L91" href="#L91">91</a>  
<a class="jxr_linenumber" name="L92" href="#L92">92</a>    Iterable&lt;CacheBuilder&lt;Object, Object&gt;&gt; buildAllPermutations() {
<a class="jxr_linenumber" name="L93" href="#L93">93</a>      @SuppressWarnings(<span class="jxr_string">"unchecked"</span>)
<a class="jxr_linenumber" name="L94" href="#L94">94</a>      Iterable&lt;List&lt;Object&gt;&gt; combinations = buildCartesianProduct(concurrencyLevels,
<a class="jxr_linenumber" name="L95" href="#L95">95</a>          initialCapacities, maximumSizes, expireAfterWrites, expireAfterAccesses, refreshes,
<a class="jxr_linenumber" name="L96" href="#L96">96</a>          keyStrengths, valueStrengths);
<a class="jxr_linenumber" name="L97" href="#L97">97</a>      <strong class="jxr_keyword">return</strong> Iterables.transform(combinations,
<a class="jxr_linenumber" name="L98" href="#L98">98</a>          <strong class="jxr_keyword">new</strong> Function&lt;List&lt;Object&gt;, CacheBuilder&lt;Object, Object&gt;&gt;() {
<a class="jxr_linenumber" name="L99" href="#L99">99</a>            @Override <strong class="jxr_keyword">public</strong> CacheBuilder&lt;Object, Object&gt; apply(List&lt;Object&gt; combination) {
<a class="jxr_linenumber" name="L100" href="#L100">100</a>             <strong class="jxr_keyword">return</strong> createCacheBuilder(
<a class="jxr_linenumber" name="L101" href="#L101">101</a>                 (Integer) combination.get(0),
<a class="jxr_linenumber" name="L102" href="#L102">102</a>                 (Integer) combination.get(1),
<a class="jxr_linenumber" name="L103" href="#L103">103</a>                 (Integer) combination.get(2),
<a class="jxr_linenumber" name="L104" href="#L104">104</a>                 (<a href="../../../../com/google/common/cache/CacheBuilderFactory.html">DurationSpec</a>) combination.get(3),
<a class="jxr_linenumber" name="L105" href="#L105">105</a>                 (<a href="../../../../com/google/common/cache/CacheBuilderFactory.html">DurationSpec</a>) combination.get(4),
<a class="jxr_linenumber" name="L106" href="#L106">106</a>                 (<a href="../../../../com/google/common/cache/CacheBuilderFactory.html">DurationSpec</a>) combination.get(5),
<a class="jxr_linenumber" name="L107" href="#L107">107</a>                 (<a href="../../../../com/google/common/collect/MapMakerInternalMap.html">Strength</a>) combination.get(6),
<a class="jxr_linenumber" name="L108" href="#L108">108</a>                 (<a href="../../../../com/google/common/collect/MapMakerInternalMap.html">Strength</a>) combination.get(7));
<a class="jxr_linenumber" name="L109" href="#L109">109</a>           }
<a class="jxr_linenumber" name="L110" href="#L110">110</a>         });
<a class="jxr_linenumber" name="L111" href="#L111">111</a>   }
<a class="jxr_linenumber" name="L112" href="#L112">112</a> 
<a class="jxr_linenumber" name="L113" href="#L113">113</a>   <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">static</strong> <strong class="jxr_keyword">final</strong> Function&lt;Object, Optional&lt;?&gt;&gt; NULLABLE_TO_OPTIONAL =
<a class="jxr_linenumber" name="L114" href="#L114">114</a>       <strong class="jxr_keyword">new</strong> Function&lt;Object, Optional&lt;?&gt;&gt;() {
<a class="jxr_linenumber" name="L115" href="#L115">115</a>         @Override <strong class="jxr_keyword">public</strong> Optional&lt;?&gt; apply(@Nullable Object obj) {
<a class="jxr_linenumber" name="L116" href="#L116">116</a>           <strong class="jxr_keyword">return</strong> Optional.fromNullable(obj);
<a class="jxr_linenumber" name="L117" href="#L117">117</a>         }
<a class="jxr_linenumber" name="L118" href="#L118">118</a>       };
<a class="jxr_linenumber" name="L119" href="#L119">119</a> 
<a class="jxr_linenumber" name="L120" href="#L120">120</a>   <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">static</strong> <strong class="jxr_keyword">final</strong> Function&lt;Optional&lt;?&gt;, Object&gt; OPTIONAL_TO_NULLABLE =
<a class="jxr_linenumber" name="L121" href="#L121">121</a>       <strong class="jxr_keyword">new</strong> Function&lt;Optional&lt;?&gt;, Object&gt;() {
<a class="jxr_linenumber" name="L122" href="#L122">122</a>         @Override <strong class="jxr_keyword">public</strong> Object apply(Optional&lt;?&gt; optional) {
<a class="jxr_linenumber" name="L123" href="#L123">123</a>           <strong class="jxr_keyword">return</strong> optional.orNull();
<a class="jxr_linenumber" name="L124" href="#L124">124</a>         }
<a class="jxr_linenumber" name="L125" href="#L125">125</a>       };
<a class="jxr_linenumber" name="L126" href="#L126">126</a> 
<a class="jxr_linenumber" name="L127" href="#L127">127</a>   <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L128" href="#L128">128</a> <em class="jxr_javadoccomment">   * Sets.cartesianProduct doesn't allow sets that contain null, but we want null to mean</em>
<a class="jxr_linenumber" name="L129" href="#L129">129</a> <em class="jxr_javadoccomment">   * "don't call the associated CacheBuilder method" - that is, get the default CacheBuilder</em>
<a class="jxr_linenumber" name="L130" href="#L130">130</a> <em class="jxr_javadoccomment">   * behavior. This method wraps the elements in the input sets (which may contain null) as</em>
<a class="jxr_linenumber" name="L131" href="#L131">131</a> <em class="jxr_javadoccomment">   * Optionals, calls Sets.cartesianProduct with those, then transforms the result to unwrap</em>
<a class="jxr_linenumber" name="L132" href="#L132">132</a> <em class="jxr_javadoccomment">   * the Optionals. </em>
<a class="jxr_linenumber" name="L133" href="#L133">133</a> <em class="jxr_javadoccomment">   */</em>
<a class="jxr_linenumber" name="L134" href="#L134">134</a>   <strong class="jxr_keyword">private</strong> Iterable&lt;List&lt;Object&gt;&gt; buildCartesianProduct(Set&lt;?&gt;... sets) {
<a class="jxr_linenumber" name="L135" href="#L135">135</a>     List&lt;Set&lt;Optional&lt;?&gt;&gt;&gt; optionalSets = Lists.newArrayListWithExpectedSize(sets.length);
<a class="jxr_linenumber" name="L136" href="#L136">136</a>     <strong class="jxr_keyword">for</strong> (Set&lt;?&gt; set : sets) {
<a class="jxr_linenumber" name="L137" href="#L137">137</a>       Set&lt;Optional&lt;?&gt;&gt; optionalSet =
<a class="jxr_linenumber" name="L138" href="#L138">138</a>           Sets.newLinkedHashSet(Iterables.transform(set, NULLABLE_TO_OPTIONAL));
<a class="jxr_linenumber" name="L139" href="#L139">139</a>       optionalSets.add(optionalSet);
<a class="jxr_linenumber" name="L140" href="#L140">140</a>     }
<a class="jxr_linenumber" name="L141" href="#L141">141</a>     Set&lt;List&lt;Optional&lt;?&gt;&gt;&gt; cartesianProduct = Sets.cartesianProduct(optionalSets);
<a class="jxr_linenumber" name="L142" href="#L142">142</a>     <strong class="jxr_keyword">return</strong> Iterables.transform(cartesianProduct,
<a class="jxr_linenumber" name="L143" href="#L143">143</a>         <strong class="jxr_keyword">new</strong> Function&lt;List&lt;Optional&lt;?&gt;&gt;, List&lt;Object&gt;&gt;() {
<a class="jxr_linenumber" name="L144" href="#L144">144</a>           @Override <strong class="jxr_keyword">public</strong> List&lt;Object&gt; apply(List&lt;Optional&lt;?&gt;&gt; objs) {
<a class="jxr_linenumber" name="L145" href="#L145">145</a>             <strong class="jxr_keyword">return</strong> Lists.transform(objs, OPTIONAL_TO_NULLABLE);
<a class="jxr_linenumber" name="L146" href="#L146">146</a>           }
<a class="jxr_linenumber" name="L147" href="#L147">147</a>         });
<a class="jxr_linenumber" name="L148" href="#L148">148</a>   }
<a class="jxr_linenumber" name="L149" href="#L149">149</a> 
<a class="jxr_linenumber" name="L150" href="#L150">150</a>   <strong class="jxr_keyword">private</strong> CacheBuilder&lt;Object, Object&gt; createCacheBuilder(
<a class="jxr_linenumber" name="L151" href="#L151">151</a>       Integer concurrencyLevel, Integer initialCapacity, Integer maximumSize,
<a class="jxr_linenumber" name="L152" href="#L152">152</a>       <a href="../../../../com/google/common/cache/CacheBuilderFactory.html">DurationSpec</a> expireAfterWrite, <a href="../../../../com/google/common/cache/CacheBuilderFactory.html">DurationSpec</a> expireAfterAccess, <a href="../../../../com/google/common/cache/CacheBuilderFactory.html">DurationSpec</a> refresh,
<a class="jxr_linenumber" name="L153" href="#L153">153</a>       <a href="../../../../com/google/common/collect/MapMakerInternalMap.html">Strength</a> keyStrength, <a href="../../../../com/google/common/collect/MapMakerInternalMap.html">Strength</a> valueStrength) {
<a class="jxr_linenumber" name="L154" href="#L154">154</a> 
<a class="jxr_linenumber" name="L155" href="#L155">155</a>     CacheBuilder&lt;Object, Object&gt; builder = CacheBuilder.newBuilder();
<a class="jxr_linenumber" name="L156" href="#L156">156</a>     <strong class="jxr_keyword">if</strong> (concurrencyLevel != <strong class="jxr_keyword">null</strong>) {
<a class="jxr_linenumber" name="L157" href="#L157">157</a>       builder.concurrencyLevel(concurrencyLevel);
<a class="jxr_linenumber" name="L158" href="#L158">158</a>     }
<a class="jxr_linenumber" name="L159" href="#L159">159</a>     <strong class="jxr_keyword">if</strong> (initialCapacity != <strong class="jxr_keyword">null</strong>) {
<a class="jxr_linenumber" name="L160" href="#L160">160</a>       builder.initialCapacity(initialCapacity);
<a class="jxr_linenumber" name="L161" href="#L161">161</a>     }
<a class="jxr_linenumber" name="L162" href="#L162">162</a>     <strong class="jxr_keyword">if</strong> (maximumSize != <strong class="jxr_keyword">null</strong>) {
<a class="jxr_linenumber" name="L163" href="#L163">163</a>       builder.maximumSize(maximumSize);
<a class="jxr_linenumber" name="L164" href="#L164">164</a>     }
<a class="jxr_linenumber" name="L165" href="#L165">165</a>     <strong class="jxr_keyword">if</strong> (expireAfterWrite != <strong class="jxr_keyword">null</strong>) {
<a class="jxr_linenumber" name="L166" href="#L166">166</a>       builder.expireAfterWrite(expireAfterWrite.duration, expireAfterWrite.unit);
<a class="jxr_linenumber" name="L167" href="#L167">167</a>     }
<a class="jxr_linenumber" name="L168" href="#L168">168</a>     <strong class="jxr_keyword">if</strong> (expireAfterAccess != <strong class="jxr_keyword">null</strong>) {
<a class="jxr_linenumber" name="L169" href="#L169">169</a>       builder.expireAfterAccess(expireAfterAccess.duration, expireAfterAccess.unit);
<a class="jxr_linenumber" name="L170" href="#L170">170</a>     }
<a class="jxr_linenumber" name="L171" href="#L171">171</a>     <strong class="jxr_keyword">if</strong> (refresh != <strong class="jxr_keyword">null</strong>) {
<a class="jxr_linenumber" name="L172" href="#L172">172</a>       builder.refreshAfterWrite(refresh.duration, refresh.unit);
<a class="jxr_linenumber" name="L173" href="#L173">173</a>     }
<a class="jxr_linenumber" name="L174" href="#L174">174</a>     <strong class="jxr_keyword">if</strong> (keyStrength != <strong class="jxr_keyword">null</strong>) {
<a class="jxr_linenumber" name="L175" href="#L175">175</a>       builder.setKeyStrength(keyStrength);
<a class="jxr_linenumber" name="L176" href="#L176">176</a>     }
<a class="jxr_linenumber" name="L177" href="#L177">177</a>     <strong class="jxr_keyword">if</strong> (valueStrength != <strong class="jxr_keyword">null</strong>) {
<a class="jxr_linenumber" name="L178" href="#L178">178</a>       builder.setValueStrength(valueStrength);
<a class="jxr_linenumber" name="L179" href="#L179">179</a>     }
<a class="jxr_linenumber" name="L180" href="#L180">180</a>     <strong class="jxr_keyword">return</strong> builder;
<a class="jxr_linenumber" name="L181" href="#L181">181</a>   }
<a class="jxr_linenumber" name="L182" href="#L182">182</a> 
<a class="jxr_linenumber" name="L183" href="#L183">183</a>   <strong class="jxr_keyword">static</strong> <strong class="jxr_keyword">class</strong> <a href="../../../../com/google/common/cache/CacheBuilderFactory.html">DurationSpec</a> {
<a class="jxr_linenumber" name="L184" href="#L184">184</a>     <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">long</strong> duration;
<a class="jxr_linenumber" name="L185" href="#L185">185</a>     <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">final</strong> <a href="../../../../java/util/concurrent/TimeUnit.html">TimeUnit</a> unit;
<a class="jxr_linenumber" name="L186" href="#L186">186</a> 
<a class="jxr_linenumber" name="L187" href="#L187">187</a>     <strong class="jxr_keyword">private</strong> <a href="../../../../com/google/common/cache/CacheBuilderFactory.html">DurationSpec</a>(<strong class="jxr_keyword">long</strong> duration, <a href="../../../../java/util/concurrent/TimeUnit.html">TimeUnit</a> unit) {
<a class="jxr_linenumber" name="L188" href="#L188">188</a>       <strong class="jxr_keyword">this</strong>.duration = duration;
<a class="jxr_linenumber" name="L189" href="#L189">189</a>       <strong class="jxr_keyword">this</strong>.unit = unit;
<a class="jxr_linenumber" name="L190" href="#L190">190</a>     }
<a class="jxr_linenumber" name="L191" href="#L191">191</a> 
<a class="jxr_linenumber" name="L192" href="#L192">192</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">static</strong> <a href="../../../../com/google/common/cache/CacheBuilderFactory.html">DurationSpec</a> of(<strong class="jxr_keyword">long</strong> duration, <a href="../../../../java/util/concurrent/TimeUnit.html">TimeUnit</a> unit) {
<a class="jxr_linenumber" name="L193" href="#L193">193</a>       <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">new</strong> <a href="../../../../com/google/common/cache/CacheBuilderFactory.html">DurationSpec</a>(duration, unit);
<a class="jxr_linenumber" name="L194" href="#L194">194</a>     }
<a class="jxr_linenumber" name="L195" href="#L195">195</a> 
<a class="jxr_linenumber" name="L196" href="#L196">196</a>     @Override
<a class="jxr_linenumber" name="L197" href="#L197">197</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">int</strong> hashCode() {
<a class="jxr_linenumber" name="L198" href="#L198">198</a>       <strong class="jxr_keyword">return</strong> Objects.hashCode(duration, unit);
<a class="jxr_linenumber" name="L199" href="#L199">199</a>     }
<a class="jxr_linenumber" name="L200" href="#L200">200</a> 
<a class="jxr_linenumber" name="L201" href="#L201">201</a>     @Override
<a class="jxr_linenumber" name="L202" href="#L202">202</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">boolean</strong> equals(Object o) {
<a class="jxr_linenumber" name="L203" href="#L203">203</a>       <strong class="jxr_keyword">if</strong> (o instanceof DurationSpec) {
<a class="jxr_linenumber" name="L204" href="#L204">204</a>         <a href="../../../../com/google/common/cache/CacheBuilderFactory.html">DurationSpec</a> that = (DurationSpec) o;
<a class="jxr_linenumber" name="L205" href="#L205">205</a>         <strong class="jxr_keyword">return</strong> unit.toNanos(duration) == that.unit.toNanos(that.duration);
<a class="jxr_linenumber" name="L206" href="#L206">206</a>       }
<a class="jxr_linenumber" name="L207" href="#L207">207</a>       <strong class="jxr_keyword">return</strong> false;
<a class="jxr_linenumber" name="L208" href="#L208">208</a>     }
<a class="jxr_linenumber" name="L209" href="#L209">209</a> 
<a class="jxr_linenumber" name="L210" href="#L210">210</a>     @Override
<a class="jxr_linenumber" name="L211" href="#L211">211</a>     <strong class="jxr_keyword">public</strong> String toString() {
<a class="jxr_linenumber" name="L212" href="#L212">212</a>       <strong class="jxr_keyword">return</strong> MoreObjects.toStringHelper(<strong class="jxr_keyword">this</strong>)
<a class="jxr_linenumber" name="L213" href="#L213">213</a>           .add(<span class="jxr_string">"duration"</span>, duration)
<a class="jxr_linenumber" name="L214" href="#L214">214</a>           .add(<span class="jxr_string">"unit"</span>, unit)
<a class="jxr_linenumber" name="L215" href="#L215">215</a>           .toString();
<a class="jxr_linenumber" name="L216" href="#L216">216</a>     }
<a class="jxr_linenumber" name="L217" href="#L217">217</a>   }
<a class="jxr_linenumber" name="L218" href="#L218">218</a> }
</pre>
<hr/>
<div id="footer">Copyright &#169; 2015. All rights reserved.</div>
</body>
</html>
