<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>BenchmarkHelpers xref</title>
<link type="text/css" rel="stylesheet" href="../../../../stylesheet.css" />
</head>
<body>
<div id="overview"><a href="../../../../../../../../apidocs/com/google/common/base/BenchmarkHelpers.html">View Javadoc</a></div><pre>
<a class="jxr_linenumber" name="L1" href="#L1">1</a>   <em class="jxr_comment">/*</em>
<a class="jxr_linenumber" name="L2" href="#L2">2</a>   <em class="jxr_comment"> * Copyright (C) 2012 The Guava Authors</em>
<a class="jxr_linenumber" name="L3" href="#L3">3</a>   <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L4" href="#L4">4</a>   <em class="jxr_comment"> * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except</em>
<a class="jxr_linenumber" name="L5" href="#L5">5</a>   <em class="jxr_comment"> * in compliance with the License. You may obtain a copy of the License at</em>
<a class="jxr_linenumber" name="L6" href="#L6">6</a>   <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L7" href="#L7">7</a>   <em class="jxr_comment"> * <a href="http://www.apache.org/licenses/LICENSE-2." target="alexandria_uri">http://www.apache.org/licenses/LICENSE-2.</a>0</em>
<a class="jxr_linenumber" name="L8" href="#L8">8</a>   <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L9" href="#L9">9</a>   <em class="jxr_comment"> * Unless required by applicable law or agreed to in writing, software distributed under the License</em>
<a class="jxr_linenumber" name="L10" href="#L10">10</a>  <em class="jxr_comment"> * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express</em>
<a class="jxr_linenumber" name="L11" href="#L11">11</a>  <em class="jxr_comment"> * or implied. See the License for the specific language governing permissions and limitations under</em>
<a class="jxr_linenumber" name="L12" href="#L12">12</a>  <em class="jxr_comment"> * the License.</em>
<a class="jxr_linenumber" name="L13" href="#L13">13</a>  <em class="jxr_comment"> */</em>
<a class="jxr_linenumber" name="L14" href="#L14">14</a>  
<a class="jxr_linenumber" name="L15" href="#L15">15</a>  <strong class="jxr_keyword">package</strong> com.google.common.base;
<a class="jxr_linenumber" name="L16" href="#L16">16</a>  
<a class="jxr_linenumber" name="L17" href="#L17">17</a>  <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L18" href="#L18">18</a>  <em class="jxr_javadoccomment"> * Common benchmarking utilities.</em>
<a class="jxr_linenumber" name="L19" href="#L19">19</a>  <em class="jxr_javadoccomment"> *</em>
<a class="jxr_linenumber" name="L20" href="#L20">20</a>  <em class="jxr_javadoccomment"> * @author Christopher Swenson</em>
<a class="jxr_linenumber" name="L21" href="#L21">21</a>  <em class="jxr_javadoccomment"> * @author Louis Wasserman</em>
<a class="jxr_linenumber" name="L22" href="#L22">22</a>  <em class="jxr_javadoccomment"> */</em>
<a class="jxr_linenumber" name="L23" href="#L23">23</a>  <strong class="jxr_keyword">class</strong> <a href="../../../../com/google/common/base/BenchmarkHelpers.html">BenchmarkHelpers</a> {
<a class="jxr_linenumber" name="L24" href="#L24">24</a>    <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">static</strong> <strong class="jxr_keyword">final</strong> String WHITESPACE_CHARACTERS =
<a class="jxr_linenumber" name="L25" href="#L25">25</a>        <span class="jxr_string">"\u00a0\u180e\u202f\t\n\013\f\r \u0085"</span>
<a class="jxr_linenumber" name="L26" href="#L26">26</a>            + <span class="jxr_string">"\u1680\u2028\u2029\u205f\u3000\u2000\u2001\u2002\u2003\u2004\u2005"</span>
<a class="jxr_linenumber" name="L27" href="#L27">27</a>            + <span class="jxr_string">"\u2006\u2007\u2008\u2009\u200a"</span>;
<a class="jxr_linenumber" name="L28" href="#L28">28</a>    <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">static</strong> <strong class="jxr_keyword">final</strong> String ASCII_CHARACTERS;
<a class="jxr_linenumber" name="L29" href="#L29">29</a>    <strong class="jxr_keyword">static</strong> {
<a class="jxr_linenumber" name="L30" href="#L30">30</a>      <strong class="jxr_keyword">int</strong> spaceInAscii = 32;
<a class="jxr_linenumber" name="L31" href="#L31">31</a>      <strong class="jxr_keyword">int</strong> sevenBitAsciiMax = 128;
<a class="jxr_linenumber" name="L32" href="#L32">32</a>      StringBuilder sb = <strong class="jxr_keyword">new</strong> StringBuilder(sevenBitAsciiMax - spaceInAscii);
<a class="jxr_linenumber" name="L33" href="#L33">33</a>      <strong class="jxr_keyword">for</strong> (<strong class="jxr_keyword">int</strong> ch = spaceInAscii; ch &lt; sevenBitAsciiMax; ch++) {
<a class="jxr_linenumber" name="L34" href="#L34">34</a>        sb.append((<strong class="jxr_keyword">char</strong>) ch);
<a class="jxr_linenumber" name="L35" href="#L35">35</a>      }
<a class="jxr_linenumber" name="L36" href="#L36">36</a>      ASCII_CHARACTERS = sb.toString();
<a class="jxr_linenumber" name="L37" href="#L37">37</a>    }
<a class="jxr_linenumber" name="L38" href="#L38">38</a>  
<a class="jxr_linenumber" name="L39" href="#L39">39</a>    <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">static</strong> <strong class="jxr_keyword">final</strong> String ALL_DIGITS;
<a class="jxr_linenumber" name="L40" href="#L40">40</a>    <strong class="jxr_keyword">static</strong> {
<a class="jxr_linenumber" name="L41" href="#L41">41</a>      StringBuilder sb = <strong class="jxr_keyword">new</strong> StringBuilder();
<a class="jxr_linenumber" name="L42" href="#L42">42</a>      String zeros =
<a class="jxr_linenumber" name="L43" href="#L43">43</a>          <span class="jxr_string">"0\u0660\u06f0\u07c0\u0966\u09e6\u0a66\u0ae6\u0b66\u0be6\u0c66"</span>
<a class="jxr_linenumber" name="L44" href="#L44">44</a>              + <span class="jxr_string">"\u0ce6\u0d66\u0e50\u0ed0\u0f20\u1040\u1090\u17e0\u1810\u1946"</span>
<a class="jxr_linenumber" name="L45" href="#L45">45</a>              + <span class="jxr_string">"\u19d0\u1b50\u1bb0\u1c40\u1c50\ua620\ua8d0\ua900\uaa50\uff10"</span>;
<a class="jxr_linenumber" name="L46" href="#L46">46</a>      <strong class="jxr_keyword">for</strong> (<strong class="jxr_keyword">char</strong> base : zeros.toCharArray()) {
<a class="jxr_linenumber" name="L47" href="#L47">47</a>        <strong class="jxr_keyword">for</strong> (<strong class="jxr_keyword">int</strong> offset = 0; offset &lt; 10; offset++) {
<a class="jxr_linenumber" name="L48" href="#L48">48</a>          sb.append((<strong class="jxr_keyword">char</strong>) (base + offset));
<a class="jxr_linenumber" name="L49" href="#L49">49</a>        }
<a class="jxr_linenumber" name="L50" href="#L50">50</a>      }
<a class="jxr_linenumber" name="L51" href="#L51">51</a>      ALL_DIGITS = sb.toString();
<a class="jxr_linenumber" name="L52" href="#L52">52</a>    }
<a class="jxr_linenumber" name="L53" href="#L53">53</a>    
<a class="jxr_linenumber" name="L54" href="#L54">54</a>    <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L55" href="#L55">55</a>  <em class="jxr_javadoccomment">   * Sample CharMatcher instances for benchmarking. </em>
<a class="jxr_linenumber" name="L56" href="#L56">56</a>  <em class="jxr_javadoccomment">   */</em>
<a class="jxr_linenumber" name="L57" href="#L57">57</a>    <strong class="jxr_keyword">public</strong> enum <a href="../../../../com/google/common/base/BenchmarkHelpers.html">SampleMatcherConfig</a> {
<a class="jxr_linenumber" name="L58" href="#L58">58</a>      WHITESPACE(CharMatcher.WHITESPACE, WHITESPACE_CHARACTERS),
<a class="jxr_linenumber" name="L59" href="#L59">59</a>      HASH(CharMatcher.is('#'), <span class="jxr_string">"#"</span>),
<a class="jxr_linenumber" name="L60" href="#L60">60</a>      ASCII(CharMatcher.ASCII, ASCII_CHARACTERS),
<a class="jxr_linenumber" name="L61" href="#L61">61</a>      WESTERN_DIGIT(<span class="jxr_string">"0123456789"</span>),
<a class="jxr_linenumber" name="L62" href="#L62">62</a>      ALL_DIGIT(CharMatcher.DIGIT, ALL_DIGITS),
<a class="jxr_linenumber" name="L63" href="#L63">63</a>      OPS_5(<span class="jxr_string">"+-*/%"</span>),
<a class="jxr_linenumber" name="L64" href="#L64">64</a>      HEX_16(CharMatcher.inRange('0', '9').or(CharMatcher.inRange('A', 'F')), <span class="jxr_string">"0123456789ABCDEF"</span>),
<a class="jxr_linenumber" name="L65" href="#L65">65</a>      HEX_22(CharMatcher.inRange('0', '9')
<a class="jxr_linenumber" name="L66" href="#L66">66</a>          .or(CharMatcher.inRange('A', 'F')).or(CharMatcher.inRange('a', 'f')),
<a class="jxr_linenumber" name="L67" href="#L67">67</a>          <span class="jxr_string">"0123456789ABCDEFabcdef"</span>),
<a class="jxr_linenumber" name="L68" href="#L68">68</a>      GERMAN_59(CharMatcher.inRange('a', 'z')
<a class="jxr_linenumber" name="L69" href="#L69">69</a>          .or(CharMatcher.inRange('A', 'Z')).or(CharMatcher.anyOf(<span class="jxr_string">"äöüßÄÖÜ"</span>)),
<a class="jxr_linenumber" name="L70" href="#L70">70</a>          <span class="jxr_string">"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZäöüßÄÖÜ"</span>);
<a class="jxr_linenumber" name="L71" href="#L71">71</a>  
<a class="jxr_linenumber" name="L72" href="#L72">72</a>      <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">final</strong> <a href="../../../../com/google/common/base/CharMatcher.html">CharMatcher</a> matcher;
<a class="jxr_linenumber" name="L73" href="#L73">73</a>      <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">final</strong> String matchingChars;
<a class="jxr_linenumber" name="L74" href="#L74">74</a>  
<a class="jxr_linenumber" name="L75" href="#L75">75</a>      <a href="../../../../com/google/common/base/BenchmarkHelpers.html">SampleMatcherConfig</a>(String matchingChars) {
<a class="jxr_linenumber" name="L76" href="#L76">76</a>        <strong class="jxr_keyword">this</strong>(CharMatcher.anyOf(matchingChars), matchingChars);
<a class="jxr_linenumber" name="L77" href="#L77">77</a>      }
<a class="jxr_linenumber" name="L78" href="#L78">78</a>  
<a class="jxr_linenumber" name="L79" href="#L79">79</a>      <a href="../../../../com/google/common/base/BenchmarkHelpers.html">SampleMatcherConfig</a>(<a href="../../../../com/google/common/base/CharMatcher.html">CharMatcher</a> matcher, String matchingChars) {
<a class="jxr_linenumber" name="L80" href="#L80">80</a>        <strong class="jxr_keyword">this</strong>.matcher = matcher;
<a class="jxr_linenumber" name="L81" href="#L81">81</a>        <strong class="jxr_keyword">this</strong>.matchingChars = matchingChars;
<a class="jxr_linenumber" name="L82" href="#L82">82</a>      }
<a class="jxr_linenumber" name="L83" href="#L83">83</a>    }
<a class="jxr_linenumber" name="L84" href="#L84">84</a>  }
</pre>
<hr/>
<div id="footer">Copyright &#169; 2015. All rights reserved.</div>
</body>
</html>
