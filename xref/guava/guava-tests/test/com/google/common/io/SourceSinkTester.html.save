<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>SourceSinkTester xref</title>
<link type="text/css" rel="stylesheet" href="../../../../stylesheet.css" />
</head>
<body>
<div id="overview"><a href="../../../../../../../../apidocs/com/google/common/io/SourceSinkTester.html">View Javadoc</a></div><pre>
<a class="jxr_linenumber" name="L1" href="#L1">1</a>   <em class="jxr_comment">/*</em>
<a class="jxr_linenumber" name="L2" href="#L2">2</a>   <em class="jxr_comment"> * Copyright (C) 2012 The Guava Authors</em>
<a class="jxr_linenumber" name="L3" href="#L3">3</a>   <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L4" href="#L4">4</a>   <em class="jxr_comment"> * Licensed under the Apache License, Version 2.0 (the "License");</em>
<a class="jxr_linenumber" name="L5" href="#L5">5</a>   <em class="jxr_comment"> * you may not use this file except in compliance with the License.</em>
<a class="jxr_linenumber" name="L6" href="#L6">6</a>   <em class="jxr_comment"> * You may obtain a copy of the License at</em>
<a class="jxr_linenumber" name="L7" href="#L7">7</a>   <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L8" href="#L8">8</a>   <em class="jxr_comment"> * <a href="http://www.apache.org/licenses/LICENSE-2." target="alexandria_uri">http://www.apache.org/licenses/LICENSE-2.</a>0</em>
<a class="jxr_linenumber" name="L9" href="#L9">9</a>   <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L10" href="#L10">10</a>  <em class="jxr_comment"> * Unless required by applicable law or agreed to in writing, software</em>
<a class="jxr_linenumber" name="L11" href="#L11">11</a>  <em class="jxr_comment"> * distributed under the License is distributed on an "AS IS" BASIS,</em>
<a class="jxr_linenumber" name="L12" href="#L12">12</a>  <em class="jxr_comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</em>
<a class="jxr_linenumber" name="L13" href="#L13">13</a>  <em class="jxr_comment"> * See the License for the specific language governing permissions and</em>
<a class="jxr_linenumber" name="L14" href="#L14">14</a>  <em class="jxr_comment"> * limitations under the License.</em>
<a class="jxr_linenumber" name="L15" href="#L15">15</a>  <em class="jxr_comment"> */</em>
<a class="jxr_linenumber" name="L16" href="#L16">16</a>  
<a class="jxr_linenumber" name="L17" href="#L17">17</a>  <strong class="jxr_keyword">package</strong> com.google.common.io;
<a class="jxr_linenumber" name="L18" href="#L18">18</a>  
<a class="jxr_linenumber" name="L19" href="#L19">19</a>  <strong class="jxr_keyword">import</strong> <strong class="jxr_keyword">static</strong> com.google.common.base.Preconditions.checkNotNull;
<a class="jxr_linenumber" name="L20" href="#L20">20</a>  
<a class="jxr_linenumber" name="L21" href="#L21">21</a>  <strong class="jxr_keyword">import</strong> com.google.common.collect.ImmutableList;
<a class="jxr_linenumber" name="L22" href="#L22">22</a>  <strong class="jxr_keyword">import</strong> com.google.common.collect.ImmutableMap;
<a class="jxr_linenumber" name="L23" href="#L23">23</a>  <strong class="jxr_keyword">import</strong> com.google.common.collect.Lists;
<a class="jxr_linenumber" name="L24" href="#L24">24</a>  
<a class="jxr_linenumber" name="L25" href="#L25">25</a>  <strong class="jxr_keyword">import</strong> junit.framework.TestCase;
<a class="jxr_linenumber" name="L26" href="#L26">26</a>  
<a class="jxr_linenumber" name="L27" href="#L27">27</a>  <strong class="jxr_keyword">import</strong> java.io.IOException;
<a class="jxr_linenumber" name="L28" href="#L28">28</a>  <strong class="jxr_keyword">import</strong> java.io.Reader;
<a class="jxr_linenumber" name="L29" href="#L29">29</a>  <strong class="jxr_keyword">import</strong> java.io.StringReader;
<a class="jxr_linenumber" name="L30" href="#L30">30</a>  <strong class="jxr_keyword">import</strong> java.lang.reflect.Method;
<a class="jxr_linenumber" name="L31" href="#L31">31</a>  <strong class="jxr_keyword">import</strong> java.lang.reflect.Modifier;
<a class="jxr_linenumber" name="L32" href="#L32">32</a>  <strong class="jxr_keyword">import</strong> java.util.List;
<a class="jxr_linenumber" name="L33" href="#L33">33</a>  
<a class="jxr_linenumber" name="L34" href="#L34">34</a>  <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L35" href="#L35">35</a>  <em class="jxr_javadoccomment"> * @param &lt;S&gt; the source or sink type</em>
<a class="jxr_linenumber" name="L36" href="#L36">36</a>  <em class="jxr_javadoccomment"> * @param &lt;T&gt; the data type (byte[] or String)</em>
<a class="jxr_linenumber" name="L37" href="#L37">37</a>  <em class="jxr_javadoccomment"> * @param &lt;F&gt; the factory type</em>
<a class="jxr_linenumber" name="L38" href="#L38">38</a>  <em class="jxr_javadoccomment"> * @author Colin Decker</em>
<a class="jxr_linenumber" name="L39" href="#L39">39</a>  <em class="jxr_javadoccomment"> */</em>
<a class="jxr_linenumber" name="L40" href="#L40">40</a>  <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">class</strong> SourceSinkTester&lt;S, T, F <strong class="jxr_keyword">extends</strong> SourceSinkFactory&lt;S, T&gt;&gt; <strong class="jxr_keyword">extends</strong> TestCase {
<a class="jxr_linenumber" name="L41" href="#L41">41</a>  
<a class="jxr_linenumber" name="L42" href="#L42">42</a>    <strong class="jxr_keyword">static</strong> <strong class="jxr_keyword">final</strong> String LOREM_IPSUM = <span class="jxr_string">"Lorem ipsum dolor sit amet, consectetur adipiscing "</span>
<a class="jxr_linenumber" name="L43" href="#L43">43</a>        + <span class="jxr_string">"elit. Cras fringilla elit ac ipsum adipiscing vulputate. Maecenas in lorem nulla, ac "</span>
<a class="jxr_linenumber" name="L44" href="#L44">44</a>        + <span class="jxr_string">"sollicitudin quam. Praesent neque elit, sodales quis vestibulum vel, pellentesque nec "</span>
<a class="jxr_linenumber" name="L45" href="#L45">45</a>        + <span class="jxr_string">"erat. Proin cursus commodo lacus eget congue. Aliquam erat volutpat. Fusce ut leo sed "</span>
<a class="jxr_linenumber" name="L46" href="#L46">46</a>        + <span class="jxr_string">"risus tempor vehicula et a odio. Nam aliquet dolor viverra libero rutrum accumsan quis "</span>
<a class="jxr_linenumber" name="L47" href="#L47">47</a>        + <span class="jxr_string">"in augue. Suspendisse id dui in lorem tristique placerat eget vel risus. Sed metus neque, "</span>
<a class="jxr_linenumber" name="L48" href="#L48">48</a>        + <span class="jxr_string">"scelerisque in molestie ac, mattis quis lectus. Pellentesque viverra justo commodo quam "</span>
<a class="jxr_linenumber" name="L49" href="#L49">49</a>        + <span class="jxr_string">"bibendum ut gravida leo accumsan. Nullam malesuada sagittis diam, quis suscipit mauris "</span>
<a class="jxr_linenumber" name="L50" href="#L50">50</a>        + <span class="jxr_string">"euismod vulputate. Pellentesque ultrices tellus sed lorem aliquet pulvinar. Nam lorem "</span>
<a class="jxr_linenumber" name="L51" href="#L51">51</a>        + <span class="jxr_string">"nunc, ultrices at auctor non, scelerisque eget turpis. Nullam eget varius erat. Sed a "</span>
<a class="jxr_linenumber" name="L52" href="#L52">52</a>        + <span class="jxr_string">"lorem id arcu dictum euismod. Fusce lectus odio, elementum ullamcorper mattis viverra, "</span>
<a class="jxr_linenumber" name="L53" href="#L53">53</a>        + <span class="jxr_string">"dictum sit amet lacus.\n"</span>
<a class="jxr_linenumber" name="L54" href="#L54">54</a>        + <span class="jxr_string">"\n"</span>
<a class="jxr_linenumber" name="L55" href="#L55">55</a>        + <span class="jxr_string">"Nunc quis lacus est. Sed aliquam pretium cursus. Sed eu libero eros. In hac habitasse "</span>
<a class="jxr_linenumber" name="L56" href="#L56">56</a>        + <span class="jxr_string">"platea dictumst. Pellentesque molestie, nibh nec iaculis luctus, justo sem lobortis enim, "</span>
<a class="jxr_linenumber" name="L57" href="#L57">57</a>        + <span class="jxr_string">"at feugiat leo magna nec libero. Mauris quis odio eget nisl rutrum cursus nec eget augue. "</span>
<a class="jxr_linenumber" name="L58" href="#L58">58</a>        + <span class="jxr_string">"Sed nec arcu sem. In hac habitasse platea dictumst."</span>;
<a class="jxr_linenumber" name="L59" href="#L59">59</a>  
<a class="jxr_linenumber" name="L60" href="#L60">60</a>    <strong class="jxr_keyword">static</strong> <strong class="jxr_keyword">final</strong> ImmutableMap&lt;String, String&gt; TEST_STRINGS
<a class="jxr_linenumber" name="L61" href="#L61">61</a>        = ImmutableMap.&lt;String, String&gt;builder()
<a class="jxr_linenumber" name="L62" href="#L62">62</a>        .put(<span class="jxr_string">"empty"</span>, <span class="jxr_string">""</span>)
<a class="jxr_linenumber" name="L63" href="#L63">63</a>        .put(<span class="jxr_string">"1 char"</span>, <span class="jxr_string">"0"</span>)
<a class="jxr_linenumber" name="L64" href="#L64">64</a>        .put(<span class="jxr_string">"1 word"</span>, <span class="jxr_string">"hello"</span>)
<a class="jxr_linenumber" name="L65" href="#L65">65</a>        .put(<span class="jxr_string">"2 words"</span>, <span class="jxr_string">"hello world"</span>)
<a class="jxr_linenumber" name="L66" href="#L66">66</a>        .put(<span class="jxr_string">"&#92;&#92;n line break"</span>, <span class="jxr_string">"hello\nworld"</span>)
<a class="jxr_linenumber" name="L67" href="#L67">67</a>        .put(<span class="jxr_string">"&#92;&#92;r line break"</span>, <span class="jxr_string">"hello\rworld"</span>)
<a class="jxr_linenumber" name="L68" href="#L68">68</a>        .put(<span class="jxr_string">"&#92;&#92;r&#92;&#92;n line break"</span>, <span class="jxr_string">"hello\r\nworld"</span>)
<a class="jxr_linenumber" name="L69" href="#L69">69</a>        .put(<span class="jxr_string">"&#92;&#92;n at EOF"</span>, <span class="jxr_string">"hello\nworld\n"</span>)
<a class="jxr_linenumber" name="L70" href="#L70">70</a>        .put(<span class="jxr_string">"&#92;&#92;r at EOF"</span>, <span class="jxr_string">"hello\nworld\r"</span>)
<a class="jxr_linenumber" name="L71" href="#L71">71</a>        .put(<span class="jxr_string">"lorem ipsum"</span>, LOREM_IPSUM)
<a class="jxr_linenumber" name="L72" href="#L72">72</a>        .build();
<a class="jxr_linenumber" name="L73" href="#L73">73</a>  
<a class="jxr_linenumber" name="L74" href="#L74">74</a>    <strong class="jxr_keyword">protected</strong> <strong class="jxr_keyword">final</strong> F factory;
<a class="jxr_linenumber" name="L75" href="#L75">75</a>    <strong class="jxr_keyword">protected</strong> <strong class="jxr_keyword">final</strong> T data;
<a class="jxr_linenumber" name="L76" href="#L76">76</a>    <strong class="jxr_keyword">protected</strong> <strong class="jxr_keyword">final</strong> T expected;
<a class="jxr_linenumber" name="L77" href="#L77">77</a>  
<a class="jxr_linenumber" name="L78" href="#L78">78</a>    <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">final</strong> String suiteName;
<a class="jxr_linenumber" name="L79" href="#L79">79</a>    <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">final</strong> String caseDesc;
<a class="jxr_linenumber" name="L80" href="#L80">80</a>  
<a class="jxr_linenumber" name="L81" href="#L81">81</a>    <a href="../../../../com/google/common/io/SourceSinkTester.html">SourceSinkTester</a>(F factory, T data, String suiteName, String caseDesc, Method method) {
<a class="jxr_linenumber" name="L82" href="#L82">82</a>      <strong class="jxr_keyword">super</strong>(method.getName());
<a class="jxr_linenumber" name="L83" href="#L83">83</a>      <strong class="jxr_keyword">this</strong>.factory = checkNotNull(factory);
<a class="jxr_linenumber" name="L84" href="#L84">84</a>      <strong class="jxr_keyword">this</strong>.data = checkNotNull(data);
<a class="jxr_linenumber" name="L85" href="#L85">85</a>      <strong class="jxr_keyword">this</strong>.expected = checkNotNull(factory.getExpected(data));
<a class="jxr_linenumber" name="L86" href="#L86">86</a>      <strong class="jxr_keyword">this</strong>.suiteName = checkNotNull(suiteName);
<a class="jxr_linenumber" name="L87" href="#L87">87</a>      <strong class="jxr_keyword">this</strong>.caseDesc = checkNotNull(caseDesc);
<a class="jxr_linenumber" name="L88" href="#L88">88</a>    }
<a class="jxr_linenumber" name="L89" href="#L89">89</a>  
<a class="jxr_linenumber" name="L90" href="#L90">90</a>    @Override
<a class="jxr_linenumber" name="L91" href="#L91">91</a>    <strong class="jxr_keyword">public</strong> String getName() {
<a class="jxr_linenumber" name="L92" href="#L92">92</a>      <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">super</strong>.getName() + <span class="jxr_string">" ["</span> + suiteName + <span class="jxr_string">" ["</span> + caseDesc + <span class="jxr_string">"]]"</span>;
<a class="jxr_linenumber" name="L93" href="#L93">93</a>    }
<a class="jxr_linenumber" name="L94" href="#L94">94</a>  
<a class="jxr_linenumber" name="L95" href="#L95">95</a>    <strong class="jxr_keyword">protected</strong> <strong class="jxr_keyword">static</strong> ImmutableList&lt;String&gt; getLines(<strong class="jxr_keyword">final</strong> String string) {
<a class="jxr_linenumber" name="L96" href="#L96">96</a>      <strong class="jxr_keyword">try</strong> {
<a class="jxr_linenumber" name="L97" href="#L97">97</a>        <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">new</strong> <a href="../../../../com/google/common/io/CharSource.html">CharSource</a>() {
<a class="jxr_linenumber" name="L98" href="#L98">98</a>          @Override
<a class="jxr_linenumber" name="L99" href="#L99">99</a>          <strong class="jxr_keyword">public</strong> Reader openStream() <strong class="jxr_keyword">throws</strong> IOException {
<a class="jxr_linenumber" name="L100" href="#L100">100</a>           <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">new</strong> StringReader(string);
<a class="jxr_linenumber" name="L101" href="#L101">101</a>         }
<a class="jxr_linenumber" name="L102" href="#L102">102</a>       }.readLines();
<a class="jxr_linenumber" name="L103" href="#L103">103</a>     } <strong class="jxr_keyword">catch</strong> (IOException e) {
<a class="jxr_linenumber" name="L104" href="#L104">104</a>       <strong class="jxr_keyword">throw</strong> <strong class="jxr_keyword">new</strong> AssertionError();
<a class="jxr_linenumber" name="L105" href="#L105">105</a>     }
<a class="jxr_linenumber" name="L106" href="#L106">106</a>   }
<a class="jxr_linenumber" name="L107" href="#L107">107</a> 
<a class="jxr_linenumber" name="L108" href="#L108">108</a>   @Override
<a class="jxr_linenumber" name="L109" href="#L109">109</a>   <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> tearDown() <strong class="jxr_keyword">throws</strong> IOException {
<a class="jxr_linenumber" name="L110" href="#L110">110</a>     factory.tearDown();
<a class="jxr_linenumber" name="L111" href="#L111">111</a>   }
<a class="jxr_linenumber" name="L112" href="#L112">112</a> 
<a class="jxr_linenumber" name="L113" href="#L113">113</a>   <strong class="jxr_keyword">static</strong> ImmutableList&lt;Method&gt; getTestMethods(Class&lt;?&gt; testClass) {
<a class="jxr_linenumber" name="L114" href="#L114">114</a>     List&lt;Method&gt; result = Lists.newArrayList();
<a class="jxr_linenumber" name="L115" href="#L115">115</a>     <strong class="jxr_keyword">for</strong> (Method method : testClass.getDeclaredMethods()) {
<a class="jxr_linenumber" name="L116" href="#L116">116</a>       <strong class="jxr_keyword">if</strong> (Modifier.isPublic(method.getModifiers())
<a class="jxr_linenumber" name="L117" href="#L117">117</a>           &amp;&amp; method.getReturnType() == <strong class="jxr_keyword">void</strong>.<strong class="jxr_keyword">class</strong>
<a class="jxr_linenumber" name="L118" href="#L118">118</a>           &amp;&amp; method.getParameterTypes().length == 0
<a class="jxr_linenumber" name="L119" href="#L119">119</a>           &amp;&amp; method.getName().startsWith(<span class="jxr_string">"test"</span>)) {
<a class="jxr_linenumber" name="L120" href="#L120">120</a>         result.add(method);
<a class="jxr_linenumber" name="L121" href="#L121">121</a>       }
<a class="jxr_linenumber" name="L122" href="#L122">122</a>     }
<a class="jxr_linenumber" name="L123" href="#L123">123</a>     <strong class="jxr_keyword">return</strong> ImmutableList.copyOf(result);
<a class="jxr_linenumber" name="L124" href="#L124">124</a>   }
<a class="jxr_linenumber" name="L125" href="#L125">125</a> }
</pre>
<hr/>
<div id="footer">Copyright &#169; 2015. All rights reserved.</div>
</body>
</html>
