<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>HtmlEscapersTest xref</title>
<link type="text/css" rel="stylesheet" href="../../../../stylesheet.css" />
</head>
<body>
<div id="overview"><a href="../../../../../../../../apidocs/com/google/common/html/HtmlEscapersTest.html">View Javadoc</a></div><pre>
<a class="jxr_linenumber" name="L1" href="#L1">1</a>   <em class="jxr_comment">/*</em>
<a class="jxr_linenumber" name="L2" href="#L2">2</a>   <em class="jxr_comment"> * Copyright (C) 2009 The Guava Authors</em>
<a class="jxr_linenumber" name="L3" href="#L3">3</a>   <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L4" href="#L4">4</a>   <em class="jxr_comment"> * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except</em>
<a class="jxr_linenumber" name="L5" href="#L5">5</a>   <em class="jxr_comment"> * in compliance with the License. You may obtain a copy of the License at</em>
<a class="jxr_linenumber" name="L6" href="#L6">6</a>   <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L7" href="#L7">7</a>   <em class="jxr_comment"> * <a href="http://www.apache.org/licenses/LICENSE-2." target="alexandria_uri">http://www.apache.org/licenses/LICENSE-2.</a>0</em>
<a class="jxr_linenumber" name="L8" href="#L8">8</a>   <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L9" href="#L9">9</a>   <em class="jxr_comment"> * Unless required by applicable law or agreed to in writing, software distributed under the License</em>
<a class="jxr_linenumber" name="L10" href="#L10">10</a>  <em class="jxr_comment"> * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express</em>
<a class="jxr_linenumber" name="L11" href="#L11">11</a>  <em class="jxr_comment"> * or implied. See the License for the specific language governing permissions and limitations under</em>
<a class="jxr_linenumber" name="L12" href="#L12">12</a>  <em class="jxr_comment"> * the License.</em>
<a class="jxr_linenumber" name="L13" href="#L13">13</a>  <em class="jxr_comment"> */</em>
<a class="jxr_linenumber" name="L14" href="#L14">14</a>  
<a class="jxr_linenumber" name="L15" href="#L15">15</a>  <strong class="jxr_keyword">package</strong> com.google.common.html;
<a class="jxr_linenumber" name="L16" href="#L16">16</a>  
<a class="jxr_linenumber" name="L17" href="#L17">17</a>  <strong class="jxr_keyword">import</strong> <strong class="jxr_keyword">static</strong> com.google.common.html.HtmlEscapers.htmlEscaper;
<a class="jxr_linenumber" name="L18" href="#L18">18</a>  
<a class="jxr_linenumber" name="L19" href="#L19">19</a>  <strong class="jxr_keyword">import</strong> com.google.common.annotations.GwtCompatible;
<a class="jxr_linenumber" name="L20" href="#L20">20</a>  
<a class="jxr_linenumber" name="L21" href="#L21">21</a>  <strong class="jxr_keyword">import</strong> junit.framework.TestCase;
<a class="jxr_linenumber" name="L22" href="#L22">22</a>  
<a class="jxr_linenumber" name="L23" href="#L23">23</a>  <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L24" href="#L24">24</a>  <em class="jxr_javadoccomment"> * Tests for the {@link HtmlEscapers} class.</em>
<a class="jxr_linenumber" name="L25" href="#L25">25</a>  <em class="jxr_javadoccomment"> *</em>
<a class="jxr_linenumber" name="L26" href="#L26">26</a>  <em class="jxr_javadoccomment"> * @author David Beaumont</em>
<a class="jxr_linenumber" name="L27" href="#L27">27</a>  <em class="jxr_javadoccomment"> */</em>
<a class="jxr_linenumber" name="L28" href="#L28">28</a>  @GwtCompatible
<a class="jxr_linenumber" name="L29" href="#L29">29</a>  <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">class</strong> <a href="../../../../com/google/common/html/HtmlEscapersTest.html">HtmlEscapersTest</a> <strong class="jxr_keyword">extends</strong> TestCase {
<a class="jxr_linenumber" name="L30" href="#L30">30</a>  
<a class="jxr_linenumber" name="L31" href="#L31">31</a>    <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testHtmlEscaper() <strong class="jxr_keyword">throws</strong> Exception {
<a class="jxr_linenumber" name="L32" href="#L32">32</a>      assertEquals(<span class="jxr_string">"xxx"</span>, htmlEscaper().escape(<span class="jxr_string">"xxx"</span>));
<a class="jxr_linenumber" name="L33" href="#L33">33</a>      assertEquals(<span class="jxr_string">"&amp;quot;test&amp;quot;"</span>, htmlEscaper().escape(<span class="jxr_string">"\&quot;test\&quot;"</span>));
<a class="jxr_linenumber" name="L34" href="#L34">34</a>      assertEquals(<span class="jxr_string">"&amp;#39;test&amp;#39;"</span>, htmlEscaper().escape(<span class="jxr_string">"\'test'"</span>));
<a class="jxr_linenumber" name="L35" href="#L35">35</a>      assertEquals(<span class="jxr_string">"test &amp;amp; test &amp;amp; test"</span>, htmlEscaper().escape(<span class="jxr_string">"test &amp; test &amp; test"</span>));
<a class="jxr_linenumber" name="L36" href="#L36">36</a>      assertEquals(<span class="jxr_string">"test &amp;lt;&amp;lt; 1"</span>, htmlEscaper().escape(<span class="jxr_string">"test &lt;&lt; 1"</span>));
<a class="jxr_linenumber" name="L37" href="#L37">37</a>      assertEquals(<span class="jxr_string">"test &amp;gt;&amp;gt; 1"</span>, htmlEscaper().escape(<span class="jxr_string">"test &gt;&gt; 1"</span>));
<a class="jxr_linenumber" name="L38" href="#L38">38</a>      assertEquals(<span class="jxr_string">"&amp;lt;tab&amp;gt;"</span>, htmlEscaper().escape(<span class="jxr_string">"&lt;tab&gt;"</span>));
<a class="jxr_linenumber" name="L39" href="#L39">39</a>  
<a class="jxr_linenumber" name="L40" href="#L40">40</a>      <em class="jxr_comment">// Test simple escape of '&amp;'.</em>
<a class="jxr_linenumber" name="L41" href="#L41">41</a>      assertEquals(<span class="jxr_string">"foo&amp;amp;bar"</span>, htmlEscaper().escape(<span class="jxr_string">"foo&amp;bar"</span>));
<a class="jxr_linenumber" name="L42" href="#L42">42</a>  
<a class="jxr_linenumber" name="L43" href="#L43">43</a>      <em class="jxr_comment">// If the string contains no escapes, it should return the arg.</em>
<a class="jxr_linenumber" name="L44" href="#L44">44</a>      <em class="jxr_comment">// Note: assert&lt;b&gt;Same&lt;/b&gt; for this implementation.</em>
<a class="jxr_linenumber" name="L45" href="#L45">45</a>      String s = <span class="jxr_string">"blah blah farhvergnugen"</span>;
<a class="jxr_linenumber" name="L46" href="#L46">46</a>      assertSame(s, htmlEscaper().escape(s));
<a class="jxr_linenumber" name="L47" href="#L47">47</a>  
<a class="jxr_linenumber" name="L48" href="#L48">48</a>      <em class="jxr_comment">// Tests escapes at begin and end of string.</em>
<a class="jxr_linenumber" name="L49" href="#L49">49</a>      assertEquals(<span class="jxr_string">"&amp;lt;p&amp;gt;"</span>, htmlEscaper().escape(<span class="jxr_string">"&lt;p&gt;"</span>));
<a class="jxr_linenumber" name="L50" href="#L50">50</a>  
<a class="jxr_linenumber" name="L51" href="#L51">51</a>      <em class="jxr_comment">// Test all escapes.</em>
<a class="jxr_linenumber" name="L52" href="#L52">52</a>      assertEquals(<span class="jxr_string">"a&amp;quot;b&amp;lt;c&amp;gt;d&amp;amp;"</span>, htmlEscaper().escape(<span class="jxr_string">"a\&quot;b&lt;c&gt;d&amp;"</span>));
<a class="jxr_linenumber" name="L53" href="#L53">53</a>  
<a class="jxr_linenumber" name="L54" href="#L54">54</a>      <em class="jxr_comment">// Test two escapes in a row.</em>
<a class="jxr_linenumber" name="L55" href="#L55">55</a>      assertEquals(<span class="jxr_string">"foo&amp;amp;&amp;amp;bar"</span>, htmlEscaper().escape(<span class="jxr_string">"foo&amp;&amp;bar"</span>));
<a class="jxr_linenumber" name="L56" href="#L56">56</a>  
<a class="jxr_linenumber" name="L57" href="#L57">57</a>      <em class="jxr_comment">// Test many non-escaped characters.</em>
<a class="jxr_linenumber" name="L58" href="#L58">58</a>      s = <span class="jxr_string">"!@#$%^*()_+=-/?&#92;&#92;|]}[{,.;:"</span>
<a class="jxr_linenumber" name="L59" href="#L59">59</a>          + <span class="jxr_string">"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"</span>
<a class="jxr_linenumber" name="L60" href="#L60">60</a>          + <span class="jxr_string">"1234567890"</span>;
<a class="jxr_linenumber" name="L61" href="#L61">61</a>      assertSame(s, htmlEscaper().escape(s));
<a class="jxr_linenumber" name="L62" href="#L62">62</a>    }
<a class="jxr_linenumber" name="L63" href="#L63">63</a>  }
</pre>
<hr/>
<div id="footer">Copyright &#169; 2015. All rights reserved.</div>
</body>
</html>
