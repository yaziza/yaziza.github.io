<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>ListTestSuiteBuilder xref</title>
<link type="text/css" rel="stylesheet" href="../../../../../stylesheet.css" />
</head>
<body>
<div id="overview"><a href="../../../../../../../../../apidocs/com/google/common/collect/testing/ListTestSuiteBuilder.html">View Javadoc</a></div><pre>
<a class="jxr_linenumber" name="L1" href="#L1">1</a>   <em class="jxr_comment">/*</em>
<a class="jxr_linenumber" name="L2" href="#L2">2</a>   <em class="jxr_comment"> * Copyright (C) 2008 The Guava Authors</em>
<a class="jxr_linenumber" name="L3" href="#L3">3</a>   <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L4" href="#L4">4</a>   <em class="jxr_comment"> * Licensed under the Apache License, Version 2.0 (the "License");</em>
<a class="jxr_linenumber" name="L5" href="#L5">5</a>   <em class="jxr_comment"> * you may not use this file except in compliance with the License.</em>
<a class="jxr_linenumber" name="L6" href="#L6">6</a>   <em class="jxr_comment"> * You may obtain a copy of the License at</em>
<a class="jxr_linenumber" name="L7" href="#L7">7</a>   <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L8" href="#L8">8</a>   <em class="jxr_comment"> * <a href="http://www.apache.org/licenses/LICENSE-2." target="alexandria_uri">http://www.apache.org/licenses/LICENSE-2.</a>0</em>
<a class="jxr_linenumber" name="L9" href="#L9">9</a>   <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L10" href="#L10">10</a>  <em class="jxr_comment"> * Unless required by applicable law or agreed to in writing, software</em>
<a class="jxr_linenumber" name="L11" href="#L11">11</a>  <em class="jxr_comment"> * distributed under the License is distributed on an "AS IS" BASIS,</em>
<a class="jxr_linenumber" name="L12" href="#L12">12</a>  <em class="jxr_comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</em>
<a class="jxr_linenumber" name="L13" href="#L13">13</a>  <em class="jxr_comment"> * See the License for the specific language governing permissions and</em>
<a class="jxr_linenumber" name="L14" href="#L14">14</a>  <em class="jxr_comment"> * limitations under the License.</em>
<a class="jxr_linenumber" name="L15" href="#L15">15</a>  <em class="jxr_comment"> */</em>
<a class="jxr_linenumber" name="L16" href="#L16">16</a>  
<a class="jxr_linenumber" name="L17" href="#L17">17</a>  <strong class="jxr_keyword">package</strong> com.google.common.collect.testing;
<a class="jxr_linenumber" name="L18" href="#L18">18</a>  
<a class="jxr_linenumber" name="L19" href="#L19">19</a>  <strong class="jxr_keyword">import</strong> com.google.common.collect.testing.features.CollectionFeature;
<a class="jxr_linenumber" name="L20" href="#L20">20</a>  <strong class="jxr_keyword">import</strong> com.google.common.collect.testing.features.Feature;
<a class="jxr_linenumber" name="L21" href="#L21">21</a>  <strong class="jxr_keyword">import</strong> com.google.common.collect.testing.testers.CollectionSerializationEqualTester;
<a class="jxr_linenumber" name="L22" href="#L22">22</a>  <strong class="jxr_keyword">import</strong> com.google.common.collect.testing.testers.ListAddAllAtIndexTester;
<a class="jxr_linenumber" name="L23" href="#L23">23</a>  <strong class="jxr_keyword">import</strong> com.google.common.collect.testing.testers.ListAddAllTester;
<a class="jxr_linenumber" name="L24" href="#L24">24</a>  <strong class="jxr_keyword">import</strong> com.google.common.collect.testing.testers.ListAddAtIndexTester;
<a class="jxr_linenumber" name="L25" href="#L25">25</a>  <strong class="jxr_keyword">import</strong> com.google.common.collect.testing.testers.ListAddTester;
<a class="jxr_linenumber" name="L26" href="#L26">26</a>  <strong class="jxr_keyword">import</strong> com.google.common.collect.testing.testers.ListCreationTester;
<a class="jxr_linenumber" name="L27" href="#L27">27</a>  <strong class="jxr_keyword">import</strong> com.google.common.collect.testing.testers.ListEqualsTester;
<a class="jxr_linenumber" name="L28" href="#L28">28</a>  <strong class="jxr_keyword">import</strong> com.google.common.collect.testing.testers.ListGetTester;
<a class="jxr_linenumber" name="L29" href="#L29">29</a>  <strong class="jxr_keyword">import</strong> com.google.common.collect.testing.testers.ListHashCodeTester;
<a class="jxr_linenumber" name="L30" href="#L30">30</a>  <strong class="jxr_keyword">import</strong> com.google.common.collect.testing.testers.ListIndexOfTester;
<a class="jxr_linenumber" name="L31" href="#L31">31</a>  <strong class="jxr_keyword">import</strong> com.google.common.collect.testing.testers.ListLastIndexOfTester;
<a class="jxr_linenumber" name="L32" href="#L32">32</a>  <strong class="jxr_keyword">import</strong> com.google.common.collect.testing.testers.ListListIteratorTester;
<a class="jxr_linenumber" name="L33" href="#L33">33</a>  <strong class="jxr_keyword">import</strong> com.google.common.collect.testing.testers.ListRemoveAllTester;
<a class="jxr_linenumber" name="L34" href="#L34">34</a>  <strong class="jxr_keyword">import</strong> com.google.common.collect.testing.testers.ListRemoveAtIndexTester;
<a class="jxr_linenumber" name="L35" href="#L35">35</a>  <strong class="jxr_keyword">import</strong> com.google.common.collect.testing.testers.ListRemoveTester;
<a class="jxr_linenumber" name="L36" href="#L36">36</a>  <strong class="jxr_keyword">import</strong> com.google.common.collect.testing.testers.ListRetainAllTester;
<a class="jxr_linenumber" name="L37" href="#L37">37</a>  <strong class="jxr_keyword">import</strong> com.google.common.collect.testing.testers.ListSetTester;
<a class="jxr_linenumber" name="L38" href="#L38">38</a>  <strong class="jxr_keyword">import</strong> com.google.common.collect.testing.testers.ListSubListTester;
<a class="jxr_linenumber" name="L39" href="#L39">39</a>  <strong class="jxr_keyword">import</strong> com.google.common.collect.testing.testers.ListToArrayTester;
<a class="jxr_linenumber" name="L40" href="#L40">40</a>  <strong class="jxr_keyword">import</strong> com.google.common.testing.SerializableTester;
<a class="jxr_linenumber" name="L41" href="#L41">41</a>  
<a class="jxr_linenumber" name="L42" href="#L42">42</a>  <strong class="jxr_keyword">import</strong> junit.framework.TestSuite;
<a class="jxr_linenumber" name="L43" href="#L43">43</a>  
<a class="jxr_linenumber" name="L44" href="#L44">44</a>  <strong class="jxr_keyword">import</strong> java.util.ArrayList;
<a class="jxr_linenumber" name="L45" href="#L45">45</a>  <strong class="jxr_keyword">import</strong> java.util.Collection;
<a class="jxr_linenumber" name="L46" href="#L46">46</a>  <strong class="jxr_keyword">import</strong> java.util.HashSet;
<a class="jxr_linenumber" name="L47" href="#L47">47</a>  <strong class="jxr_keyword">import</strong> java.util.List;
<a class="jxr_linenumber" name="L48" href="#L48">48</a>  <strong class="jxr_keyword">import</strong> java.util.Set;
<a class="jxr_linenumber" name="L49" href="#L49">49</a>  
<a class="jxr_linenumber" name="L50" href="#L50">50</a>  <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L51" href="#L51">51</a>  <em class="jxr_javadoccomment"> * Creates, based on your criteria, a JUnit test suite that exhaustively tests</em>
<a class="jxr_linenumber" name="L52" href="#L52">52</a>  <em class="jxr_javadoccomment"> * a List implementation.</em>
<a class="jxr_linenumber" name="L53" href="#L53">53</a>  <em class="jxr_javadoccomment"> *</em>
<a class="jxr_linenumber" name="L54" href="#L54">54</a>  <em class="jxr_javadoccomment"> * @author George van den Driessche</em>
<a class="jxr_linenumber" name="L55" href="#L55">55</a>  <em class="jxr_javadoccomment"> */</em>
<a class="jxr_linenumber" name="L56" href="#L56">56</a>  <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">class</strong> ListTestSuiteBuilder&lt;E&gt; <strong class="jxr_keyword">extends</strong>
<a class="jxr_linenumber" name="L57" href="#L57">57</a>      AbstractCollectionTestSuiteBuilder&lt;ListTestSuiteBuilder&lt;E&gt;, E&gt; {
<a class="jxr_linenumber" name="L58" href="#L58">58</a>    <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">static</strong> &lt;E&gt; ListTestSuiteBuilder&lt;E&gt; using(
<a class="jxr_linenumber" name="L59" href="#L59">59</a>        TestListGenerator&lt;E&gt; generator) {
<a class="jxr_linenumber" name="L60" href="#L60">60</a>      <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">new</strong> ListTestSuiteBuilder&lt;E&gt;().usingGenerator(generator);
<a class="jxr_linenumber" name="L61" href="#L61">61</a>    }
<a class="jxr_linenumber" name="L62" href="#L62">62</a>  
<a class="jxr_linenumber" name="L63" href="#L63">63</a>    @Override <strong class="jxr_keyword">protected</strong> List&lt;Class&lt;? <strong class="jxr_keyword">extends</strong> AbstractTester&gt;&gt; getTesters() {
<a class="jxr_linenumber" name="L64" href="#L64">64</a>      List&lt;Class&lt;? <strong class="jxr_keyword">extends</strong> AbstractTester&gt;&gt; testers
<a class="jxr_linenumber" name="L65" href="#L65">65</a>          = Helpers.copyToList(<strong class="jxr_keyword">super</strong>.getTesters());
<a class="jxr_linenumber" name="L66" href="#L66">66</a>  
<a class="jxr_linenumber" name="L67" href="#L67">67</a>      testers.add(CollectionSerializationEqualTester.<strong class="jxr_keyword">class</strong>);
<a class="jxr_linenumber" name="L68" href="#L68">68</a>      testers.add(ListAddAllAtIndexTester.<strong class="jxr_keyword">class</strong>);
<a class="jxr_linenumber" name="L69" href="#L69">69</a>      testers.add(ListAddAllTester.<strong class="jxr_keyword">class</strong>);
<a class="jxr_linenumber" name="L70" href="#L70">70</a>      testers.add(ListAddAtIndexTester.<strong class="jxr_keyword">class</strong>);
<a class="jxr_linenumber" name="L71" href="#L71">71</a>      testers.add(ListAddTester.<strong class="jxr_keyword">class</strong>);
<a class="jxr_linenumber" name="L72" href="#L72">72</a>      testers.add(ListCreationTester.<strong class="jxr_keyword">class</strong>);
<a class="jxr_linenumber" name="L73" href="#L73">73</a>      testers.add(ListEqualsTester.<strong class="jxr_keyword">class</strong>);
<a class="jxr_linenumber" name="L74" href="#L74">74</a>      testers.add(ListGetTester.<strong class="jxr_keyword">class</strong>);
<a class="jxr_linenumber" name="L75" href="#L75">75</a>      testers.add(ListHashCodeTester.<strong class="jxr_keyword">class</strong>);
<a class="jxr_linenumber" name="L76" href="#L76">76</a>      testers.add(ListIndexOfTester.<strong class="jxr_keyword">class</strong>);
<a class="jxr_linenumber" name="L77" href="#L77">77</a>      testers.add(ListLastIndexOfTester.<strong class="jxr_keyword">class</strong>);
<a class="jxr_linenumber" name="L78" href="#L78">78</a>      testers.add(ListListIteratorTester.<strong class="jxr_keyword">class</strong>);
<a class="jxr_linenumber" name="L79" href="#L79">79</a>      testers.add(ListRemoveAllTester.<strong class="jxr_keyword">class</strong>);
<a class="jxr_linenumber" name="L80" href="#L80">80</a>      testers.add(ListRemoveAtIndexTester.<strong class="jxr_keyword">class</strong>);
<a class="jxr_linenumber" name="L81" href="#L81">81</a>      testers.add(ListRemoveTester.<strong class="jxr_keyword">class</strong>);
<a class="jxr_linenumber" name="L82" href="#L82">82</a>      testers.add(ListRetainAllTester.<strong class="jxr_keyword">class</strong>);
<a class="jxr_linenumber" name="L83" href="#L83">83</a>      testers.add(ListSetTester.<strong class="jxr_keyword">class</strong>);
<a class="jxr_linenumber" name="L84" href="#L84">84</a>      testers.add(ListSubListTester.<strong class="jxr_keyword">class</strong>);
<a class="jxr_linenumber" name="L85" href="#L85">85</a>      testers.add(ListToArrayTester.<strong class="jxr_keyword">class</strong>);
<a class="jxr_linenumber" name="L86" href="#L86">86</a>      <strong class="jxr_keyword">return</strong> testers;
<a class="jxr_linenumber" name="L87" href="#L87">87</a>    }
<a class="jxr_linenumber" name="L88" href="#L88">88</a>  
<a class="jxr_linenumber" name="L89" href="#L89">89</a>    <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L90" href="#L90">90</a>  <em class="jxr_javadoccomment">   * Specifies {@link CollectionFeature#KNOWN_ORDER} for all list tests, since</em>
<a class="jxr_linenumber" name="L91" href="#L91">91</a>  <em class="jxr_javadoccomment">   * lists have an iteration ordering corresponding to the insertion order.</em>
<a class="jxr_linenumber" name="L92" href="#L92">92</a>  <em class="jxr_javadoccomment">   */</em>
<a class="jxr_linenumber" name="L93" href="#L93">93</a>    @Override <strong class="jxr_keyword">public</strong> TestSuite createTestSuite() {
<a class="jxr_linenumber" name="L94" href="#L94">94</a>      withFeatures(CollectionFeature.KNOWN_ORDER);
<a class="jxr_linenumber" name="L95" href="#L95">95</a>      <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">super</strong>.createTestSuite();
<a class="jxr_linenumber" name="L96" href="#L96">96</a>    }
<a class="jxr_linenumber" name="L97" href="#L97">97</a>  
<a class="jxr_linenumber" name="L98" href="#L98">98</a>    @Override
<a class="jxr_linenumber" name="L99" href="#L99">99</a>    <strong class="jxr_keyword">protected</strong>
<a class="jxr_linenumber" name="L100" href="#L100">100</a>       List&lt;TestSuite&gt;
<a class="jxr_linenumber" name="L101" href="#L101">101</a>       createDerivedSuites(
<a class="jxr_linenumber" name="L102" href="#L102">102</a>           FeatureSpecificTestSuiteBuilder&lt;
<a class="jxr_linenumber" name="L103" href="#L103">103</a>               ?, ? <strong class="jxr_keyword">extends</strong> OneSizeTestContainerGenerator&lt;Collection&lt;E&gt;, E&gt;&gt; parentBuilder) {
<a class="jxr_linenumber" name="L104" href="#L104">104</a>     List&lt;TestSuite&gt; derivedSuites = <strong class="jxr_keyword">new</strong> ArrayList&lt;TestSuite&gt;(
<a class="jxr_linenumber" name="L105" href="#L105">105</a>         <strong class="jxr_keyword">super</strong>.createDerivedSuites(parentBuilder));
<a class="jxr_linenumber" name="L106" href="#L106">106</a> 
<a class="jxr_linenumber" name="L107" href="#L107">107</a>     <strong class="jxr_keyword">if</strong> (parentBuilder.getFeatures().contains(CollectionFeature.SERIALIZABLE)) {
<a class="jxr_linenumber" name="L108" href="#L108">108</a>       derivedSuites.add(<a href="../../../../../com/google/common/collect/testing/ListTestSuiteBuilder.html">ListTestSuiteBuilder</a>
<a class="jxr_linenumber" name="L109" href="#L109">109</a>           .using(<strong class="jxr_keyword">new</strong> ReserializedListGenerator&lt;E&gt;(parentBuilder.getSubjectGenerator()))
<a class="jxr_linenumber" name="L110" href="#L110">110</a>           .named(getName() + <span class="jxr_string">" reserialized"</span>)
<a class="jxr_linenumber" name="L111" href="#L111">111</a>           .withFeatures(computeReserializedCollectionFeatures(parentBuilder.getFeatures()))
<a class="jxr_linenumber" name="L112" href="#L112">112</a>           .suppressing(parentBuilder.getSuppressedTests())
<a class="jxr_linenumber" name="L113" href="#L113">113</a>           .createTestSuite());
<a class="jxr_linenumber" name="L114" href="#L114">114</a>     }
<a class="jxr_linenumber" name="L115" href="#L115">115</a>     <strong class="jxr_keyword">return</strong> derivedSuites;
<a class="jxr_linenumber" name="L116" href="#L116">116</a>   }
<a class="jxr_linenumber" name="L117" href="#L117">117</a> 
<a class="jxr_linenumber" name="L118" href="#L118">118</a>   <strong class="jxr_keyword">static</strong> <strong class="jxr_keyword">class</strong> ReserializedListGenerator&lt;E&gt; <strong class="jxr_keyword">implements</strong> TestListGenerator&lt;E&gt;{
<a class="jxr_linenumber" name="L119" href="#L119">119</a>     <strong class="jxr_keyword">final</strong> OneSizeTestContainerGenerator&lt;Collection&lt;E&gt;, E&gt; gen;
<a class="jxr_linenumber" name="L120" href="#L120">120</a> 
<a class="jxr_linenumber" name="L121" href="#L121">121</a>     <strong class="jxr_keyword">private</strong> <a href="../../../../../com/google/common/collect/testing/ListTestSuiteBuilder.html">ReserializedListGenerator</a>(OneSizeTestContainerGenerator&lt;Collection&lt;E&gt;, E&gt; gen) {
<a class="jxr_linenumber" name="L122" href="#L122">122</a>       <strong class="jxr_keyword">this</strong>.gen = gen;
<a class="jxr_linenumber" name="L123" href="#L123">123</a>     }
<a class="jxr_linenumber" name="L124" href="#L124">124</a> 
<a class="jxr_linenumber" name="L125" href="#L125">125</a>     @Override
<a class="jxr_linenumber" name="L126" href="#L126">126</a>     <strong class="jxr_keyword">public</strong> SampleElements&lt;E&gt; samples() {
<a class="jxr_linenumber" name="L127" href="#L127">127</a>       <strong class="jxr_keyword">return</strong> gen.samples();
<a class="jxr_linenumber" name="L128" href="#L128">128</a>     }
<a class="jxr_linenumber" name="L129" href="#L129">129</a> 
<a class="jxr_linenumber" name="L130" href="#L130">130</a>     @Override
<a class="jxr_linenumber" name="L131" href="#L131">131</a>     <strong class="jxr_keyword">public</strong> List&lt;E&gt; create(Object... elements) {
<a class="jxr_linenumber" name="L132" href="#L132">132</a>       <strong class="jxr_keyword">return</strong> (List&lt;E&gt;) SerializableTester.reserialize(gen.create(elements));
<a class="jxr_linenumber" name="L133" href="#L133">133</a>     }
<a class="jxr_linenumber" name="L134" href="#L134">134</a> 
<a class="jxr_linenumber" name="L135" href="#L135">135</a>     @Override
<a class="jxr_linenumber" name="L136" href="#L136">136</a>     <strong class="jxr_keyword">public</strong> E[] createArray(<strong class="jxr_keyword">int</strong> length) {
<a class="jxr_linenumber" name="L137" href="#L137">137</a>       <strong class="jxr_keyword">return</strong> gen.createArray(length);
<a class="jxr_linenumber" name="L138" href="#L138">138</a>     }
<a class="jxr_linenumber" name="L139" href="#L139">139</a> 
<a class="jxr_linenumber" name="L140" href="#L140">140</a>     @Override
<a class="jxr_linenumber" name="L141" href="#L141">141</a>     <strong class="jxr_keyword">public</strong> Iterable&lt;E&gt; order(List&lt;E&gt; insertionOrder) {
<a class="jxr_linenumber" name="L142" href="#L142">142</a>       <strong class="jxr_keyword">return</strong> gen.order(insertionOrder);
<a class="jxr_linenumber" name="L143" href="#L143">143</a>     }
<a class="jxr_linenumber" name="L144" href="#L144">144</a>   }
<a class="jxr_linenumber" name="L145" href="#L145">145</a> 
<a class="jxr_linenumber" name="L146" href="#L146">146</a>   <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">static</strong> Set&lt;Feature&lt;?&gt;&gt; computeReserializedCollectionFeatures(
<a class="jxr_linenumber" name="L147" href="#L147">147</a>       Set&lt;Feature&lt;?&gt;&gt; features) {
<a class="jxr_linenumber" name="L148" href="#L148">148</a>     Set&lt;Feature&lt;?&gt;&gt; derivedFeatures = <strong class="jxr_keyword">new</strong> HashSet&lt;Feature&lt;?&gt;&gt;();
<a class="jxr_linenumber" name="L149" href="#L149">149</a>     derivedFeatures.addAll(features);
<a class="jxr_linenumber" name="L150" href="#L150">150</a>     derivedFeatures.remove(CollectionFeature.SERIALIZABLE);
<a class="jxr_linenumber" name="L151" href="#L151">151</a>     derivedFeatures.remove(CollectionFeature.SERIALIZABLE_INCLUDING_VIEWS);
<a class="jxr_linenumber" name="L152" href="#L152">152</a>     <strong class="jxr_keyword">return</strong> derivedFeatures;
<a class="jxr_linenumber" name="L153" href="#L153">153</a>   }
<a class="jxr_linenumber" name="L154" href="#L154">154</a> }
</pre>
<hr/>
<div id="footer">Copyright &#169; 2015. All rights reserved.</div>
</body>
</html>
